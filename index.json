[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "causality/packages/causality-core/src/causalNetCore.js",
    "content": "import { default as Tensor } from './tensor';\nimport { default as Functor } from './functor';\n/**\n * This class CausalNetCore provide access to core function and core tensor\n *\n * @class CausalNetCore\n * @example\n * [EXAMPLE ../examples/core.babel.js]\n */\nclass CausalNetCore{\n    constructor(){\n        this.F = new Functor();\n        this.T = new Tensor();\n    }\n    get CoreFunctor(){\n        return this.F.CoreFunctor; \n    }\n\n    get CoreTensor(){\n        return this.T.CoreTensor; \n    }\n}\nexport default new CausalNetCore();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/causalNetCore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "CausalNetCore",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/causalNetCore.js",
    "importStyle": null,
    "description": "This class CausalNetCore provide access to core function and core tensor",
    "examples": [
      "import { causalNetCore } from 'causal-net.core';\nconsole.log(causalNetCore.CoreTensor);\nconsole.log(causalNetCore.CoreFunctor);"
    ],
    "lineNumber": 13,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetCore"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "static": false,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore#F",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "T",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "static": false,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore#T",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "get",
    "name": "CoreFunctor",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore#CoreFunctor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "get",
    "name": "CoreTensor",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore#CoreTensor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "causalNetCore",
    "memberof": "causality/packages/causality-core/src/causalNetCore.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/causalNetCore.js~causalNetCore",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/causalNetCore.js",
    "importStyle": "causalNetCore",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-core/src/causalNetCore.js~CausalNetCore"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "file",
    "name": "causality/packages/causality-core/src/functor.js",
    "content": "/**\n * class Functor is the primitive class for composing higher class.\n * This class wrap [Ramda](https://ramdajs.com/) for providing Functional programming style method.\n * @class Functor\n */\nclass Functor {\n    constructor(){\n        /**\n         * @private { Object } Ramda instance\n         */\n        this.R = require('ramda');\n    \n        /**\n         * @private { Logger } logger   \n         */        \n        this.logger = console;\n    }\n    /**\n     * This method return core Ramda instance\n     * @readonly\n     * @memberof Functor\n     */\n    get CoreFunctor(){\n        return this.R;\n    }\n    \n    /**\n     *\n     * @param { Array } keys\n     * @param { Object } item\n     * @param { Any } defaultValue - return value in case of not found\n     * @returns { Any } return found value or defaultValue\n     * @memberof Functor\n     */\n    getIn(keys, item, defaultValue){\n        return this.R.pathOr(defaultValue, keys, item);\n    }\n    \n    /**\n     * set value into object by the keys list\n     * @param { Array } keys\n     * @param { Object } value\n     * @param { Object } item - item to set\n     * @returns { Any } return found value or defaultValue\n     * @memberof Functor\n     */\n    setIn(keys, value, item){\n        return this.R.assocPath(keys, value, item);\n    }\n\n    /**\n     * zip two array\n     * @param { Array } pairs - two arrays to zip\n     * @returns { Array } array after zip\n     * @memberof Functor\n     */\n    zip(...pairs){\n        return this.R.zip(...pairs);\n    }\n    /**\n     * Unzip array of pairs to two arrays\n     * @param { Array } pairs - array of pairs to unzip\n     * @returns { [Array1, Array2] } - two arrays \n     * @memberof Functor\n     */\n    unzip(pairs){\n        const R = this.R;\n        const Unzip = (uz, [v1, v2])=>{\n            uz[0] = [...uz[0], v1];\n            uz[1] = [...uz[1], v2];\n            return uz;\n        };\n        return R.reduce(Unzip,[[], []],pairs);\n    }\n}\n\nexport default Functor;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/functor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 9,
    "kind": "class",
    "name": "Functor",
    "memberof": "causality/packages/causality-core/src/functor.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/functor.js~Functor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/functor.js",
    "importStyle": "Functor",
    "description": "class Functor is the primitive class for composing higher class.\nThis class wrap [Ramda](https://ramdajs.com/) for providing Functional programming style method.",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Functor"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 10,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 11,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#R",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#logger",
    "access": "private",
    "description": "",
    "lineNumber": 16,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "get",
    "name": "CoreFunctor",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#CoreFunctor",
    "access": "public",
    "description": "This method return core Ramda instance",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "getIn",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#getIn",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Any } return found value or defaultValue"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "return value in case of not found"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Any "
      ],
      "spread": false,
      "description": "return found value or defaultValue"
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "setIn",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#setIn",
    "access": "public",
    "description": "set value into object by the keys list",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Any } return found value or defaultValue"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "item to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Any "
      ],
      "spread": false,
      "description": "return found value or defaultValue"
    }
  },
  {
    "__docId__": 16,
    "kind": "method",
    "name": "zip",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#zip",
    "access": "public",
    "description": "zip two array",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array after zip"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "pairs",
        "description": "two arrays to zip"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array after zip"
    }
  },
  {
    "__docId__": 17,
    "kind": "method",
    "name": "unzip",
    "memberof": "causality/packages/causality-core/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/functor.js~Functor#unzip",
    "access": "public",
    "description": "Unzip array of pairs to two arrays",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ [Array1, Array2] } - two arrays "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "pairs",
        "description": "array of pairs to unzip"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " [Array1, Array2] "
      ],
      "spread": false,
      "description": "two arrays"
    }
  },
  {
    "__docId__": 18,
    "kind": "file",
    "name": "causality/packages/causality-core/src/index.js",
    "content": "export { default as Tensor } from './tensor';\nexport { default as Functor } from './functor';\nexport { default as Store } from './store';\nexport { default as causalNetCore } from './causalNetCore';\n\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "causality/packages/causality-core/src/store.js",
    "content": "/**\n * class Store is the primitive class for composing higher store class.\n * This class wrap [levelup](https://www.tensorflow.org/js) \n * for connect with abstract-leveldown compliant stores.\n * @class Store\n */\nexport default class Store{\n    constructor(){\n        this.levelup = require('levelup');\n        this.store = null;\n        this.logger = console;\n    }\n    \n    async connect(){\n        throw Error('implement required');\n    }\n\n    /**\n     * Get item given the key\n     * @param { String } key - key name\n     * @param {boolean} [asBuffer=false] - return object or buffer array, default object\n     * @returns { Object } item object \n     * @memberof MemoryCache\n     */\n    async getItem(key, asBuffer=false, noError=false){\n        if(!this.store){\n            throw Error('store is not connect');\n        }\n        return new Promise((resolve, reject)=>{\n            this.store.get(key, {asBuffer}, (err, data)=>{\n                if(err){\n                    if(noError){\n                        resolve({[key]: null});\n                    }\n                    else{\n                        this.logger.debug({key, err});\n                        reject('error read');\n                    }\n                }\n                else{\n                    resolve({[key]: data});\n                }\n            });\n        });\n    }\n    /**\n     * Set new item with the given key and value\n     * @param { String } key - key name of item\n     * @param { Object } data - value of item\n     * @returns { Promise } - new key promise\n     * @memberof MemoryCache\n     */\n    async setItem(key, data, noError=false){\n        if(!this.store){\n            throw Error('store is not connect');\n        }\n        return new Promise((resolve, reject)=>{\n            this.store.put(key, data, (err)=>{\n                if(err){\n                    if(noError){\n                        resolve({[key]: null});\n                    }\n                    else{\n                        this.logger.debug({key, err});\n                        reject('error write');\n                    }\n                }\n                else{\n                    resolve({[key]: data});\n                }\n            });\n        });\n    }\n    /**\n     * Delete item given the item key\n     * @param { String } key - key name to delete\n     * @returns { Promise } deleted key promise\n     * @memberof MemoryCache\n     */\n    async delItem(key, noError=false){\n        if(!this.store){\n            throw Error('store is not connect');\n        }\n        return new Promise((resolve, reject)=>{\n            this.store.del(key, (err)=>{\n                if(err){\n                    if(noError){\n                        resolve(null);\n                    }\n                    else{\n                        this.logger.debug(err);\n                        reject(`error delete ${key}`);\n                    }\n                }\n                else{\n                    resolve(key);\n                }\n            });\n        });\n    }\n    /**\n     * Make name maching function based on prefix path\n     * @param { String } pattern - prefix name\n     * @returns { Function } name matching function\n     * @memberof MemoryCache\n     */\n    makeCheckItemNameFn(pattern){\n        var regex = new RegExp(`${pattern}.*`,'g');\n        return (fileName)=>fileName.match(regex) || [];\n    }\n    \n    /**\n     * Get the current items under the prefix path\n     * @param { String } namePrefix\n     * @returns { Array } list of item names\n     * @memberof MemoryCache\n     */\n    async getItemList(namePrefix, noError=false){\n        if(!this.store){\n            throw Error('store is not connect');\n        }\n        const NameTester = this.makeCheckItemNameFn(namePrefix);\n        return new Promise((resolve, reject)=>{\n            let fileList = [];\n            this.store.createKeyStream()\n                .on('data', (key) =>{\n                    key = key.toString('utf8');\n                    if(NameTester(key).length===1){\n                        fileList.push(key);\n                    }\n                })\n                .on('close', () => resolve(fileList) )\n                .on('end',  () => resolve(fileList) )\n                .on('error', (err) =>{ \n                    if(noError){\n                        resolve(fileList);\n                    }\n                    else{\n                        this.logger.debug( err );\n                        reject(`error getItemList ${namePrefix}`);\n                    }\n                });\n        });\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "Store",
    "memberof": "causality/packages/causality-core/src/store.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/store.js~Store",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/store.js",
    "importStyle": "Store",
    "description": "class Store is the primitive class for composing higher store class.\nThis class wrap [levelup](https://www.tensorflow.org/js) \nfor connect with abstract-leveldown compliant stores.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Store"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "levelup",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#levelup",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "store",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#store",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#logger",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#connect",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 26,
    "kind": "method",
    "name": "getItem",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#getItem",
    "access": "public",
    "description": "Get item given the key",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Object } item object "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "asBuffer",
        "description": "return object or buffer array, default object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": "item object"
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "setItem",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#setItem",
    "access": "public",
    "description": "Set new item with the given key and value",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - new key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name of item"
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "value of item"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "new key promise"
    }
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "delItem",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#delItem",
    "access": "public",
    "description": "Delete item given the item key",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } deleted key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name to delete"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "deleted key promise"
    }
  },
  {
    "__docId__": 29,
    "kind": "method",
    "name": "makeCheckItemNameFn",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#makeCheckItemNameFn",
    "access": "public",
    "description": "Make name maching function based on prefix path",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Function } name matching function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "pattern",
        "description": "prefix name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Function "
      ],
      "spread": false,
      "description": "name matching function"
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "name": "getItemList",
    "memberof": "causality/packages/causality-core/src/store.js~Store",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-core/src/store.js~Store#getItemList",
    "access": "public",
    "description": "Get the current items under the prefix path",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } list of item names"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "namePrefix",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "list of item names"
    }
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "causality/packages/causality-core/src/tensor.js",
    "content": "/**\n * class Tensor is the primitive class for composing higher class.\n * This class wrap [tensorflowjs](https://www.tensorflow.org/js) for providing tensor calculation\n * @class Tensor\n */\nexport default class Tensor{\n    constructor(){\n        this.T = require('@tensorflow/tfjs');\n        require('@tensorflow/tfjs-node');\n        require('@tensorflow/tfjs-node-gpu');\n        this.logger = console;\n    }\n    /**\n     * This method return the core tensor instance\n     * @readonly\n     * @memberof Tensor\n     */\n    get CoreTensor(){\n        return this.T;\n    }\n\n    isTensor(object){\n       return object instanceof this.T.Tensor; \n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/tensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "class",
    "name": "Tensor",
    "memberof": "causality/packages/causality-core/src/tensor.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/tensor.js",
    "importStyle": "Tensor",
    "description": "class Tensor is the primitive class for composing higher class.\nThis class wrap [tensorflowjs](https://www.tensorflow.org/js) for providing tensor calculation",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Tensor"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 33,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "T",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#T",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#logger",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "get",
    "name": "CoreTensor",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#CoreTensor",
    "access": "public",
    "description": "This method return the core tensor instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "isTensor",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#isTensor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "content": "import { default as BaseImgDataset } from './baseImgDataset';\nimport { Platform } from 'causal-net.utils';\nimport { LoggerMixins } from 'causal-net.log';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { MemCacheMixins, memDownCache } from 'causal-net.memcache';\nimport { default as Function } from './function';\nimport { default as ImageDatasetfetchMixins } from './imageDatasetfetch.mixins';\nimport { default as ImageDatasetPreprocessingMixins } from './imageDatasetPreprocessing.mixins';\nimport { default as ImageDatasetGeneratorMixins } from './imageDatasetGenerator.mixins';\nimport { PreprocessingMixins, imagePreprocessing } from 'causal-net.preprocessing';\n\nexport default class MnistDataset extends Platform.mixWith(BaseImgDataset, \n        [ ImageDatasetfetchMixins,\n          ImageDatasetPreprocessingMixins,\n          PreprocessingMixins,\n          ImageDatasetGeneratorMixins,\n          MemCacheMixins,\n          StorageMixins,\n          LoggerMixins ]){\n    \n    constructor(...args){\n        super(...args);\n        this.F = new Function();\n        this.Storage = indexDBStorage;\n        this.MemCache = memDownCache;\n        const PreprocessingSample = async (masterSampleBuffer, sampleSize)=>{\n            return await imagePreprocessing.imageSplit(masterSampleBuffer, sampleSize);\n        };\n        const PreprocessingLabel = async (masterLabelBuffer, labelSize)=>{\n            return await imagePreprocessing.imageSplit(masterLabelBuffer, labelSize);\n        };\n        this.setPreprocessingFunctions(PreprocessingSample, PreprocessingLabel);\n    }\n};\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 39,
    "kind": "class",
    "name": "MnistDataset",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "importStyle": "MnistDataset",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 40,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#F",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "MemCache",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseImgDataset.js",
    "content": "export default class BaseImgDataset{\n    constructor(datasetConfigure){\n        this.configuration = datasetConfigure;\n        const {numSamples, sampleSize, numClasses} = this.configuration;\n        this.dataSize = [numSamples, ...sampleSize];\n        \n        this.numSamples = numSamples;\n        this.sampleSize = sampleSize;\n        this.numClass   = numClasses;\n    }\n    \n    summary(){\n        return this.configuration;\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseImgDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 45,
    "kind": "class",
    "name": "BaseImgDataset",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/baseImgDataset.js",
    "importStyle": "BaseImgDataset",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 46,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "configuration",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#configuration",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "dataSize",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#dataSize",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "member",
    "name": "numSamples",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#numSamples",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "sampleSize",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#sampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "numClass",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#numClass",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "summary",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#summary",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseNLPDataset.js",
    "content": "export default class BaseNLPDataset{\n    constructor(datasetConfigure){\n        this.configuration = datasetConfigure;\n        const {numSamples, sampleSize, numClasses} = this.configuration;\n        this.dataSize = [numSamples, ...sampleSize];\n        \n        this.numSamples = numSamples;\n        this.sampleSize = sampleSize;\n        this.numClass   = numClasses;\n    }\n    \n    summary(){\n        return this.configuration;\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseNLPDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "BaseNLPDataset",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/baseNLPDataset.js",
    "importStyle": "BaseNLPDataset",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "configuration",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#configuration",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "dataSize",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#dataSize",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "numSamples",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#numSamples",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "sampleSize",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#sampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "numClass",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#numClass",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "summary",
    "memberof": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseNLPDataset.js~BaseNLPDataset#summary",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseTabularDataset.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseTabularDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/dataGenetator.mixins.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/dataGenetator.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/function.js",
    "content": "import { Function as BaseFunction} from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { default as FunctionMixins} from './function.mixins';\nexport default class Function extends Platform.mixWith(BaseFunction,[FunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-datasets/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[FunctionMixins])"
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/function.mixins.js",
    "content": "const FunctionMixins = (BaseFunctionClass)=> class extends BaseFunctionClass{ \n    getImgBufferSize(imgSize){\n        const R = this.R;\n        return R.reduce((s,d)=>s*d,1,imgSize);\n    }\n    generatorWithIndex(items){\n        const R = this.R;\n        return R.addIndex(R.map)((d, idx)=>[idx, d], items);\n    }\n    splitTrainTestSet(items, splitIndex){\n        const R = this.R;\n        return R.splitAt(splitIndex, items);\n    }\n};\nexport default FunctionMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/function.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "FunctionMixins",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/function.mixins.js",
    "importStyle": "FunctionMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseFunctionClass"
    ]
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "getImgBufferSize",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#getImgBufferSize",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "imgSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "generatorWithIndex",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#generatorWithIndex",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "splitTrainTestSet",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#splitTrainTestSet",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "items",
        "types": [
          "*"
        ]
      },
      {
        "name": "splitIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "content": "\nimport { Sampling } from 'causal-net.utils';\nconst DatasetfetchMixins = (BaseImageClass)=> class extends BaseClass{ \n    async fetchLabelChunk(saveDir, labelChunk){\n        let labelChunkUrl = this.configuration.datasetUrl + labelChunk;\n        let labelSavePath = saveDir + labelChunk;\n        return await this.storage.fetchFile(labelChunkUrl, labelSavePath);\n    }\n\n    async fetchSampleChunk(saveDir, sampleChunk){\n        let sampleChunkUrl = this.configuration.datasetUrl + sampleChunk;\n        let sammpleSavePath = saveDir + sampleChunk;\n        this.logger.debug({sampleChunkUrl, sammpleSavePath});\n        return await this.storage.fetchPNGFile(sampleChunkUrl, sammpleSavePath);\n    }\n\n    selectChunks(numchunks, selectBy='random'){\n        let chunkIdxs = Sampling.choice(this.configuration.chunkList, numchunks);\n        return chunkIdxs.map((idx, ith)=>([`data-chunk-${idx}.png`,`label-chunk-${idx}`]));\n    }\n\n    async fetchDataset(saveDir='/mnist/',numchunks=10, selectBy='random'){\n        let selectedChunks = this.selectChunks(numchunks, selectBy);\n        this.savedChunks = [];\n        for(let [sampleChunk, labelChunk] of selectedChunks){\n            let samplePath = await this.fetchSampleChunk(saveDir, sampleChunk);\n            let labelPath = await this.fetchLabelChunk(saveDir, labelChunk);\n            this.savedChunks.push([samplePath, labelPath]);\n            this.progress({saveChunks:[samplePath, labelPath]});\n        };\n        return this.F.unzip(this.savedChunks);\n    }\n};\nexport default ImageDatasetfetchMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "DatasetfetchMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~DatasetfetchMixins",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "BaseImageClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "content": "import { Sampling } from 'causal-net.utils';\nconst ImageDatasetGeneratorMixins = (BaseImageClass)=> class extends BaseImageClass{ \n    \n    getTrainTestSet(trainSize=null){\n        trainSize = trainSize||parseInt(this.savedPreprocessing.length*0.9);\n        const [trainSet, testSet] = this.F.splitTrainTestSet(this.savedPreprocessing, trainSize);\n        return [trainSet, testSet];\n    }\n\n    makeSampleGenerator(sampleIdxSet, batchSize=null, start=0, end=null){\n        if(!this.savedPreprocessing){\n            throw Error('preprocessing must be performed');\n        }\n        batchSize = batchSize?batchSize:sampleIdxSet.length;\n        const _batches = this.F.hsplitEvery(sampleIdxSet, batchSize);\n        const batches = Sampling.choice(_batches, _batches.length);\n        if(end === null){\n            end = batches.length;\n        }\n        let nextIndex = start, iterationCount = 0, step = 1;\n        const batchGenerator = {\n                next: async()=>{\n                    let batchSamples = [], batchLabels = [];\n                    for(let [samplePath, labelPath] of batches[nextIndex]){\n                        let sampleItem = await this.preProcessingStorage.getItem(samplePath,true);\n                        let labelItem = await this.preProcessingStorage.getItem(labelPath,true);\n                        batchSamples = [...batchSamples, sampleItem[samplePath]];\n                        batchLabels = [...batchLabels, labelItem[labelPath]];\n                    }\n                    nextIndex += step;\n                    let idx = iterationCount;\n                    iterationCount++;\n                    return {idx, batchSize, data:[batchSamples, batchLabels]};\n                },\n                *[Symbol.iterator]() {\n                    while(nextIndex < end){\n                        yield this.next();\n                    }\n                }\n            };\n        return batchGenerator;\n    }\n};\nexport default ImageDatasetGeneratorMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "ImageDatasetGeneratorMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "importStyle": "ImageDatasetGeneratorMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseImageClass"
    ]
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getTrainTestSet",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins#getTrainTestSet",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "trainSize",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "makeSampleGenerator",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins#makeSampleGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "sampleIdxSet",
        "types": [
          "*"
        ]
      },
      {
        "name": "batchSize",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "start",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "end",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "content": "import { Stream } from 'causal-net.utils';\nconst ImageDatasetPreprocessingMixins = (BaseImageClass)=> class extends BaseImageClass{ \n    makePreprocessingStream(saveDir){\n        const ImageBufferSize = this.F.getImgBufferSize(this.sampleSize);\n        const LabelBufferSize = this.numClass;\n        this.logger.debug({imageBufferSize: ImageBufferSize, \n                     labelBufferSize: LabelBufferSize});\n        const TransformFn = (chunk, chunkEncoding, afterTransformFn) =>{\n            const TransformAsync = async ()=>{\n                let sampleBuffer = chunk.sample;\n                let labelBuffer = chunk.label;\n                this.logger.debug({sampleBuffer, labelBuffer});\n                let preprocessedImgBuffer = await this.PreprocessingSampleFn(sampleBuffer, ImageBufferSize);\n                let preprocessedLabelBuffer = await this.PreprocessingLabelFn(labelBuffer, LabelBufferSize);\n                return { processedChunk: this.F.zip(preprocessedImgBuffer, preprocessedLabelBuffer), \n                         chunkIdx: chunk.idx};\n            };\n            TransformAsync(chunk).then(processedChunk=>{\n                afterTransformFn(null, processedChunk);\n            });\n        };\n        \n        const WriteFn = (processedChunk, chunkEncoding, callback) =>{\n            \n            const WriteAsync = async (processedChunk)=>{\n                let generator = this.F.generatorWithIndex(processedChunk.processedChunk);\n                let chunkIdx  = processedChunk.chunkIdx;\n                let samplePath  = [], labelPath = [];\n                for(let [idx, [sample, label]] of generator){\n                    let chunkSamplePath = await this.preProcessingStorage\n                            .setItem(saveDir + 'sample/' + chunkIdx + '/' + idx + '/', sample);    \n                    let chunkLabelPath = await this.preProcessingStorage\n                            .setItem(saveDir + 'label/' + chunkIdx + '/' + idx + '/', label);\n                    samplePath = [...samplePath, chunkSamplePath];\n                    labelPath = [...labelPath, chunkLabelPath];\n                    this.progress({preprocessing: [chunkSamplePath, chunkLabelPath]});\n                }\n                return this.F.zip(samplePath, labelPath);\n            };\n            \n            WriteAsync(processedChunk).then((result)=>{\n                if(this.savedPreprocessing){\n                    this.savedPreprocessing = [...this.savedPreprocessing, ...result];\n                }\n                else{\n                    this.savedPreprocessing = result;\n                }\n                callback();\n            });\n        };\n        let duplexer = Stream.makeDuplex(WriteFn);\n        let transformer = Stream.makeTransform(TransformFn);\n        let stream = duplexer.pipe(transformer).pipe(duplexer);\n        return stream;\n    }\n\n    async preprocessingDataset(saveDir='/preprocessing/mnist/',storeInMemory=false){\n        this.preProcessingStorage = (storeInMemory)?this.memCache:this.storage;\n        let stream = this.makePreprocessingStream(saveDir);\n        let generator = this.F.generatorWithIndex(this.savedChunks);\n        for(let [idx, [samplePath, labelPath]] of generator){\n            let sampleItem = await this.storage.getItem(samplePath, true);\n            let labelItem = await this.storage.getItem(labelPath, true);\n            let sample = sampleItem[samplePath];\n            let label = labelItem[labelPath];\n            this.logger.debug({sample, label});\n            stream.push({idx, sample, label});\n        }\n        stream.push(null);\n        return new Promise((resolve, reject)=>{\n            stream.on('finish', ()=>{\n                resolve(this.savedPreprocessing);\n            });\n        });\n    }\n};\nexport default ImageDatasetPreprocessingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "class",
    "name": "ImageDatasetPreprocessingMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "importStyle": "ImageDatasetPreprocessingMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseImageClass"
    ]
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "makePreprocessingStream",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#makePreprocessingStream",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "savedPreprocessing",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#savedPreprocessing",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "preprocessingDataset",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#preprocessingDataset",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "/preprocessing/mnist/",
        "defaultValue": "/preprocessing/mnist/"
      },
      {
        "name": "storeInMemory",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "preProcessingStorage",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#preProcessingStorage",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/index.js",
    "content": "export {default as MNIST} from './MNIST.ImgDataset';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "content": "import { Tensor as BaseTensor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { default as DenseMixins } from './dense.mixins';\n/**\n * This CausalNetLayer class provide common use layers\n * { mixWith: [ LayerMixins, DenseMixins ] }\n * @class CausalNetLayer\n * @extends BaseTensor\n */\nclass CausalNetLayers extends platform.mixWith(BaseTensor, \n    [ DenseMixins ] ){\n    constructor(){\n        super();\n        this.layerNames = [];\n    }\n    nameGenerator(layerType){\n        const layerIdx = this.layerNames.length; \n        let newName = layerType + '/' + layerIdx;\n        this.layerNames.push(newName);\n        return newName;\n    }\n}\n\nexport default new CausalNetLayers();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "class",
    "name": "CausalNetLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "importStyle": null,
    "description": "This CausalNetLayer class provide common use layers\n{ mixWith: [ LayerMixins, DenseMixins ] }",
    "lineNumber": 10,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetLayer"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 88,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "layerNames",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers#layerNames",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "nameGenerator",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers#nameGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "layerType",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "causalNetLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~causalNetLayers",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js",
    "importStyle": "causalNetLayers",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-layer/src/CausalNetLayers/causalNetLayers.js~CausalNetLayers"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js",
    "content": "const DenseLayerMixins = (PipelineClass)=> class extends PipelineClass{\n    /**\n     * Simple dense layer\n     * @param { Number } inputSize - size of net input\n     * @param { Number } outputSize - size of net output\n     * @param { String } name - layer name\n     * @returns { Object } layer\n     */\n    dense(inputSize, outputSize, name){\n        if(!name){\n            name = this.nameGenerator('dense');\n        }\n        return { \n            Name: name, Type: 'Layer',\n            Parameters: { Weight: [inputSize, outputSize], Bias: [outputSize] },\n            Net: function(value, params){\n                    let trace = {};\n                    let {Weight, Bias} = params;\n                    let result = value.dot(Weight).add(Bias);\n                    return { result, trace };\n                }\n            };\n    }\n};\nexport default DenseLayerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "class",
    "name": "DenseLayerMixins",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js~DenseLayerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js",
    "importStyle": "DenseLayerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "dense",
    "memberof": "causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js~DenseLayerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetLayers/dense.mixins.js~DenseLayerMixins#dense",
    "access": "public",
    "description": "Simple dense layer",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Object } layer"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "inputSize",
        "description": "size of net input"
      },
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "outputSize",
        "description": "size of net output"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "layer name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": "layer"
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetLayers/index.js",
    "content": "export { default as causalNetLayers } from './causalNetLayers';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetLayers/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "content": "import { Tensor as BaseTensor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { default as ParameterMixins } from './parameter.mixins';\nimport { default as parameterfunctor } from './parameterFunctor';\n/**\n * This CausalNetLayer class provide common use layers\n * { mixWith: [ DenseMixins ] }\n * @class CausalNetLayer\n * @extends BaseTensor\n */\nclass CausalNetParameters extends platform.mixWith(BaseTensor, [StorageMixins, ParameterMixins] ){\n    constructor(storage, parameterfunctor){\n        super();\n        this.parameters = null;\n        this.Storage = storage;\n        this.F = parameterfunctor;\n        this.R = this.F.CoreFunctor;\n    }\n}   \n\nexport default new CausalNetParameters(indexDBStorage, parameterfunctor);",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "class",
    "name": "CausalNetParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "importStyle": null,
    "description": "This CausalNetLayer class provide common use layers\n{ mixWith: [ DenseMixins ] }",
    "lineNumber": 12,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetLayer"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 98,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "parameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters#F",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters#R",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "causalNetParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~causalNetParameters",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js",
    "importStyle": "causalNetParameters",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-layer/src/CausalNetParameters/causalNetParameters.js~CausalNetParameters"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetParameters/index.js",
    "content": "export { default as causalNetParameters } from './causalNetParameters';\nexport { default as ParameterMixins } from './parameter.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetParameters/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js",
    "content": "const ParameterMixins = (BaseParameterClass)=> class extends BaseParameterClass{ \n    \n    get PredictParameters(){\n        if(!this.parameters || !this.parameters.Predict){\n            throw Error('parameters is not set');\n        }\n        return this.parameters.Predict;\n    }\n    \n    get EncodeParameters(){\n        if(!this.parameters || !this.parameters.Encode){\n            throw Error('parameters is not set');\n        }\n        return this.parameters.Encode;\n    }\n    \n    get DecodeParameters(){\n        if(!this.parameters || !this.parameters.Decode){\n            throw Error('parameters is not set');\n        }\n        return this.parameters.Decode;\n    }\n    \n    set PredictParameters(predictParameters){\n        this.parameters = (this.parameters)? this.parameters: {};\n        this.parameters.Predict = predictParameters;\n    }\n    \n    set EncodeParameters(encodeParameters){\n        this.parameters = (this.parameters)? this.parameters: {};\n        this.parameters.Encode = encodeParameters;\n    }\n    \n    set DecodeParameters(decodeParameters){\n        this.parameters = (this.parameters)? this.parameters: {};\n        this.parameters.Decode = decodeParameters;\n    }\n\n    set ParameterSizes(parameterSizes){\n        this.parameterSizes = parameterSizes;\n    }\n\n    get ParameterSizes(){\n        if(!this.parameterSizes){\n            throw Error('parameterSizes is not set');\n        }\n        return this.parameterSizes;\n    }\n    \n    get SaveModelDir(){\n        return 'saveModel/';\n    }\n    \n    exportParameters(){\n        if(!this.parameters){\n            throw Error('parameter is not set');\n        }\n        return (async ()=>{\n            const Fn = async (param)=>(Array.from(await param.data()));\n            let params = await this.extractParamFromTensorDict(this.parameters, Fn);\n            return params;\n        })();\n    }\n\n    \n    async extractParamFromTensorDict(params, fn){\n        const R = this.R;\n        const Traveller = async (params, fn)=>{\n            if(this.isTensor(params)){\n                return await fn(params);\n            }\n            else{\n                let kVals = R.toPairs(params);\n                let res = {};\n                for(let [k, val] of kVals){\n                    res[k] = await Traveller(val, fn); \n                }\n                return res;\n            }\n        };\n        return await Traveller(params, fn);\n    }\n    \n    async parametersSummary(){\n        if(!this.parameters){\n            throw Error('parameter must be set');\n        }\n        const Fn = async (param)=>Array.from(await param.mean().data());\n        return await this.extractParamFromTensorDict(this.parameters, Fn);\n    }\n    \n    initParamSizesByLayers(layers){\n        const R = this.R, T = this.T, F = this.F;\n        const GetParamSize = R.compose(R.fromPairs, R.map(p=>[p.Name, p.Parameters]));\n        const PredictSize = GetParamSize(F.getIn(['Predict'], layers, []));\n        const EncodeSize  = GetParamSize(F.getIn(['Encode'], layers, []));\n        const DecodeSize  = GetParamSize(F.getIn(['Decode'], layers, [])); \n        this.ParameterSizes = {PredictSize, EncodeSize, DecodeSize};\n    }\n\n    importParameters(paramObject){\n        const T = this.T, R = this.R, F = this.F;\n        console.log({paramObject});\n        let predictParamObject = F.getIn(['Predict'], paramObject, {});\n        let encodeParamObject  = F.getIn(['Encode'], paramObject, {});\n        let decodeParamObject  = F.getIn(['Decode'], paramObject, {});\n        const { PredictSize, EncodeSize, DecodeSize } = this.ParameterSizes;\n        const SetOrInit = ( initPredict, paramObject )=>{\n                    return F.parameterMapWithKey((keys, paramSize)=>{\n                        let paramValue = this.F.getIn(keys, paramObject, null);\n                        if(paramValue === null){\n                            return T.variable(T.randomNormal(paramSize).asType('float32'));\n                        }\n                        else{\n                            return T.variable(T.tensor(paramValue, paramSize, 'float32'));\n                        }                        \n                    }, initPredict);\n                };\n        this.PredictParameters = SetOrInit( PredictSize, predictParamObject );\n        this.EncodeParameters  = SetOrInit( EncodeSize, encodeParamObject );\n        this.DecodeParameters  = SetOrInit( DecodeSize, decodeParamObject ); \n    }\n\n    setOrInitParams(layers, paramObject){\n        this.initParamSizesByLayers(layers);\n        this.importParameters(paramObject);\n    }\n\n    async getSavedParamList(){\n        const Storage = this.Storage, SaveDir = this.SaveModelDir;\n        let fileList = await Storage.getFileList(SaveDir);\n        return fileList.map(fileName=>fileName.replace(SaveDir,''));\n    }\n\n    async saveParams(fileName){\n        const SaveDir = this.SaveModelDir;\n        const Storage = this.Storage;\n        let params = await this.exportParameters();\n        await Storage.writeFile(SaveDir + fileName, JSON.stringify(params));\n        return params;\n    }\n    async loadParams(fileName){\n        const Storage = this.Storage, SaveDir = this.SaveModelDir;\n        let strParams = await Storage.readFile(SaveDir+fileName);\n        let params = JSON.parse(strParams);\n        this.importParameters(params);\n        return await this.Parameters;\n    }\n};\n\nexport default ParameterMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "ParameterMixins",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js",
    "importStyle": "ParameterMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseParameterClass"
    ]
  },
  {
    "__docId__": 107,
    "kind": "get",
    "name": "PredictParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#PredictParameters",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "get",
    "name": "EncodeParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#EncodeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "get",
    "name": "DecodeParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#DecodeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "set",
    "name": "PredictParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#PredictParameters",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "parameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "set",
    "name": "EncodeParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#EncodeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 114,
    "kind": "set",
    "name": "DecodeParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#DecodeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 116,
    "kind": "set",
    "name": "ParameterSizes",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#ParameterSizes",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "parameterSizes",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#parameterSizes",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "get",
    "name": "ParameterSizes",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#ParameterSizes",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "get",
    "name": "SaveModelDir",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#SaveModelDir",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "exportParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#exportParameters",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "extractParamFromTensorDict",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#extractParamFromTensorDict",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "parametersSummary",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#parametersSummary",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "initParamSizesByLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#initParamSizesByLayers",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "layers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "importParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#importParameters",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "paramObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "setOrInitParams",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#setOrInitParams",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "layers",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "getSavedParamList",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#getSavedParamList",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "saveParams",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#saveParams",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "loadParams",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameter.mixins.js~ParameterMixins#loadParams",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "content": "import {Functor as BaseFunctor} from 'causal-net.core';\nimport {platform} from 'causal-net.utils';\nimport {default as ParameterFunctorMixins } from './parameterFunctor.mixins';\n\nclass ParameterFunctor extends platform.mixWith(BaseFunctor, [ ParameterFunctorMixins ] ){\n    constructor(){\n        super();\n    }\n}\n\nexport default new ParameterFunctor();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "ParameterFunctor",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js~ParameterFunctor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "platform.mixWith(BaseFunctor, [ ParameterFunctorMixins ] )"
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js~ParameterFunctor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js~ParameterFunctor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "parameterFunctor",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js~parameterFunctor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js",
    "importStyle": "parameterFunctor",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.js~ParameterFunctor"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js",
    "content": "const ParameterFunctorMixins = (FunctorClass)=> class extends FunctorClass{ \n    isParameter(val){\n        const R = this.R;\n        return R.ifElse(R.is(Array), R.all(R.is(Number)), R.always(false))(val);\n    }\n    parameterMapWithKey(fn, parameterObject){\n        const R = this.R;\n        \n        const Res = (keys, subObject) => R.compose(R.fromPairs, \n                        R.map(([key, subObject])=>{\n                            if(this.isParameter(subObject)){\n                                return [key, fn([...keys, key], subObject)];\n                            }\n                            else{\n                                if(R.is(Object, subObject)){\n                                    return [key, Res([...keys, key], subObject)];\n                                }\n                                else{\n                                    return [key, subObject];\n                                }\n                            }\n                        }), R.toPairs)(subObject);\n        return Res([], parameterObject);\n    }        \n};\n\nexport default ParameterFunctorMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "ParameterFunctorMixins",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js~ParameterFunctorMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js",
    "importStyle": "ParameterFunctorMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "FunctorClass"
    ]
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "isParameter",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js~ParameterFunctorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js~ParameterFunctorMixins#isParameter",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "parameterMapWithKey",
    "memberof": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js~ParameterFunctorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetParameters/parameterFunctor.mixins.js~ParameterFunctorMixins#parameterMapWithKey",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameterObject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "content": "import { Tensor as BaseTensor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { default as RunnerMixins } from './runner.mixins';\n/**\n * This CausalNetLayer class provide common use layers\n * { mixWith: [ DenseMixins ] }\n * @class CausalNetLayer\n * @extends BaseTensor\n * @example\n * [EXAMPLE ../examples/runner.mixins.babel.js]\n */\nclass CausalNetRunner extends platform.mixWith(BaseTensor, [ RunnerMixins ] ){\n    constructor(){\n        super();\n    }\n}\n\nexport default new CausalNetRunner();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "class",
    "name": "CausalNetRunner",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js~CausalNetRunner",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "importStyle": null,
    "description": "This CausalNetLayer class provide common use layers\n{ mixWith: [ DenseMixins ] }",
    "examples": [
      "[EXAMPLE  ERROR! /home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js, /home/huynhnguyen/github/causality/packages/causality-layer/src/examples/runner.mixins.babel.js]"
    ],
    "lineNumber": 12,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetLayer"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 143,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js~CausalNetRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js~CausalNetRunner#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "causalNetRunner",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js~causalNetRunner",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js",
    "importStyle": "causalNetRunner",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-layer/src/CausalNetRunner/causalNetRunner.js~CausalNetRunner"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetRunner/index.js",
    "content": "export { default as causalNetRunner } from './causalNetRunner';\nexport { default as RunnerMixins } from './runner.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetRunner/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js",
    "content": "/**\n * This RunnerMixins class provide methods for runner class.\n * @class RunnerMixins\n * @extends BaseRunnerClass\n */\nconst RunnerMixins = ( BaseRunnerClass )=> class extends BaseRunnerClass{\n    set NetParameters(parameters){\n        this.netParameters = parameters;\n    }\n    set NetLayers(netLayers){\n        this.netLayers = netLayers;\n    }\n    get NetParameters(){\n        if(!this.netParameters){\n            throw Error('netParameters is not set');\n        }\n        return this.netParameters;\n    }\n    get NetLayers(){\n        if(!this.netLayers){\n            throw Error('netLayers is not set');\n        }\n        return this.netLayers;\n    }\n    runOpFlow(value, flow, parameters){\n        const R = this.R;\n        const OpsRunner = R.addIndex(R.reduce)(R.__,{result: value, trace: {}}, flow);\n        var {result, trace} = OpsRunner(({result, trace}, node, idx)=>{\n            if(node.Parameter){\n                let params = parameters[node.Parameter];\n                result = result[node.Op](params, ...node.Args);\n            }\n            else{\n                result = result[node.Op](...node.Args);    \n            };\n            trace[idx] = result.shape;\n            return {result, trace};\n        });\n        return {result, trace};\n    }\n\n    runOpLayer(value, net, parameters){\n        let { result, trace } = net(value, parameters);\n        return {result, trace};\n    }\n    runLayer(value, layerConfigure, layerParameters){\n        const {Name, Type, Flow, Net} = layerConfigure;\n        if(Type === 'Tensor'){\n            let {result, trace} = this.runOpFlow(value, Flow, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else if(Type === 'Layer'){\n            let {result, trace} = this.runOpLayer(value, Net, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else{\n            throw Error('type must be either Layer or Tensor');\n        }\n    }\n\n    tracing(traces, name, trace){\n        if(traces){\n            traces.push({[name]: trace});\n        }\n    }\n    run(layers, samples, parameters, traces=null){\n        let pipeValue = {PipeInput: samples}, lastLayer = 'PipeInput';\n        for(let layer of layers){\n            let layerOutput = this.runLayer(pipeValue[lastLayer], layer, parameters[layer.Name]);\n            pipeValue[layer.Name] = layerOutput[layer.Name];\n            lastLayer = layer.Name;\n            this.tracing(traces, layer.Name, layerOutput.trace);\n        }\n        if(traces){\n            this.logger.debug({traces});\n        }\n        return pipeValue[lastLayer];\n    }\n\n    get Predictor(){\n        let predictLayers = this.NetLayers.Predict;\n        let predictParameters = this.NetParameters.PredictParameters;\n        return (samples)=>{\n            return this.run(predictLayers, samples, predictParameters);\n        };\n    }\n    get Encoder(){\n        let encodeLayers = this.NetLayers.Encode;\n        let encodeParameters = this.NetParameters.EncodeParameters;\n        return (samples)=>{\n            return this.run(encodeLayers, samples, encodeParameters);\n        };\n    }\n    get Decoder(){\n        let decodeLayers = this.NetLayers.Decode;\n        let decodeParameters = this.NetParameters.DecodeParameters;\n        return (samples)=>{\n            return this.run(decodeLayers, samples, decodeParameters);\n        };\n    }\n};\n\nexport default RunnerMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "RunnerMixins",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js",
    "importStyle": "RunnerMixins",
    "description": "This RunnerMixins class provide methods for runner class.",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RunnerMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 148,
    "kind": "set",
    "name": "NetParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#NetParameters",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "netParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#netParameters",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "set",
    "name": "NetLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#NetLayers",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "netLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#netLayers",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "NetParameters",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#NetParameters",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "get",
    "name": "NetLayers",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#NetLayers",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "runOpFlow",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#runOpFlow",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "flow",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "runOpLayer",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#runOpLayer",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "net",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "runLayer",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#runLayer",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerConfigure",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerParameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Name\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "tracing",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#tracing",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "traces",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "trace",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "run",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#run",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "layers",
        "types": [
          "*"
        ]
      },
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      },
      {
        "name": "traces",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "get",
    "name": "Predictor",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#Predictor",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "Encoder",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#Encoder",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "get",
    "name": "Decoder",
    "memberof": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/CausalNetRunner/runner.mixins.js~RunnerMixins#Decoder",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/index.js",
    "content": "export { causalNetLayers } from './CausalNetLayers/index';\nexport { causalNetParameters, ParameterMixins } from './CausalNetParameters/index';\nexport { causalNetRunner, RunnerMixins } from './CausalNetRunner/index';\nexport { default as NetMixins } from './net.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/net.mixins.js",
    "content": "/**\n * This NetMixins class provide mixin for building pipeline\n * @class NetMixins\n * @extends BasePipelineClass\n * @example\n * [EXAMPLE ../examples/net.mixins.babel.js]\n */\nconst NetMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    setByConfig(pipelineConfig){\n        if(super.setByConfig){\n            super.setByConfig(pipelineConfig);\n        }\n        this.logger.groupBegin('set Net by config');\n        const { Net } = pipelineConfig;\n        const { Layers, Parameters } = Net; \n        this.Layers = Layers;       \n        this.Parameters.setOrInitParams(Layers, Parameters);\n        this.logger.groupEnd();\n    }\n\n    set Layers(layers){\n        this.netLayers = layers;\n    }\n\n    get Layers(){\n        if(!this.netLayers){\n            throw Error('netLayers is not set');\n        }\n        return this.netLayers;\n    }\n\n    set Parameters(parameters){\n        this.netParameters = parameters;\n    }\n    get Parameters(){\n        if(!this.netParameters){\n            throw Error('netRunner is not set');\n        }\n        return this.netParameters;\n    }\n    set Net(runner){\n        this.netRunner = runner;\n    }\n    get Net(){\n        this.netRunner.NetLayers = this.Layers;\n        this.netRunner.NetParameters = this.Parameters;\n        return this.netRunner;\n    }\n};\n\nexport default NetMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/net.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "NetMixins",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/net.mixins.js",
    "importStyle": "NetMixins",
    "description": "This NetMixins class provide mixin for building pipeline",
    "examples": [
      "import { causalNetParameters, causalNetLayers, causalNetRunner, NetMixins } from 'causal-net.layer';\nimport { causalNetCore } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { termLogger } from 'causal-net.log';\nconst PipeLineConfigure = {\n    Net: { \n            Parameters: { Predict: null, Encode: null, Decode: null },\n            Layers: { \n                Predict: [  causalNetLayers.dense(4, 3), \n                            causalNetLayers.dense(3, 2)], \n                Encode: [ causalNetLayers.dense(4, 2) ], \n                Decode: [ causalNetLayers.dense(4, 2) ] \n            }\n    }\n}\nclass SimplePipeline extends platform.mixWith(Tensor, [NetMixins]){\n    constructor(netParameters, netRunner, logger){\n        super();\n        this.logger = logger;\n        this.Parameters = netParameters;\n        this.Net = netRunner;\n    }\n}\nconst T = causalNetCore.CoreTensor;\n(async ()=>{\n    let pipeline = new SimplePipeline(causalNetParameters, causalNetRunner, termLogger);\n    pipeline.setByConfig(PipeLineConfigure);\n    console.log([ pipeline.Layers,\n                  pipeline.Parameters,\n                  pipeline.Net ]);   \n})().catch(err=>{\n    console.error({err});\n});"
    ],
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "NetMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "setByConfig",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#setByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "pipelineConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "set",
    "name": "Layers",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Layers",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "netLayers",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#netLayers",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "get",
    "name": "Layers",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Layers",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "set",
    "name": "Parameters",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "netParameters",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#netParameters",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "get",
    "name": "Parameters",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "set",
    "name": "Net",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Net",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "netRunner",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#netRunner",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "get",
    "name": "Net",
    "memberof": "causality/packages/causality-layer/src/net.mixins.js~NetMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/net.mixins.js~NetMixins#Net",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "causality/packages/causality-log/src/baseLogger.js",
    "content": "/**\n * This BaseLogger class provided abstract class for extending new logger class\n * @class BaseLog\n */\nclass BaseLogger{\n    constructor(){\n        this.AcceptedLevels = {debug: 0, log:1, warn:2, error: 3};\n        this.rAcceptedLevels = {0:'debug', 1: 'log', 2: 'warn', 3: 'error'};\n        this.level = this.AcceptedLevels['debug'];\n    }\n    set Level(level){\n        if(this.AcceptedLevels[level]!==undefined){\n            this.level = this.AcceptedLevels[level];    \n        }\n        else{\n            throw Error(`${level} must be one of ${Object.keys(this.AcceptedLevels)}`);\n        }\n    }\n    get Level(){\n        return this.rAcceptedLevels[this.level];\n    }\n\n    connect(){\n        throw Error('implement required');\n    }\n\n    log(message){\n        throw Error('implement required');\n    }\n    \n    warn(message){\n        throw Error('implement required');\n    }\n    \n    error(message){\n        throw Error('implement required');\n    }\n\n    debug(message){\n        throw Error('implement required');\n    }\n\n    groupBegin(name){\n        throw Error('implement required');\n    }\n\n    groupEnd(){\n        throw Error('implement required');\n    }\n\n    progressBegin(range){\n        throw Error('implement required');\n    }\n\n    progressUpdate(message){\n        throw Error('implement required');\n    }\n\n    progressEnd(message){\n        throw Error('implement required');\n    }\n}\n\nexport default BaseLogger;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/baseLogger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "class",
    "name": "BaseLogger",
    "memberof": "causality/packages/causality-log/src/baseLogger.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/baseLogger.js",
    "importStyle": "BaseLogger",
    "description": "This BaseLogger class provided abstract class for extending new logger class",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BaseLog"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 178,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "AcceptedLevels",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#AcceptedLevels",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"debug\": *, \"log\": number, \"warn\": number, \"error\": number}"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "rAcceptedLevels",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#rAcceptedLevels",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"0\": string, \"1\": string, \"2\": string, \"3\": string}"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "name": "level",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#level",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "set",
    "name": "Level",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#Level",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "Level",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#Level",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#connect",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#log",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "warn",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#warn",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "error",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#error",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#debug",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "groupBegin",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#groupBegin",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "groupEnd",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#groupEnd",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "progressBegin",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#progressBegin",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "range",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "progressUpdate",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#progressUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "progressEnd",
    "memberof": "causality/packages/causality-log/src/baseLogger.js~BaseLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLogger.js~BaseLogger#progressEnd",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "causality/packages/causality-log/src/index.js",
    "content": "export { default as termLogger } from './termLogger';\nexport { default as LoggerMixins } from './logger.mixins';\n\nexport { default as BaseLogger } from './baseLogger';\n\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "causality/packages/causality-log/src/logger.mixins.js",
    "content": "import {default as BaseLogger } from './baseLogger';\nimport { assert } from 'causal-net.utils';\n/**\n * This LoggerMixins class provides mixins for accquiring logger\n * @class LoggerMixins\n * @extends BaseClass\n * @example\n * [EXAMPLE ../examples/logger.mixins.babel.js]\n */\nconst LoggerMixins = (BaseClass)=> class extends BaseClass{\n    \n    set Logger(logger){\n        assert.beInstanceOf(logger, BaseLogger);\n        this.logger = logger;\n    }\n    \n    get Logger(){\n        if(!this.logger){\n            throw Error('logger is not set');\n        }\n        return this.logger;\n    }\n};\n\nexport default LoggerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/logger.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "class",
    "name": "LoggerMixins",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/logger.mixins.js",
    "importStyle": "LoggerMixins",
    "description": "This LoggerMixins class provides mixins for accquiring logger",
    "examples": [
      "import { LoggerMixins, termLogger, BaseLogger } from 'causal-net.log';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [LoggerMixins]){\n    constructor(){\n        super();\n        this.Logger = termLogger;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Logger instanceof BaseLogger);"
    ],
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LoggerMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 198,
    "kind": "set",
    "name": "Logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#logger",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "get",
    "name": "Logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "causality/packages/causality-log/src/prettyJson.js",
    "content": "// origin code from https://github.com/lucygilbert/json-display/blob/master/json-display.js\n// Copyright (c) 2017 Lucy Gilbert\nexport default class JsonView{\n    constructor(){\n    }\n    static JSONDisplay(json, openLevelsArg, styleOptionsArg) {\n        var DEFAULT_STYLE_OPTIONS = {\n          root: { tag: 'pre', style: 'padding: 5px; font-size: 1rem;' },\n          titleContainer: { tag: 'div', style: 'margin-bottom: 3px;' },\n          title: { tag: 'span', style: 'cursor: pointer;' },\n          titleText: { tag: 'span', style: '' },\n          openButton: { \n            tag: 'span',\n            style: 'display: inline-block; margin: 0px 7px 0px 2px; border-top: 5px solid transparent; '\n                 + 'border-bottom: 5px solid transparent; border-left: 5px solid black;',\n          },\n          contentsContainer: { tag: 'div', style: 'padding-left: 18px;' },\n          keyValuePair: { tag: 'span', style: 'display: block; margin-bottom: 2px;' },\n          key: { tag: 'span', style: 'color: darkblue;' },\n          symbolValue: { tag: 'span', style: 'color: darkgreen;' },\n          stringValue: { tag: 'span', style: 'color: crimson;' },\n          numberValue: { tag: 'span', style: 'color: blue;' },\n          booleanValue: { tag: 'span', style: 'color: blue;' },\n          nullValue: { tag: 'span', style: 'color: blue;' },\n        };\n        var openLevels = isNaN(parseInt(openLevelsArg)) ? Infinity : parseInt(openLevelsArg);\n        var styleOptions = typeof styleOptionsArg === 'object' \n                           ? mergeStyleOptions(DEFAULT_STYLE_OPTIONS, styleOptionsArg)\n                           : DEFAULT_STYLE_OPTIONS;\n    \n        if (typeof Object.assign != 'function') {\n          Object.assign = function(target) {\n            if (target == null) {\n              throw new TypeError('Cannot convert undefined or null to object');\n            }\n    \n            var to = Object(target);\n    \n            for (var index = 1; index < arguments.length; index++) {\n              var nextSource = arguments[index];\n    \n              if (nextSource != null) {\n                for (var nextKey in nextSource) {\n                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                  }\n                }\n              }\n            }\n            return to;\n          };\n        }\n    \n        function render() {\n          var element = document.createElement(styleOptions.root.tag);\n          element.style.cssText = styleOptions.root.style;\n    \n          if (json === null || json === undefined) {\n            var voidElement = getValue(null);\n            element.appendChild(voidElement);\n          } else if (json instanceof Date) {\n            var dateElement = getValue(json.toISOString());\n            element.appendChild(dateElement);\n          } else if (typeof json !== 'object') {\n            var nonExpandableElement = getValue(json);\n            element.appendChild(nonExpandableElement);\n          } else {\n            var title = Array.isArray(json) ? 'Array[' + json.length + ']' : 'Object';\n            var thisLevelIsClosed = openLevels < 1;\n            element.appendChild(getTitle(title, null, thisLevelIsClosed));\n            element.appendChild(convertJsonToElements(json, 1));\n          }\n    \n          return element;\n        }\n    \n        function convertJsonToElements(json, index) {\n          var thisLevelIsClosed = index > openLevels;\n          var nextLevelIsClosed = index + 1 > openLevels;\n          var container = getContentsContainer(thisLevelIsClosed);\n          for (var key in json) {\n            if (Array.isArray(json[key])) {\n              container.appendChild(getTitle('Array[' + json[key].length + ']', key, nextLevelIsClosed));\n              container.appendChild(convertJsonToElements(json[key], index + 1));\n            } else if (json[key] === null || json[key] === undefined) {\n              container.appendChild(getStandardPair(key, null));\n            } else if (json[key] instanceof Date) {\n              container.appendChild(getStandardPair(key, json[key].toISOString()));\n            } else if (typeof json[key] === 'object') {\n              container.appendChild(getTitle('Object', key, nextLevelIsClosed));\n              container.appendChild(convertJsonToElements(json[key], index + 1));\n            } else {\n              container.appendChild(getStandardPair(key, json[key]));\n            }\n          }\n          if (typeof Object.getOwnPropertySymbols === 'function') {\n            Object.getOwnPropertySymbols(json).forEach(function(symbol) {\n              container.appendChild(getStandardPair(symbol.toString(), json[symbol]));\n            });\n          }\n    \n          return container;\n        }\n    \n        function getTitle(titleText, optionalKey, levelIsClosed) {\n          var currentlyClosed = levelIsClosed;\n          var containerElement = document.createElement(styleOptions.titleContainer.tag);\n          containerElement.style.cssText = styleOptions.titleContainer.style;\n          containerElement.setAttribute('data-test', 'titleContainer');\n          var textElement = document.createElement(styleOptions.titleText.tag);\n          var titleElement = document.createElement(styleOptions.title.tag);\n          titleElement.style.cssText = styleOptions.title.style;\n          textElement.style.cssText = styleOptions.titleText.style;\n    \n          titleElement.appendChild(getOpenButton(levelIsClosed));\n          if (optionalKey) {\n            textElement.appendChild(getKey(optionalKey));\n          }\n          textElement.appendChild(document.createTextNode(titleText));\n          titleElement.appendChild(textElement);\n    \n          titleElement.onclick = function () {\n            var openButton = titleElement.firstChild;\n            var objectContents = titleElement.parentNode.nextSibling;\n            objectContents.style.display = currentlyClosed ? 'block' : 'none';\n            openButton.style.transform = currentlyClosed ? 'rotate(90deg)' : 'rotate(0deg)';\n            currentlyClosed = !currentlyClosed;\n          };\n    \n          containerElement.appendChild(titleElement);\n          return containerElement;\n        }\n    \n        function getOpenButton(levelIsClosed) {\n          var buttonElement = document.createElement(styleOptions.openButton.tag);\n          buttonElement.style.cssText = styleOptions.openButton.style;\n          buttonElement.style.transform = levelIsClosed ? 'rotate(0deg)' : 'rotate(90deg)';\n          return buttonElement;\n        }\n    \n        function getContentsContainer(isClosed) {\n          var containerElement = document.createElement(styleOptions.contentsContainer.tag);\n          containerElement.setAttribute('data-test', 'contentsContainer');\n          containerElement.style.cssText = styleOptions.contentsContainer.style;\n          containerElement.style.display = (isClosed ? 'none' : 'block');\n          return containerElement;\n        }\n    \n        function getStandardPair(key, value) {\n          var pairElement = document.createElement(styleOptions.keyValuePair.tag);\n          pairElement.style.cssText = styleOptions.keyValuePair.style;\n          pairElement.appendChild(getKey(key));\n          pairElement.appendChild(getValue(value));\n          return pairElement;\n        }\n    \n        function getKey(name) {\n          var keyElement = document.createElement(styleOptions.key.tag);\n          keyElement.style.cssText = styleOptions.key.style;\n          keyElement.appendChild(document.createTextNode(name + ': '));\n          return keyElement;\n        }\n    \n        function getValue(value) {\n          var valueElement;\n          var nullType = 'object';\n          switch (typeof value) {\n            case 'symbol':\n              valueElement = document.createElement(styleOptions.symbolValue.tag);\n              valueElement.style.cssText = styleOptions.symbolValue.style;\n              valueElement.appendChild(document.createTextNode(value.toString()));\n              break;\n            case 'string':\n              valueElement = document.createElement(styleOptions.stringValue.tag);\n              valueElement.style.cssText = styleOptions.stringValue.style;\n              valueElement.appendChild(document.createTextNode('\"' + value + '\"'));\n              break;\n            case 'number':\n              valueElement = document.createElement(styleOptions.numberValue.tag);\n              valueElement.style.cssText = styleOptions.numberValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n            case 'boolean':\n              valueElement = document.createElement(styleOptions.booleanValue.tag);\n              valueElement.style.cssText = styleOptions.booleanValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n            case nullType:\n              valueElement = document.createElement(styleOptions.nullValue.tag);\n              valueElement.style.cssText = styleOptions.nullValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n          }\n          return valueElement;\n        }\n    \n        function mergeStyleOptions(defaults, overrides) {\n          var merged = {};\n          for (var key in defaults) {\n            merged[key] = Object.assign({}, defaults[key], overrides[key]);\n          }\n          return merged;\n        }\n    \n        return render();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/prettyJson.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "class",
    "name": "JsonView",
    "memberof": "causality/packages/causality-log/src/prettyJson.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/prettyJson.js",
    "importStyle": "JsonView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 203,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "JSONDisplay",
    "memberof": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView.JSONDisplay",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "json",
        "types": [
          "*"
        ]
      },
      {
        "name": "openLevelsArg",
        "types": [
          "*"
        ]
      },
      {
        "name": "styleOptionsArg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLogger.js",
    "content": "import { default as BaseLogger } from './baseLogger';\nimport { default as LogNodeMixins } from './termLogger.mixins.node';\nimport { default as LogWebMixins } from './termLogger.mixins.web';\nimport { platform } from 'causal-net.utils';\n/**\n * This TermLogger provide isomorphic logger\n * { mixWith : { 'node': [LogNodeMixins], 'web': [WebNodeMixins] } }\n * @class TermLogger\n * @extends BaseLogger\n * @example\n * [EXAMPLE ../examples/log.babel.js]\n */\nclass TermLogger extends platform.mixWith(BaseLogger, \n        { node:[LogNodeMixins], \n          web:[LogWebMixins] } ){\n    constructor(){\n        super();\n        /**@private { Array } stack of groups */\n        this.groupStack = [];\n    }\n    \n    groupBegin(name){   \n        let group = {name, beginTime: new Date()};\n        this.groupStack.push(group);\n        let indentSpace = '';\n        this.log(`${indentSpace}${group.name}: begin at ${group.beginTime}`);\n    }\n    groupEnd(){\n        if(this.groupStack.length > 0){\n            let group = this.groupStack.pop();\n            let indentSpace = '';\n            this.log(`${indentSpace}${group.name}: end after ${(new Date() - group.beginTime)} (ms)`);\n        }\n    }\n}\nexport default new TermLogger();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLogger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 206,
    "kind": "class",
    "name": "TermLogger",
    "memberof": "causality/packages/causality-log/src/termLogger.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLogger.js~TermLogger",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLogger.js",
    "importStyle": null,
    "description": "This TermLogger provide isomorphic logger\n{ mixWith : { 'node': [LogNodeMixins], 'web': [WebNodeMixins] } }",
    "examples": [
      "import { termLogger } from 'causal-net.log';\n\ntermLogger.log('this is text');\ntermLogger.log({'name':'this is text'});\n\ntermLogger.log({'father':{'name':'this is text','alias':'this is another text'}});\ntermLogger.log({'father':{'name':{sub:'this is text'},'alias':'this is another text'}});\ntermLogger.log({'array':[0,1,2,3,4]});\ntermLogger.log({'array':[{a:0}, {b:1}, {c:2},  {d:4},  {e:6}]});\n\ntermLogger.Level = 'debug';\nconsole.log(termLogger.Level);\ntermLogger.log({'not to show': true});\ntermLogger.Level = 'log';\nconsole.log(termLogger.Level);\n\ntermLogger.progressBegin(5);\nfor(let i of [1,2,3,4,5]){\n    termLogger.progressUpdate({current: i});\n}\ntermLogger.progressEnd();\n\ntermLogger.groupBegin('group A');\ntermLogger.groupBegin('group B');\ntermLogger.groupBegin('group C');\ntermLogger.groupEnd();\ntermLogger.groupEnd();\ntermLogger.groupEnd();"
    ],
    "lineNumber": 42,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TermLogger"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 207,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/termLogger.js~TermLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.js~TermLogger#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "groupStack",
    "memberof": "causality/packages/causality-log/src/termLogger.js~TermLogger",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.js~TermLogger#groupStack",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "groupBegin",
    "memberof": "causality/packages/causality-log/src/termLogger.js~TermLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.js~TermLogger#groupBegin",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "groupEnd",
    "memberof": "causality/packages/causality-log/src/termLogger.js~TermLogger",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.js~TermLogger#groupEnd",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "termLogger",
    "memberof": "causality/packages/causality-log/src/termLogger.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLogger.js~termLogger",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLogger.js",
    "importStyle": "termLogger",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-log/src/termLogger.js~TermLogger"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLogger.mixins.node.js",
    "content": "import * as cliProgress from 'cli-progress';\n\nconst LogNodeMixins = (LogClass)=> class extends LogClass{\n    connect(channel){\n        this.currentBar = false;\n    }\n    log(message){\n        //TODO: make decorator \n        this.currentBar = false;\n        if(this.level >= this.AcceptedLevels['log']){\n            return null;\n        }\n        console.log(message);\n    }\n    progressBegin(range){\n        this.processCounter += 1;\n        this.currentBar = new cliProgress.Bar({}, cliProgress.Presets.shades_classic);\n        this.currentBar.setTotal(range);\n    }\n    progressUpdate(progressMessage){\n        if(!this.currentBar){\n            this.progressBegin();\n        }\n        this.processCounter += 1;\n        this.currentBar.update(this.processCounter);\n    }\n    progressEnd(){\n        this.currentBar.stop();\n        this.processCounter = 0;\n    }\n    debug(message){\n        \n        if(this.level >= this.AcceptedLevels['debug']){\n            return null;\n        }\n        console.debug(message);\n    }\n\n    warn(message){\n        \n        if(this.level >= this.AcceptedLevels['warn']){\n            return null;\n        }\n        console.warn(message);\n    }\n\n    error(message){\n        \n        if(this.level >= this.AcceptedLevels['error']){\n            return null;\n        }\n        console.error(message);\n    }\n};\n\nexport default LogNodeMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLogger.mixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "class",
    "name": "LogNodeMixins",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLogger.mixins.node.js",
    "importStyle": "LogNodeMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "LogClass"
    ]
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#connect",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "currentBar",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#currentBar",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#log",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "progressBegin",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#progressBegin",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "range",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "processCounter",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#processCounter",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "progressUpdate",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#progressUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "progressMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "progressEnd",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#progressEnd",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#debug",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "warn",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#warn",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "error",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.node.js~LogNodeMixins#error",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLogger.mixins.web.js",
    "content": "import {default as JsonView} from './prettyJson';\nconst LogWebMixins = (LogClass)=> class extends LogClass{\n    connect(documentEl=null){\n        documentEl = documentEl||document.body;\n        let node = document.createElement(\"ul\");\n        node.style.cssText = \"list-style-type: none;\";\n        documentEl.appendChild(node);\n        this.frameEl = documentEl;\n        this.loggerEl = documentEl.getElementsByTagName(\"ul\")[0];\n        this.colorCode = { debug: '#f1f1f1',\n                             log: '#010101', \n                            warn: '#eae26e', \n                           error: '#ea6e78' };\n    }\n    scrollBottom(element=null){\n        element = element || this.frameEl;\n        element.scrollTop = element.scrollHeight - element.clientHeight;\n    }\n    progress(processMessage){\n        // let node = this.loggerEl.getElementsByTagName(\"li:nth-last-of-type(1)\");\n        let LINodes = this.loggerEl.getElementsByTagName(\"li\");\n        let node = LINodes[LINodes.length-1];\n        if(!node || node.classList.contains(\"logger-progress\")){\n            //create new el\n            node = document.createElement(\"li\");\n            node.classList.add(\"logger-progress\");\n            this.loggerEl.appendChild(node);\n        }\n        let jsonNode = JsonView.JSONDisplay(processMessage);\n        var date = new Date();\n        node.innerHTML = `<p style=\"font-size: 12px; text-align:right\">${date}</p>`;\n        node.appendChild(jsonNode);\n        this.scrollBottom();\n    }\n    log(message, style=''){\n        if(this.level >= this.AcceptedLevels['log']){\n            return null;\n        }\n        if(!this.loggerEl || !this.loggerEl.appendChild){\n            this.connect();\n        }\n        let node = document.createElement(\"li\");\n        node.style.cssText = 'border-bottom: 1px solid #dedede;';       \n        let jsonNode = JsonView.JSONDisplay(message);\n        var date = new Date();\n        node.innerHTML = `<p style=\"font-size: 12px; text-align:right\">${date}</p>`;\n        jsonNode.style.cssText += ';'+style;\n        node.appendChild(jsonNode);\n        this.loggerEl.appendChild(node);\n        this.scrollBottom();\n        console.log(message);\n    }\n\n    debug(message){\n        if(this.level >= this.AcceptedLevels['debug']){\n            return null;\n        }\n        \n        let style = 'color:' + this.colorCode['debug'];\n        this.log(message, style);      \n    }\n\n    warn(message){\n        if(this.level >= this.AcceptedLevels['warn']){\n            return null;\n        }\n        let style = 'color:' + this.colorCode['warn'];\n        this.log(message, style);\n    }\n\n    error(message){\n        if(this.level >= this.AcceptedLevels['error']){\n            return null;\n        }\n        let style = 'color:' + this.colorCode['error'];\n        this.log(message, style);\n    }\n};\n\nexport default LogWebMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLogger.mixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "class",
    "name": "LogWebMixins",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLogger.mixins.web.js",
    "importStyle": "LogWebMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "LogClass"
    ]
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#connect",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "documentEl",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "frameEl",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#frameEl",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "loggerEl",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#loggerEl",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "colorCode",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#colorCode",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"debug\": string, \"log\": string, \"warn\": string, \"error\": string}"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "scrollBottom",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#scrollBottom",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "progress",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#progress",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "processMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#log",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "style",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#debug",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "warn",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#warn",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "error",
    "memberof": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLogger.mixins.web.js~LogWebMixins#error",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/index.js",
    "content": "export { default as memDownCache } from './memdownCache';\nexport { default as MemCacheMixins } from './memcache.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memcache.mixins.js",
    "content": "\nconst MemCacheMixins = (BaseClass)=> class extends BaseClass{\n    /**\n     * This methods return summary about items of the current memcache \n     * @returns\n     */\n    async memCacheSummary(){\n        return await this.memCache.getItemList();\n    }\n    \n    set MemCache(memCache){\n        this.memCache = memCache;\n    }\n\n    get MemCache(){\n        return this.memCache;\n    }\n};\nexport default MemCacheMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memcache.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "class",
    "name": "MemCacheMixins",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memcache.mixins.js",
    "importStyle": "MemCacheMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseClass"
    ]
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "memCacheSummary",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#memCacheSummary",
    "access": "public",
    "description": "This methods return summary about items of the current memcache ",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "set",
    "name": "MemCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "memCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#memCache",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "get",
    "name": "MemCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memdownCache.js",
    "content": "import { platform } from 'causal-net.utils';\nimport { Store as BaseMemCache } from 'causal-net.core';\nimport { default as MemorizingMixins } from './memorizing.mixins';\n/**\n * This MemdownCache provide memcache implement based on \n * [memdown](https://www.npmjs.com/package/memdown)\n * { mixWith: [ MemorizingMixins ] }\n * @class MemoryCache\n * @extends BaseMemCache\n */\nclass MemdownCache extends platform.mixWith( BaseMemCache,\n    [ MemorizingMixins ]){\n    constructor(){\n        super();\n        this.connect();\n    }\n    /**\n     * Connect to database, this function shall be call when construct instance\n     * @memberof MemdownCache\n     */\n    connect(){\n        let memdown = require('memdown');\n        this.store = this.levelup(memdown());        \n    }\n}\n\nexport default new MemdownCache();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memdownCache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "MemdownCache",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memdownCache.js",
    "importStyle": null,
    "description": "This MemdownCache provide memcache implement based on \n[memdown](https://www.npmjs.com/package/memdown)\n{ mixWith: [ MemorizingMixins ] }",
    "lineNumber": 11,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MemoryCache"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 249,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache#connect",
    "access": "public",
    "description": "Connect to database, this function shall be call when construct instance",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "store",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache",
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache#store",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "name": "memdownCache",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~memdownCache",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memdownCache.js",
    "importStyle": "memdownCache",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-memcache/src/memdownCache.js~MemdownCache"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memorizing.mixins.js",
    "content": "/**\n * This MemorizingMixins class is a mixins class for implement memory methods\n * @class MemorizingMixins\n * @experiment\n * @extends BaseMemCacheClass\n */\nconst MemorizingMixins = (BaseMemCacheClass)=> class extends BaseMemCacheClass{\n    /**\n     * Read content from \n     * @experiment\n     * @param { String|Number } memorySlotIndex - memory slot index\n     * @returns\n     */\n    async read(memorySlotIndex){\n        const GetFromMemory = async (memorySlotIndex)=>{\n            try{\n                let data = await this.getItem(memorySlotIndex);\n                return Object.values(data)[0];\n            }\n            catch(err){\n                return null;    \n            }\n        };\n        return await GetFromMemory(memorySlotIndex);\n    }\n    /**\n     * \n     * @param { String|Number } memorySlotIndex - positive number for memory slot\n     * @param { Array } memory value\n     * @returns { Promise } memory slot index value\n     */\n    async write(memorySlotIndex, value){\n        return await this.setItem(memorySlotIndex, value);\n    }\n    /**\n     *\n     *\n     * @param {*} slotIdxs\n     * @returns\n     */\n    async recall(slotIdxs){\n        let memory = [];\n        for(let slotIdx of slotIdxs){\n            memory.push(await this.read(slotIdx));\n        }\n        return memory;\n    }\n};\nexport default MemorizingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memorizing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "class",
    "name": "MemorizingMixins",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memorizing.mixins.js",
    "importStyle": "MemorizingMixins",
    "description": "This MemorizingMixins class is a mixins class for implement memory methods",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "MemorizingMixins"
      },
      {
        "tagName": "@experiment",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "read",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#read",
    "access": "public",
    "description": "Read content from ",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@experiment",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "memorySlotIndex",
        "description": "memory slot index"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "method",
    "name": "write",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#write",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } memory slot index value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "memorySlotIndex",
        "description": "positive number for memory slot"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "memory",
        "description": "value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "memory slot index value"
    }
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "recall",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#recall",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "slotIdxs",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "causality/packages/causality-memory/src/causalNetMemory.js",
    "content": "import { Tensor, causalNetCore } from 'causal-net.core';\nimport { memDownCache } from 'causal-net.memcache';\nclass CausalNetMemory extends Tensor{\n    constructor(){\n        super();\n        this.Memory = memDownCache;\n        this.R = causalNetCore.CoreFunction;\n    }\n    set Memory(memory){\n        //TODO: type checking \n        this.memory = memory;\n    }\n    get Memory(){\n        if(!this.memory){\n            throw Error(`memory is not set`);\n        }\n        return this.memory;\n    }\n    get MemorySize(){\n        return this.memorySize;\n    }\n    set MemorySize(size){\n        this.memorySize = size;\n    }\n    get NumSlots(){\n        return this.memorySize[0];\n    }\n    get SlotSize(){\n        \n        return this.memorySize[1];\n    }\n    async initMemory(size, initTensor=null){\n        this.MemorySize = size;\n        const R = this.R;\n        if(!initTensor){\n            initTensor = await this.T.randomNormal(size);\n        }        \n        let slotIdxs = R.range(0, this.NumSlots);\n        return this.writeSlots(slotIdxs, initTensor);\n    }\n\n    async normalize(){\n        const Memory = this.Memory, NumSlots = this.NumSlots, R = this.R;\n        let memValues = await Memory.recall(R.range(0, NumSlots));\n        let allTs = this.T.tensor(memValues);\n        let meanTs = allTs.mean(1, true);\n        let stdTs = allTs.sub(meanTs).pow(2).mean(1, true).pow(0.5);\n        return allTs.sub(meanTs).div(stdTs);    \n    }\n\n    async getMatchScore(slotIdxs){\n        let normTs = await this.normalize();\n        let cTs = normTs.gather(slotIdxs);\n        let similarityScore = normTs.dot(cTs.transpose());\n        return similarityScore;\n    }\n\n    async getTopKSimilar(slotIdxs, k){\n        let matchScoreTensor = await this.getMatchScore(slotIdxs);\n        const {values, indices} = matchScoreTensor.transpose().topk(k);\n        return indices;\n    }\n    \n    async writeSlots(slotIdxs, memoryTensor){   \n        const R = this.R, SlotSize = this.SlotSize, Memory = this.Memory;\n        let tensorData = await memoryTensor.data(); \n        let values = R.splitEvery(SlotSize, tensorData);\n        for(let idx of R.range(0, slotIdxs.length)){\n            await Memory.write(slotIdxs[idx], values[idx]);\n        }\n        return memoryTensor;\n    }\n    async readSlots(slotIndexs){\n        const Memory = this.Memory, T = this.T;\n        let values = [];\n        for(let slotIdx of slotIndexs){\n            let value = await Memory.read(slotIdx);\n            values.push(value);\n        }\n        return T.variable(T.tensor(values));\n    }\n}\n\nexport default new CausalNetMemory();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memory/src/causalNetMemory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "class",
    "name": "CausalNetMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js",
    "static": true,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memory/src/causalNetMemory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~Tensor"
    ]
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#R",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "set",
    "name": "Memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#Memory",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#memory",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "get",
    "name": "Memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#Memory",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "get",
    "name": "MemorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#MemorySize",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "set",
    "name": "MemorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#MemorySize",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "memorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#memorySize",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "get",
    "name": "NumSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#NumSlots",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "get",
    "name": "SlotSize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#SlotSize",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "initMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#initMemory",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      },
      {
        "name": "initTensor",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "normalize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#normalize",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "getMatchScore",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#getMatchScore",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "getTopKSimilar",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#getTopKSimilar",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      },
      {
        "name": "k",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "writeSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#writeSlots",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      },
      {
        "name": "memoryTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "readSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#readSlots",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "slotIndexs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "causalNetMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js",
    "static": true,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~causalNetMemory",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memory/src/causalNetMemory.js",
    "importStyle": "causalNetMemory",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "causality/packages/causality-memory/src/index.js",
    "content": "export { default as causalNetMemory } from './causalNetMemory';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memory/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js",
    "content": "import { Tensor } from 'causal-net.core';\nclass BaseSupervisedModel extends Tensor{\n    constructor(){\n        super();\n        this.modelName = '';\n    }\n\n    fit(){\n        throw Error('implement required');\n    }\n\n    loss(){\n        throw Error('implement required');\n    }\n\n    predict(){\n        throw Error('implement required');\n    }\n    oneHotPredict(){\n        throw Error('implement required');\n    }\n}\n\nexport default BaseSupervisedModel;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "class",
    "name": "BaseSupervisedModel",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js",
    "importStyle": "BaseSupervisedModel",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~Tensor"
    ]
  },
  {
    "__docId__": 282,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "modelName",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#modelName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "fit",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#fit",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "loss",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#loss",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "predict",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#predict",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "oneHotPredict",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel#oneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "content": "import { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { default as SingleLabelClassification } from './singleLableClassification';\nclass CausalNetModels extends platform.mixWith( Tensor, [] ){\n    constructor(){\n        super();\n    }\n    \n    classification(numClass){\n        this.model = new SingleLabelClassification(numClass);\n        return this.model;\n    }\n}\nexport default new CausalNetModels();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "class",
    "name": "CausalNetModels",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "platform.mixWith( Tensor, [] )"
  },
  {
    "__docId__": 290,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "classification",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels#classification",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "numClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "model",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels",
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels#model",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "causalNetModels",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~causalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js",
    "importStyle": "causalNetModels",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-models/src/SupervisedModels/causalNetSupervisedModels.js~CausalNetModels"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/index.js",
    "content": "export { default as causalNetModels } from './causalNetSupervisedModels';\nexport { default as BaseSupervisedModel } from './baseSupervisedModel';\nexport { default as SingleLabelClassification } from './singleLableClassification';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js",
    "content": "import { default as BaseSupervisedModel } from './baseSupervisedModel';\n\nclass SingleLabelClassification extends BaseSupervisedModel{\n    constructor(numClass){\n        super();\n        if(numClass > 0){\n            this.numClass = numClass;\n        }\n        else{\n            throw Error(`expect numclass, get ${numClass}`);\n        }\n    }\n\n    set Net(net){\n        let { Predictor } = net;\n        this.net = { Predictor };\n    }\n    \n    get Fit(){\n        return (inputTensor, net=this.net)=>{\n            let outPutTensor = net.Predictor(inputTensor);\n            let logProb = outPutTensor.sub(outPutTensor.logSumExp(1, true));\n            return logProb;\n        };\n    }\n    \n    get Predict(){\n        const Fit = this.Fit;\n        return (inputTensor, netRunner)=>{\n            let logProb = Fit(inputTensor, netRunner);\n            let predictedClass = logProb.argMax(1);\n            return predictedClass;\n        };\n    }\n\n    get OneHotPredict(){\n        const Predict = this.Predict;\n        return (inputTensor, netRunner)=>{\n            let predictedClass = Predict(inputTensor, netRunner);\n            let oneHotPredict = this.T.oneHot(predictedClass, this.numClass);\n            return oneHotPredict;\n        };\n    }\n    get Loss(){\n        const Fit = this.Fit;\n        return (inputTensor, labelTensor, netRunner)=>{\n            let logProb = Fit(inputTensor, netRunner);\n            let likelihood = logProb.neg().mul(labelTensor);\n            let loss = likelihood.sum(1).mean();\n            return loss;\n        };\n    }\n}\nexport default SingleLabelClassification;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "class",
    "name": "SingleLabelClassification",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js",
    "importStyle": "SingleLabelClassification",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "causality/packages/causality-models/src/SupervisedModels/baseSupervisedModel.js~BaseSupervisedModel"
    ]
  },
  {
    "__docId__": 297,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 298,
    "kind": "member",
    "name": "numClass",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#numClass",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "set",
    "name": "Net",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#Net",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "net",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#net",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"Predictor\": *}"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "get",
    "name": "Fit",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#Fit",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "get",
    "name": "Predict",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#Predict",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "get",
    "name": "OneHotPredict",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#OneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "get",
    "name": "Loss",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLableClassification.js~SingleLabelClassification#Loss",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js",
    "content": "import { default as BaseUnsupervisedModel } from './baseUnsupervisedModel';\nclass AutoEncoder extends BaseUnsupervisedModel{\n    constructor(encodeSize){\n        this.encodeSize;\n    }\n\n    encode(pipelineOutTensor){\n        return pipelineOutTensor;\n    }\n\n    decode(pipelineOutTensor){\n        return pipelineOutTensor\n    }\n\n\n    fit(pipelineOutTensor, inputTensor){\n        let reconstructError = this.decode(pipelineOutTensor).sub(inputTensor);\n        return reconstructError;\n    }\n    \n    loss(pipelineOutTensor, inputTensor){\n        let reconstructError = this.fit(pipelineOutTensor, inputTensor);\n        let squareError = reconstructError.pow(2);\n        let loss = squareError.mean();\n        return loss;\n    }\n}\nexport default AutoEncoder;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "class",
    "name": "AutoEncoder",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js",
    "importStyle": "AutoEncoder",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseUnsupervisedModel"
    ]
  },
  {
    "__docId__": 307,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "encode",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder#encode",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "pipelineOutTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "decode",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder#decode",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "pipelineOutTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "fit",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder#fit",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "pipelineOutTensor",
        "types": [
          "*"
        ]
      },
      {
        "name": "inputTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "loss",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/autoEncoder.js~AutoEncoder#loss",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "pipelineOutTensor",
        "types": [
          "*"
        ]
      },
      {
        "name": "inputTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js",
    "content": "class BaseSupervisedModel{\n    constructor(){\n        this.modelName = '';\n    }\n    fit(){\n        throw Error('implement required');\n    }\n\n    loss(){\n        throw Error('implement required');\n    }\n\n    encode(){\n        throw Error('implement required');\n    }\n\n    decode(){\n        throw Error('implement required');\n    }\n}\n\nexport default BaseSupervisedModel;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "class",
    "name": "BaseSupervisedModel",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js",
    "importStyle": "BaseSupervisedModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 314,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "modelName",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#modelName",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "fit",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#fit",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "loss",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#loss",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "encode",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#encode",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "decode",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/baseUnsupervisedModel.js~BaseSupervisedModel#decode",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "content": "import { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { default as AutoEncoder } from './autoEncoder';\nclass CausalNetUnsupervisedModels extends platform.mixWith( Tensor, []){\n    constructor(){\n        super();\n    }\n\n    autoEncoder(){\n        return new AutoEncoder();\n    }\n}\nexport default new CausalNetUnsupervisedModels();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "class",
    "name": "CausalNetUnsupervisedModels",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "platform.mixWith( Tensor, [])"
  },
  {
    "__docId__": 322,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "autoEncoder",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels#autoEncoder",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "causalNetUnsupervisedModels",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~causalNetUnsupervisedModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js",
    "importStyle": "causalNetUnsupervisedModels",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-models/src/UnSupervisedModels/causalNetUnsupervisedModels.js~CausalNetUnsupervisedModels"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/index.js",
    "content": "export { default as WordContextModelMixins } from './wordContextsModels.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "causality/packages/causality-models/src/causalNetModels.js",
    "content": "import { Platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { SingleLabelMixins, SequenceLabelsMixins } from './SupervisedModels/index';\nimport { WordContextModelMixins } from './UnSupervisedModels/index';\nclass CausalNetModels extends Platform.mixWith(Tensor, \n    [ SingleLabelMixins, \n      SequenceLabelsMixins,\n      WordContextModelMixins ]){\n    constructor(){\n        super();\n    }\n}\nexport default new CausalNetModels;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/causalNetModels.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "class",
    "name": "CausalNetModels",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/causalNetModels.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "P"
  },
  {
    "__docId__": 328,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "causalNetModels",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~causalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/causalNetModels.js",
    "importStyle": "causalNetModels",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "file",
    "name": "causality/packages/causality-models/src/index.js",
    "content": "export { causalNetModels, \n         BaseSupervisedModel, \n         SingleLabelClassification } from './SupervisedModels/index';\nexport { default as ModelMixins } from './model.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 331,
    "kind": "file",
    "name": "causality/packages/causality-models/src/model.mixins.js",
    "content": "const UnSupervisedModelsMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    \n\n    get LossModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Loss;\n    }\n\n    get FitModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Fit;\n    }\n    \n    get OneHotPredictModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.OneHotPredict;\n    }\n\n    get PredictModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Predict;\n    }\n\n    get EncodeModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Encode;\n    }\n\n    get DecodeModel(){\n        if(!this.netModel){\n            throw Error('netModel is not set');\n        }\n        return this.netModel.Decode;\n    }\n\n    \n\n    set Model(model){        \n        this.netModel = model;\n        this.netModel.Net = this.Net;\n    }\n\n    setByConfig(pipelineConfig){\n        if(super.setByConfig){\n            super.setByConfig(pipelineConfig);\n        }\n        this.logger.groupBegin('set Model by config');\n        const Net = pipelineConfig.Net;\n        if(!Net){\n            throw Error(`Net is not set in ${JSON.stringify(pipelineConfig)}`);\n        }\n        const { Model } = Net;\n        if(!Model){\n            throw Error(`Model is not set in ${JSON.stringify(Net)}`);\n        }\n        this.Model = Model;\n        this.logger.groupEnd();\n    }\n};\n\nexport default UnSupervisedModelsMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/model.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "class",
    "name": "UnSupervisedModelsMixins",
    "memberof": "causality/packages/causality-models/src/model.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/model.mixins.js",
    "importStyle": "UnSupervisedModelsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 333,
    "kind": "get",
    "name": "LossModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#LossModel",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "get",
    "name": "FitModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#FitModel",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "get",
    "name": "OneHotPredictModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#OneHotPredictModel",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "get",
    "name": "PredictModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#PredictModel",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "get",
    "name": "EncodeModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#EncodeModel",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "get",
    "name": "DecodeModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#DecodeModel",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "set",
    "name": "Model",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#Model",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "netModel",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#netModel",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "setByConfig",
    "memberof": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/model.mixins.js~UnSupervisedModelsMixins#setByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "pipelineConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 343,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/Sampling/index.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/Sampling/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "content": "const SGDFitParamsMixins = (BaseOptimizerClass) => class extends BaseOptimizerClass{\n    fit(lossFn, trainableVars){\n        return this.trainer.minimize(lossFn, true, trainableVars);\n    }\n};\n\nexport default SGDFitParamsMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "SGDFitParamsMixins",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "importStyle": "SGDFitParamsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseOptimizerClass"
    ]
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "fit",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins#fit",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "lossFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "trainableVars",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "content": "import { Tensor as BaseTensor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { default as functor } from './functor';\nimport { default as SGDFitParamsMixins } from './SGDFitParams.mixins';\nexport default class AdamOptimizer extends platform.mixWith(BaseTensor, \n    [ SGDFitParamsMixins ]){\n    constructor(optimizerParams={}){\n        super();\n        let DefaultParameters = {beta1: 0.1, beta2: 0.2, epsilon:0.03};\n        const {learningRate, beta1, beta2, epsilon} = functor.mergeParams(optimizerParams, DefaultParameters);\n        this.params = { learningRate, beta1, beta2, epsilon };\n        this.trainer = this.T.train.adam(learningRate, beta1, beta2, epsilon);\n    }\n\n    get Params(){\n        return this.params;\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 348,
    "kind": "class",
    "name": "AdamOptimizer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "importStyle": "AdamOptimizer",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 349,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "params",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#params",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"learningRate\": *, \"beta1\": *, \"beta2\": *, \"epsilon\": *}"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "trainer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#trainer",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "get",
    "name": "Params",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#Params",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "content": "import {default as AdamOptimizer} from './adamOptimizer';\n/**\n * This CausalNetSGDOptimizer provide SGD optimizers based on Tensorflowjs optimizer\n *\n * @class CausalNetSGDOptimizer\n */\nclass CausalNetSGDOptimizer{\n    constructor(){\n    }\n    adam(optimizerParams){\n        return new AdamOptimizer(optimizerParams); \n    }\n}\n\nexport default new CausalNetSGDOptimizer();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 354,
    "kind": "class",
    "name": "CausalNetSGDOptimizer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "importStyle": null,
    "description": "This CausalNetSGDOptimizer provide SGD optimizers based on Tensorflowjs optimizer",
    "lineNumber": 7,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetSGDOptimizer"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 355,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "adam",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer#adam",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "optimizerParams",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "causalNetSGDOptimizer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~causalNetSGDOptimizer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js",
    "importStyle": "causalNetSGDOptimizer",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-optimizers/src/StochasticGradientDescent/causalNetSGDOptimizer.js~CausalNetSGDOptimizer"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "content": "import { Functor as BaseFunctor } from 'causal-net.core';\nclass Functor extends BaseFunctor{\n    constructor(){\n        super();\n    }\n    \n    mergeParams(optimizerParams, defaultOptimizerParameters){\n        const R = this.R;\n        return R.mergeDeepLeft(optimizerParams, defaultOptimizerParameters);\n    }\n}\n\nexport default new Functor();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "class",
    "name": "Functor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~BaseFunctor"
    ]
  },
  {
    "__docId__": 360,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "mergeParams",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor#mergeParams",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "optimizerParams",
        "types": [
          "*"
        ]
      },
      {
        "name": "defaultOptimizerParameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "variable",
    "name": "functor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~functor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js",
    "importStyle": "functor",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-optimizers/src/StochasticGradientDescent/functor.js~Functor"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "content": "export { default as causalNetSGDOptimizer } from './causalNetSGDOptimizer';\nexport { default as SGDFitParamsMixins } from './SGDFitParams.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/index.js",
    "content": "export { causalNetSGDOptimizer } from './StochasticGradientDescent/index';\nexport { default as TrainerMixins } from './trainer.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/trainer.mixins.js",
    "content": "import { Tensor } from 'causal-net.core';\nimport { assert } from 'causal-net.utils';\nconst TrainerMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    \n    get Trainer(){\n        const T = this.T;\n        return (sampleTensor, labelTensor, Loss=this.LossModel, Optimizer=this.Optimizer)=>{\n            const LossFn = ()=>{\n                return T.tidy( ()=>{ return Loss(sampleTensor, labelTensor); } );\n            };\n            return Optimizer.fit(LossFn);\n        };\n    }\n\n    get Optimizer(){\n        if(!this.optimizer){\n            throw Error('optimizer is not set');\n        }\n        return this.optimizer;\n    }\n    \n\n    set Optimizer(optimizer){\n        this.optimizer = optimizer;\n    }\n\n    get TrainData(){\n        if(!this.trainData){\n            throw Error('trainData is not set');\n        }\n        return this.trainData;\n    }\n    set TrainData(trainData){\n        this.trainData = trainData;\n    }\n\n    train(numIter=10){\n        for(let iter of new Array(numIter).map((d,i)=>i)){\n            return 0;\n        }\n    }\n\n    test(){\n\n    }\n\n    setByConfig(pipelineConfig){\n        if(super.setByConfig){\n            super.setByConfig(pipelineConfig);\n        }\n        this.logger.groupBegin('set Trainer by config');\n        const Net = pipelineConfig.Net;\n        if(!Net){\n            throw Error(`Net is not set in ${JSON.stringify(pipelineConfig)}`);\n        }\n        const { Optimizer } = Net;\n        if(!Optimizer){\n            throw Error(`Model is not set in ${JSON.stringify(Net)}`);\n        }\n        this.Optimizer = Optimizer;\n        if(!pipelineConfig.Dataset){\n            throw Error(`Dataset is not set in ${JSON.stringify(pipelineConfig)}`);\n        }\n        this.TrainData = pipelineConfig.Dataset.TrainData;\n        this.TestData = pipelineConfig.Dataset.TestData;\n        this.ValidateData = pipelineConfig.Dataset.ValidateData;\n        this.logger.groupEnd();\n    }\n};\n\nexport default TrainerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/trainer.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 366,
    "kind": "class",
    "name": "TrainerMixins",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/trainer.mixins.js",
    "importStyle": "TrainerMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 367,
    "kind": "get",
    "name": "Trainer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Trainer",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "get",
    "name": "Optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "set",
    "name": "Optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 370,
    "kind": "member",
    "name": "optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "get",
    "name": "TrainData",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#TrainData",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "set",
    "name": "TrainData",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#TrainData",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 373,
    "kind": "member",
    "name": "trainData",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#trainData",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "train",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#train",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "numIter",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 10,
        "defaultValue": "10"
      }
    ],
    "return": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "test",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#test",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "setByConfig",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#setByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "pipelineConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "TestData",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#TestData",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "ValidateData",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#ValidateData",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "content": "const ColorTransformingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    \n    colorTransform(tranformFn, sampleBuffer, channelSize){\n        const R = this.R;\n        return R.flatten(R.map(tranformFn, R.splitEvery(channelSize, sampleBuffer)));\n    }\n    /**\n     * Transform color image to black on white image. This function also reduce chanel to 1.\n     * @param { Array|Buffer } sampleBuffer\n     * @param { Number } channelSize\n     * @return { Array } image data after transform\n     */\n    blackWhiteTransform(sampleBuffer, channelSize){\n        const BlackWhiteFn = (pixel)=>{\n            let pixelValue = (pixel[0] + pixel[1] +pixel[2])/3;\n            return ~~pixelValue;\n        };\n        return this.colorTransform(BlackWhiteFn, sampleBuffer, channelSize);\n    }\n};\n\nexport default ColorTransformingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 382,
    "kind": "class",
    "name": "ColorTransformingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "importStyle": "ColorTransformingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "colorTransform",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins#colorTransform",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "tranformFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleBuffer",
        "types": [
          "*"
        ]
      },
      {
        "name": "channelSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "blackWhiteTransform",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins#blackWhiteTransform",
    "access": "public",
    "description": "Transform color image to black on white image. This function also reduce chanel to 1.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          " Array",
          "Buffer "
        ],
        "spread": false,
        "optional": false,
        "name": "sampleBuffer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "channelSize",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "image data after transform"
    }
  },
  {
    "__docId__": 385,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "content": "const ImageSplittingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    /**\n     * Split image into sub images based on split size\n     * @param { Array|Buffer } sampleBuffer - original image\n     * @param { Number } splitSize - positive number\n     * @returns { Array } - array of sub image\n     */\n    imageSplit(sampleBuffer, splitSize){\n        return this.R.splitEvery(splitSize, sampleBuffer);\n    }\n};\n\nexport default ImageSplittingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 386,
    "kind": "class",
    "name": "ImageSplittingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "importStyle": "ImageSplittingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "imageSplit",
    "memberof": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins#imageSplit",
    "access": "public",
    "description": "Split image into sub images based on split size",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } - array of sub image"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array",
          "Buffer "
        ],
        "spread": false,
        "optional": false,
        "name": "sampleBuffer",
        "description": "original image"
      },
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "splitSize",
        "description": "positive number"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of sub image"
    }
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/index.js",
    "content": "export {default as ColorTransformingMixins } from './colorTransforming.mixins';\nexport {default as ImageSplittingMixins } from './imageSplitting.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/NLP/index.js",
    "content": "export {default as TokenTransformingMixins } from './tokenTransforming.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/NLP/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "content": "const TokenTransformingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    /**\n     * tokenized sentence\n     * @param { String } sentence - array of string sentence\n     * @returns { Array } array of tokenized sentences\n     */\n    tokenize(sentence){\n        const R = this.R, Tokenizer = this.tokenizer;\n        return Tokenizer.tokenize(sentence);\n    }\n    /**\n     * Remove bad words from tokens\n     * @param { Array } tokens - array of string token\n     * @param { Array } badWordList - Array of bad words\n     * @returns { Array } tokens without bad words\n     */\n    badWordsFilter(tokens, badWordList){\n        const R = this.R;\n        return R.filter((token)=>R.not(R.find(R.equals(token))(badWordList)), tokens);\n    }\n    /**\n     * Count number of apperance of each token in the token list\n     * @param { Array } tokens - array of string tokens\n     * @param { Object } [freqCount={}] - objec or previous wordFreqCount, empty object if not provided\n     * @returns { Object } - json object with token as key and counting number as corresponding value\n     */\n    wordFreqCount(tokens, freqCount={}){\n        const R = this.R;\n        const UpdateFreq = (freqCount, token)=>{\n            if(freqCount[token] === undefined){\n                freqCount[token] = 1;\n            }\n            else{\n                freqCount[token] += 1;\n            }\n            return freqCount;\n        };\n        return R.reduce(UpdateFreq, freqCount, tokens);\n    }\n    /**\n     * Remove duplicated tokens\n     * @param { Array } tokens - array of string token\n     * @returns\n     */\n    wordDuplicateRemove(tokens){\n        const R = this.R;\n        return R.uniq(tokens);\n    }\n};\nexport default TokenTransformingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "class",
    "name": "TokenTransformingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "importStyle": "TokenTransformingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "tokenize",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#tokenize",
    "access": "public",
    "description": "tokenized sentence",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array of tokenized sentences"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "sentence",
        "description": "array of string sentence"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of tokenized sentences"
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "badWordsFilter",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#badWordsFilter",
    "access": "public",
    "description": "Remove bad words from tokens",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } tokens without bad words"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "array of string token"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "badWordList",
        "description": "Array of bad words"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "tokens without bad words"
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "wordFreqCount",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#wordFreqCount",
    "access": "public",
    "description": "Count number of apperance of each token in the token list",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Object } - json object with token as key and counting number as corresponding value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "array of string tokens"
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "freqCount",
        "description": "objec or previous wordFreqCount, empty object if not provided"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": "json object with token as key and counting number as corresponding value"
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "wordDuplicateRemove",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#wordDuplicateRemove",
    "access": "public",
    "description": "Remove duplicated tokens",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "array of string token"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/index.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "content": "/**\n * @experiment\n */\nconst ItemNormalizingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    itemNormalize(sample){\n        throw Error('implement require');\n    }\n};\n\nexport default ItemNormalizingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "ItemNormalizingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "importStyle": "ItemNormalizingMixins",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@experiment",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "itemNormalize",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins#itemNormalize",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "sample",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "content": "/**\n * @experiment\n */\nconst NullItemReplacingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    nullItemReplace(sample){\n        throw Error('implement required');\n    }\n};\n\nexport default NullItemReplacingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "class",
    "name": "NullItemReplacingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "importStyle": "NullItemReplacingMixins",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@experiment",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "nullItemReplace",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins#nullItemReplace",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "sample",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 403,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "content": "import { Functor as BaseFunctor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { ColorTransformingMixins, ImageSplittingMixins } from './Image/index';\n\n/**\n * This ImagePreprocessing provide methods for preprocessing image data\n * { MixWith: [\n *         ColorTransformingMixins, ImageSplittingMixins\n *     ] }\n * @class ImagePreprocessing\n * @extends BaseFunctor\n * @example\n * [EXAMPLE ../examples/imagePreprocessing.babel.node.js]\n */\nclass ImagePreprocessing extends platform.mixWith(BaseFunctor, [\n        ColorTransformingMixins, \n        ImageSplittingMixins ]){\n    constructor(){\n        super();\n    }\n}\n\nexport default new ImagePreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 404,
    "kind": "class",
    "name": "ImagePreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "importStyle": null,
    "description": "This ImagePreprocessing provide methods for preprocessing image data\n{ MixWith: [\n        ColorTransformingMixins, ImageSplittingMixins\n    ] }",
    "examples": [
      "[EXAMPLE  ERROR! /home/huynhnguyen/github/causality/packages/causality-preprocessing/src/imagePreprocessing.js, /home/huynhnguyen/github/causality/packages/causality-preprocessing/examples/imagePreprocessing.babel.node.js]"
    ],
    "lineNumber": 15,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ImagePreprocessing"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 405,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 406,
    "kind": "variable",
    "name": "imagePreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~imagePreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "importStyle": "imagePreprocessing",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/index.js",
    "content": "export { default as PreprocessingMixins} from './preprocessing.mixins';\nexport { default as imagePreprocessing } from './imagePreprocessing';\nexport { default as nlpPreprocessing } from './nlpPreprocessing';\nexport { default as tabularPreprocessing } from './tabularPreprocessing';\nexport { default as tokenizerEN } from './tokenizer.en';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "content": "import { Functor as BaseFunctor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { TokenTransformingMixins } from './NLP/index';\n/**\n * This NLPPreprocessing class provide methods for preprocessing text and output valid tokens.\n * { MixWith:\n *     [ TokenTransformingMixins ]) }\n * @class NLPPreprocessing\n * @extends BaseFunctor\n * @example\n * [!EXAMPLE ../examples/nlpPreprocessing.babel.node.js]\n */\n\nclass NLPPreprocessing extends platform.mixWith(BaseFunctor, \n    [ TokenTransformingMixins ]){\n    constructor(){\n        super();\n    }\n    /**\n     * This method is used in case tokenizer requires data setup.\n     * @param { Url|FilePath } configLink\n     * @memberof NLPPreprocessing\n     */\n    connect(configLink){\n        this.tokenizer.connect(configLink);\n    }\n    /**\n     * Get tokenizer\n     *\n     * @memberof NLPPreprocessing\n     */\n    get Tokenizer(){\n        if(!this.tokenizer){\n            throw Error('tokenizer is not set');\n        }\n        return this.tokenizer;\n    }\n    /**\n     * Set tokenizer\n     * @param { Object } tokenizer - tokenizer object\n     * @memberof NLPPreprocessing\n     */\n    set Tokenizer(tokenizer){\n        this.tokenizer = tokenizer;\n    }\n}\n\nexport default new NLPPreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "class",
    "name": "NLPPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "importStyle": null,
    "description": "This NLPPreprocessing class provide methods for preprocessing text and output valid tokens.\n{ MixWith:\n    [ TokenTransformingMixins ]) }",
    "examples": [
      "[!EXAMPLE ../examples/nlpPreprocessing.babel.node.js]"
    ],
    "lineNumber": 14,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "NLPPreprocessing"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 410,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 411,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#connect",
    "access": "public",
    "description": "This method is used in case tokenizer requires data setup.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          " Url",
          "FilePath "
        ],
        "spread": false,
        "optional": false,
        "name": "configLink",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 412,
    "kind": "get",
    "name": "Tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#Tokenizer",
    "access": "public",
    "description": "Get tokenizer",
    "lineNumber": 32,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "set",
    "name": "Tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#Tokenizer",
    "access": "public",
    "description": "Set tokenizer",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "tokenizer",
        "description": "tokenizer object"
      }
    ]
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#tokenizer",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "variable",
    "name": "nLPPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~nLPPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "importStyle": "nLPPreprocessing",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "content": "import { assert } from 'causal-net.utils';\nconst PreprocessingMixins = (BasePipelineClass) => class extends BasePipelineClass{\n    \n    get PreprocessingSampleFn(){\n        if(!this.preprocessingSampleFn){\n            throw Error('preprocessingSampleFn is not set');\n        }\n        return this.preprocessingSampleFn;\n    }\n    \n    get PreprocessingLabelFn(){\n        if(!this.preprocessingLabelFn){\n            throw Error('preprocessingLabelFn is not set');\n        }\n        return this.preprocessingLabelFn;\n    }\n\n    set PreprocessingSampleFn(sampleFn){\n        assert.beInstanceOf(sampleFn, Function);\n        this.preprocessingSampleFn = sampleFn;\n        this.preprocessingSampleFn.bind(this);\n    }\n    \n    set PreprocessingLabelFn(labelFn){\n        assert.beInstanceOf(labelFn, Function);\n        this.preprocessingLabelFn = labelFn;\n        this.preprocessingLabelFn.bind(this);\n    }\n    \n    setPreprocessingByConfig(configure){\n        const { SampleFn, LabelFn } = configure.Preprocessing;\n        this.PreprocessingSampleFn = SampleFn;\n        this.PreprocessingLabelFn = LabelFn;\n    }\n};\n\nexport default PreprocessingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 417,
    "kind": "class",
    "name": "PreprocessingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "importStyle": "PreprocessingMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 418,
    "kind": "get",
    "name": "PreprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "get",
    "name": "PreprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "set",
    "name": "PreprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 421,
    "kind": "member",
    "name": "preprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#preprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "set",
    "name": "PreprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 423,
    "kind": "member",
    "name": "preprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#preprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "method",
    "name": "setPreprocessingByConfig",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#setPreprocessingByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "configure",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 427,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "content": "import { Functor as BaseFunctor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { ItemNormalizing, NullItemReplace } from './Tabular/index';\nclass TabularPreprocessing extends platform.mixWith(BaseFunctor, \n    []){\n    constructor(){\n        super();\n    }\n}\n\nexport default new TabularPreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 428,
    "kind": "class",
    "name": "TabularPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 429,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "tabularPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~tabularPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "importStyle": "tabularPreprocessing",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "content": "/**\n * This TokenizerEN is a simple implementation for English tokenizer\n * @todo enhance it with entities and built-in vocab\n * @experiment\n * @class TokenizerEN\n */\nclass TokenizerEN{\n    constructor(){\n    }\n    connect(configureLink){\n        console.log('This simple English tokenizer not requires advance configure');\n    }\n    tokenize(text){\n        const Re = /[\\s.\"'/\\|;:()\\[\\]\\@\\#\\$\\&]/g;\n        return text.split(Re).filter(token=>token!=='');\n    }\n}\nexport default new TokenizerEN();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 432,
    "kind": "class",
    "name": "TokenizerEN",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "importStyle": null,
    "description": "This TokenizerEN is a simple implementation for English tokenizer",
    "lineNumber": 7,
    "todo": [
      "enhance it with entities and built-in vocab"
    ],
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@experiment",
        "tagValue": ""
      },
      {
        "tagName": "@class",
        "tagValue": "TokenizerEN"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 433,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN#connect",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "configureLink",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "tokenize",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN#tokenize",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "variable",
    "name": "tokenizerEN",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~tokenizerEN",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "importStyle": "tokenizerEN",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "content": "/**\n * This ChunkLookupMixins class provide mixins for chunk lookup that first look from the cached chunk then\n * fetch and cache new chunk\n * @class ChunkLookupMixins\n * @extends {  BaseWordEmbeddingClass } \n */\nconst ChunkLookupMixins = ( BaseWordEmbeddingClass )=> class extends BaseWordEmbeddingClass{ \n    \n    /**\n     * Return the storage lookup function\n     * @readonly\n     */\n    get ChunkLookUp(){\n        const Storage = this.Storage;\n        return (chunkId)=>{\n            return new Promise(async (resolve, reject)=>{\n                try{\n                    const ChunkPath = this.embeddingSavePath + chunkId;\n                    let chunkItem = await Storage.getItem(ChunkPath);\n                    let chunk = chunkItem[ChunkPath];\n                    resolve(JSON.parse(chunk));\n                }\n                catch(err){\n                    resolve(null);\n                }\n            });\n        };\n    }\n   /**\n    * Update the storage lookup\n    * @param { String|Number } chunkId - id in positive integer range\n    * @param { Object } chunk - chunk object containing token keys and correponding vec value\n    * @returns { String } - updated chunk path in storage\n    */\n   async updateChunkLookUp(chunkId, chunk){\n        const Storage = this.Storage;\n        const UpdateChunkPath = this.embeddingSavePath + chunkId;\n        return await Storage.setItem(UpdateChunkPath, chunk);\n    }\n    /**\n     * Query chunk either read from file or fetch from remote server\n     * @param { String|Number } chunkId - id in positive interger range\n     * @returns { Object }  chunk object containing token keys and correponding vec value\n     */\n    async queryChunk(chunkId){\n        const ChunkUrl = `${this.baseLink}wordvec_chunk_${chunkId}.json`;\n        return await this.query(ChunkUrl);\n    }\n   \n};\nexport default ChunkLookupMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 438,
    "kind": "class",
    "name": "ChunkLookupMixins",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "importStyle": "ChunkLookupMixins",
    "description": "This ChunkLookupMixins class provide mixins for chunk lookup that first look from the cached chunk then\nfetch and cache new chunk",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ChunkLookupMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseWordEmbeddingClass "
    ]
  },
  {
    "__docId__": 439,
    "kind": "get",
    "name": "ChunkLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#ChunkLookUp",
    "access": "public",
    "description": "Return the storage lookup function",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "updateChunkLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#updateChunkLookUp",
    "access": "public",
    "description": "Update the storage lookup",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ String } - updated chunk path in storage"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "chunkId",
        "description": "id in positive integer range"
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "chunk object containing token keys and correponding vec value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " String "
      ],
      "spread": false,
      "description": "updated chunk path in storage"
    }
  },
  {
    "__docId__": 441,
    "kind": "method",
    "name": "queryChunk",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#queryChunk",
    "access": "public",
    "description": "Query chunk either read from file or fetch from remote server",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Object }  chunk object containing token keys and correponding vec value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "chunkId",
        "description": "id in positive interger range"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": "chunk object containing token keys and correponding vec value"
    }
  },
  {
    "__docId__": 442,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/index.js",
    "content": "export { default as ChunkLookupMixins } from './chunkLookup.mixins';\nexport { default as TokenLookUpMixins } from './tokenLookup.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "content": "const TokenLookUpMixins = (BaseWordEmbeddingClass)=> class extends BaseWordEmbeddingClass{ \n    get TokenLookUp(){\n        const MemCache = this.MemCache;\n        return (token)=>{\n            return new Promise(async (resolve, reject)=>{\n                try{\n                    let vec = await MemCache.getItem(this.embeddingSavePath + token);\n                    resolve(vec);\n                }\n                catch(err){\n                    resolve(null);\n                }\n            });\n        };\n    }\n    /**\n     * Update token look up\n     * @param { String } token - token \n     * @param { Array } vec - vector representation of token\n     */\n    async updateTokenLookUp(token, vec){\n        console.error('this is update');\n        const MemCache = this.MemCache;\n        await MemCache.setItem(this.embeddingSavePath + token, vec);\n    }\n};\nexport default TokenLookUpMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "class",
    "name": "TokenLookUpMixins",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "importStyle": "TokenLookUpMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseWordEmbeddingClass"
    ]
  },
  {
    "__docId__": 445,
    "kind": "get",
    "name": "TokenLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins#TokenLookUp",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "updateTokenLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins#updateTokenLookUp",
    "access": "public",
    "description": "Update token look up",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "token"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "vec",
        "description": "vector representation of token"
      }
    ],
    "return": null
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "content": "import { Tensor as BaseTensor } from 'causal-net.core';\nimport { platform, fetch, jsonUtils } from 'causal-net.utils';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { MemCacheMixins, memDownCache } from 'causal-net.memcache';\nimport { default as WordEmbeddingMixins } from './wordEmbedding.mixins';\nimport { default as ChunkLookUpMixins } from './Lookup/chunkLookup.mixins';\nimport { default as TokenLookUpMixins } from './Lookup/tokenLookup.mixins';\nimport { default as VectorMetricMixins } from './vectorMetrics.mixins';\nimport { default as functor } from './functor';\n/**\n * This CausalNetEmbedding provide methods for transform raw tokenized sentence into \n * its single vector representation\n * mixWith:\n *         [   StorageMixins, \n *             MemCacheMixins,\n *             TokenLookUpMixins,\n *             ChunkLookUpMixins,\n *             WordEmbeddingMixins ])}\n * @class CausalNetEmbedding\n * @extends  BaseTensor\n * @example\n * [EXAMPLE ../examples/causalNetEmbedding.babel.node.js]\n */\nclass CausalNetEmbedding extends platform.mixWith(BaseTensor, \n        [   StorageMixins, \n            MemCacheMixins,\n            TokenLookUpMixins,\n            ChunkLookUpMixins,\n            VectorMetricMixins,\n            WordEmbeddingMixins ]){\n    constructor(){\n        super();\n        this.fetch = fetch;\n        this.Storage = indexDBStorage;   //store configure\n        this.MemCache = memDownCache;    //store chunks\n        this.f = functor;\n        this.embeddingSavePath = '/embedding/';\n        this.embeddingDescriptionPath = this.embeddingSavePath + 'description.json';\n    }\n    /**\n     * Return veczie in positive number\n     *\n     * @readonly\n     * @memberof CausalNetEmbedding\n     */\n    get VecSize(){\n        if(!this.vecsize){\n            throw Error('vecsize is not set');\n        }\n        return this.vecsize;\n    }\n    /**\n     * Load configure of pretrained vector from either local folder or remote server. \n     * After connect, the result is cached for next time init.\n     * @param { URL|FilePath } link - link to load\n     * @param { boolean } [refresh=false] - force to discard local cache\n     * @returns { Promise }\n     * @memberof CausalNetEmbedding\n     */\n    async connect(link, refresh=false){\n        this.baseLink = link;\n        return await this.getDescription(refresh);\n    }\n    /**\n     * This method is called by connect\n     * @private\n     * @param {boolean} [forceFecth=false]\n     * @returns\n     * @memberof CausalNetEmbedding\n     */\n    async getDescription(forceFecth=false){\n        if(!this.description){\n            try{\n                let descriptionItem = await this.Storage.getItem(this.embeddingDescriptionPath);\n                this.description = JSON.parse(descriptionItem[this.embeddingDescriptionPath]);\n            }\n            catch(err){\n                this.logger.debug({'load description from storage': false});\n                this.description = await this.queryDescription();\n            }\n        }\n        if(forceFecth){\n            this.description = await this.queryDescription();\n        }\n        this.TokenChunkIdMapper = (token)=>{\n            return this.F.getIn([token], this.description.chunkLookUp, null);\n        };\n        this.vecsize = this.description.vecsize;//only set from here\n        return this.description;\n    }\n    /**\n     * fetch or read configure depends on provied link format\n     * @private\n     * @param {*} link\n     * @returns\n     * @memberof CausalNetEmbedding\n     */\n    async query(link){\n        if(link.startsWith('http')){\n            return await jsonUtils.fetchJson(link);\n        }\n        else{\n            return await jsonUtils.readJSON(link);\n        }\n    }\n    /**\n     * query the description json \n     * @private\n     * @returns { Object } description json object\n     * @memberof CausalNetEmbedding\n     */\n    async queryDescription(){\n        const DescriptionLink = this.baseLink + 'wordvec.description.json';\n        this.logger.debug({ DescriptionLink });\n        var description = this.query(DescriptionLink);\n        await this.Storage.setItem(this.embeddingDescriptionPath, JSON.stringify(description));\n        this.description = description;\n        return this.description;\n    }\n}\n\nexport default new CausalNetEmbedding();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "CausalNetEmbedding",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "importStyle": null,
    "description": "This CausalNetEmbedding provide methods for transform raw tokenized sentence into \nits single vector representation\nmixWith:\n        [   StorageMixins, \n            MemCacheMixins,\n            TokenLookUpMixins,\n            ChunkLookUpMixins,\n            WordEmbeddingMixins ])}",
    "examples": [
      "import { causalNetEmbedding } from 'causal-net.representation';\nimport { termLogger } from 'causal-net.log';\n(async ()=>{\n    const configLink = '../../datasets/WordVec_EN/';\n    await causalNetEmbedding.connect(configLink, true);\n    //first time transform will find on storage cache\n    let vecs = await causalNetEmbedding.transform(['this', 'is', 'test']);\n    for(let vec of vecs){\n        termLogger.log({ vec });\n    }\n    //second time transform will find on memory cache\n    vecs = await causalNetEmbedding.transform(['this', 'is', 'test']);\n    for(let vec of vecs){\n        termLogger.log({ vec });\n    }\n    //return the tensor representing sentence\n    let sentVec = await causalNetEmbedding.sentenceEncode([ ['this', 'is', 'test'] ]);\n    sentVec.print();\n})().catch(err=>{\n    console.error(err);\n});"
    ],
    "lineNumber": 44,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetEmbedding"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "fetch",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#fetch",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "name": "MemCache",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "f",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#f",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "embeddingSavePath",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#embeddingSavePath",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "embeddingDescriptionPath",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#embeddingDescriptionPath",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "get",
    "name": "VecSize",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#VecSize",
    "access": "public",
    "description": "Return veczie in positive number",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#connect",
    "access": "public",
    "description": "Load configure of pretrained vector from either local folder or remote server. \nAfter connect, the result is cached for next time init.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL",
          "FilePath "
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "link to load"
      },
      {
        "nullable": null,
        "types": [
          " boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "refresh",
        "description": "force to discard local cache"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "baseLink",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#baseLink",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "getDescription",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#getDescription",
    "access": "private",
    "description": "This method is called by connect",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "forceFecth",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "description",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#description",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "member",
    "name": "TokenChunkIdMapper",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#TokenChunkIdMapper",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "vecsize",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#vecsize",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "method",
    "name": "query",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#query",
    "access": "private",
    "description": "fetch or read configure depends on provied link format",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "queryDescription",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#queryDescription",
    "access": "private",
    "description": "query the description json ",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Object } description json object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": "description json object"
    },
    "params": []
  },
  {
    "__docId__": 468,
    "kind": "variable",
    "name": "causalNetEmbedding",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~causalNetEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "importStyle": "causalNetEmbedding",
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/functor.js",
    "content": "import { Functor as BaseFunctor } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { default as WordEmbeddingFunctorMixins } from './wordEmbeddingFunctor.mixins';\n/**\n * This Function class provides methods for common used ultilities function\n * @export\n * @class Function\n * @extends BaseFunctor\n */\n\nclass Functor extends platform.mixWith(BaseFunctor, \n        [WordEmbeddingFunctorMixins]){\n    constructor(){\n        super();\n    }\n}\n\nexport default new Functor();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/functor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 470,
    "kind": "class",
    "name": "Functor",
    "memberof": "causality/packages/causality-representation/src/functor.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/functor.js~Functor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/functor.js",
    "importStyle": null,
    "description": "This Function class provides methods for common used ultilities function",
    "lineNumber": 11,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Function"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 471,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/functor.js~Functor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/functor.js~Functor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 472,
    "kind": "variable",
    "name": "functor",
    "memberof": "causality/packages/causality-representation/src/functor.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/functor.js~functor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/functor.js",
    "importStyle": "functor",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-representation/src/functor.js~Functor"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/index.js",
    "content": "export { default as RepresentationMixins } from './representation.mixins';\nexport { default as causalNetEmbedding } from './causalNetEmbedding';\nexport { default as universalEmbedding } from './universalEmbedding';\nexport { default as WordEmbeddingMixins } from './wordEmbedding.mixins';\nexport { ChunkLookupMixins, TokenLookUpMixins } from './Lookup';\nexport { default as WordEmbeddingFunctorMixins } from './wordEmbeddingFunctor.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 474,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/representation.mixins.js",
    "content": "import { Tensor } from 'causal-net.core'; \nimport { assert } from 'causal-net.utils';\n/**\n * This RepresentationMixins provide mixins for composing pipeline with representation transform for text\n * @class RepresentationMixins\n * @extends  BasePipelineClass\n * @example\n * [EXAMPLE ../examples/embeddingMixins.babel.node.js]\n */\nconst RepresentationMixins = (BasePipelineClass)=> class extends BasePipelineClass{ \n    /**\n     * Return Embedding instance\n     *\n     * @readonly\n     * @memberof RepresentationMixins\n     */\n    get Representation(){\n        if(!this.representation){\n            throw Error('representation is not set');\n        }\n        return this.representation;\n    }\n    \n    set Representation(representation){\n        assert.beInstanceOf(representation, Tensor);\n        this.representation = representation;\n    }\n    /**\n     * Load configure of pretrained vector from either local folder or remote server. \n     * After connect, the result is cached for next time init.\n     * @param { URL|FilePath } link - link to load\n     * @param { boolean } [refresh=false] - force to discard local cache\n     * @returns { Promise }\n     * @memberof RepresentationMixins\n     */\n    async connect(){\n        if(super.connect){\n            super.connect();\n        }\n        let configureLink = this.embeddingConfig;\n        this.logger.log(`representation connect to ${configureLink}`);\n        await this.Representation.connect(configureLink);\n    }\n    /**\n     * set embedding for pipeline\n     * @param { Object } netConfig - contain Embedding instance and Embedding configure\n     * @memberof RepresentationMixins\n     */\n    setRepresentationByConfig(netConfig){\n        let { EmbeddingConfig, Embedding } = netConfig.Representation;\n        assert.beInstanceOf(EmbeddingConfig, String);\n        this.Representation = Embedding;\n        this.embeddingConfig = EmbeddingConfig;\n    }\n};\nexport default RepresentationMixins;    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/representation.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 475,
    "kind": "class",
    "name": "RepresentationMixins",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/representation.mixins.js",
    "importStyle": "RepresentationMixins",
    "description": "This RepresentationMixins provide mixins for composing pipeline with representation transform for text",
    "examples": [
      "import { RepresentationMixins, causalNetEmbedding } from 'causal-net.representation';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nconst PipeLineConfigure = {\n    Representation: {\n        Embedding: causalNetEmbedding,\n        EmbeddingConfig: '../../datasets/WordVec_EN/',\n    }\n}\nclass SimplePipeline extends platform.mixWith(Tensor, [RepresentationMixins]){\n    constructor(configure){\n        super();\n        this.setRepresentationByConfig(configure);\n    }\n}\nlet pipeline = new SimplePipeline(PipeLineConfigure);\npipeline.connect();\nconsole.log(pipeline.Representation);"
    ],
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RepresentationMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 476,
    "kind": "get",
    "name": "Representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#Representation",
    "access": "public",
    "description": "Return Embedding instance",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "set",
    "name": "Representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#Representation",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 478,
    "kind": "member",
    "name": "representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#representation",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#connect",
    "access": "public",
    "description": "Load configure of pretrained vector from either local folder or remote server. \nAfter connect, the result is cached for next time init.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL",
          "FilePath "
        ],
        "spread": false,
        "optional": false,
        "name": "link",
        "description": "link to load"
      },
      {
        "nullable": null,
        "types": [
          " boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "refresh",
        "description": "force to discard local cache"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 480,
    "kind": "method",
    "name": "setRepresentationByConfig",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#setRepresentationByConfig",
    "access": "public",
    "description": "set embedding for pipeline",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "netConfig",
        "description": "contain Embedding instance and Embedding configure"
      }
    ],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "embeddingConfig",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#embeddingConfig",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/universalEmbedding.js",
    "content": "import { platform, fetch } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { default as VectorMetricMixins } from './vectorMetrics.mixins';\n/**\n *\n * This UniversialEmbedding provide methods for transform sentences into \n * its single vector representation \n * based on [use](https://github.com/tensorflow/tfjs-models/tree/master/universal-sentence-encoder)\n * @class UniversialEmbedding\n * @extends Tensor\n * @example\n * [EXAMPLE ../examples/universalEmbedding.babel.js]\n */\nclass UniversialEmbedding extends platform.mixWith(Tensor, \n    [ VectorMetricMixins ]){\n    \n    constructor(){\n        super();\n        /**\n         * @private { TensorModel } \n         */\n        this.use = require('@tensorflow-models/universal-sentence-encoder');\n        this.model = null;\n    }\n    \n    async connect(){\n        if(global){\n            //TODO: make better with platform\n            global.fetch = fetch.fetch;\n        }\n        this.model = await this.use.load();\n        return this;\n    }\n\n    async sentenceEncode(sentences){\n        if(!this.model){\n            throw Error(`model is not connect`);\n        }\n        let embeddings = await this.model.embed(sentences);\n        return embeddings;\n    }\n}\nexport default new UniversialEmbedding();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/universalEmbedding.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 484,
    "kind": "class",
    "name": "UniversialEmbedding",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/universalEmbedding.js",
    "importStyle": null,
    "description": "\nThis UniversialEmbedding provide methods for transform sentences into \nits single vector representation \nbased on [use](https://github.com/tensorflow/tfjs-models/tree/master/universal-sentence-encoder)",
    "examples": [
      "import { universalEmbedding, Log } from 'causal-net.representation';\nimport { termLogger } from 'causal-net.log';\n(async ()=>{\n    // termLogger.groupBegin();\n    await universalEmbedding.connect();\n    // termLogger.groupEnd();\n    let sentVec = await universalEmbedding.sentenceEncode([ 'this is test' ])\n    sentVec.print();\n})();"
    ],
    "lineNumber": 22,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UniversialEmbedding"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 485,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 486,
    "kind": "member",
    "name": "use",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#use",
    "access": "private",
    "description": "",
    "lineNumber": 30,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 487,
    "kind": "member",
    "name": "model",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#model",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#connect",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "sentenceEncode",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#sentenceEncode",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "sentences",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "variable",
    "name": "universialEmbedding",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~universialEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/universalEmbedding.js",
    "importStyle": "universialEmbedding",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/vectorMetrics.mixins.js",
    "content": "/**\n * This VectorMetricMixins class is provide methods for comparing vector representation of different sentences\n * @class VectorMetricMixins\n * @extends  BaseEmbeddingClass\n */\nconst VectorMetricMixins = (BaseEmbeddingClass)=> class extends BaseEmbeddingClass{ \n    \n    /**\n     * return the eucleudian distance between two representation vectors\n     * @returns { Array } vec\n     */\n    async encodeMatching(sentence1, sentence2){\n        let x = await this.sentenceEncode([sentence1]);\n        x = x.reshape([-1]);\n        let y = await this.sentenceEncode([sentence2]);\n        y = y.reshape([-1]);\n        return x.dot(y).div(x.norm().mul(y.norm()));\n    }\n};\n\nexport default VectorMetricMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/vectorMetrics.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "class",
    "name": "VectorMetricMixins",
    "memberof": "causality/packages/causality-representation/src/vectorMetrics.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/vectorMetrics.mixins.js~VectorMetricMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/vectorMetrics.mixins.js",
    "importStyle": "VectorMetricMixins",
    "description": "This VectorMetricMixins class is provide methods for comparing vector representation of different sentences",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "VectorMetricMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "encodeMatching",
    "memberof": "causality/packages/causality-representation/src/vectorMetrics.mixins.js~VectorMetricMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/vectorMetrics.mixins.js~VectorMetricMixins#encodeMatching",
    "access": "public",
    "description": "return the eucleudian distance between two representation vectors",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } vec"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "vec"
    },
    "params": [
      {
        "name": "sentence1",
        "types": [
          "*"
        ]
      },
      {
        "name": "sentence2",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 495,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "content": "/**\n * This WordEmbeddingMixins class is provide methods for transforn sentences, tokens to vectors\n * @class CausalNetEmbedding\n * @extends  BaseEmbeddingClass\n */\nconst WordEmbeddingMixins = (BaseEmbeddingClass)=> class extends BaseEmbeddingClass{ \n    /**\n     * return default replacement for unknown vec. Currently it is set to zeros\n     * @returns { Array } vec\n     */\n    unknowVec(){\n        return this.f.zeroVec(this.VecSize);\n    }\n        \n    /**\n     * return the vectors of tokenized sentences\n     * This function require sentence to be tokenized via preprocessing\n     * @param { Array } tokens - array of string tokens of sentence\n     * @returns { Tensor } encoded sentences\n     */\n    async sentenceEncode(sentences){\n        const T = this.T;\n        let encodedSentences = [];\n        for(let tokens of sentences){\n            let vecs = await this.transform(tokens);\n            let encode = await T.tensor(vecs).mean(0);\n            encodedSentences.push(encode);\n        }\n        return T.stack(encodedSentences);\n    }\n    /**\n     * Transform tokenized sentences into tensor vectors\n     * @param { Array } tokens - 2d array for token of sentences\n     * @returns { Tensor } 2d tensor represent vectors of each input sentences\n     * @example\n     * let sentVec = await causalNetEmbedding.sentenceEncode([ ['this', 'is', 'test'] ]);\n     */\n    async transform(tokens){\n        const TokenLookUp = this.TokenLookUp, ChunkLookUp = this.ChunkLookUp;\n        \n        let vecs = [], missCacheTokens=[];\n        for(let token of tokens){\n            let vec = await TokenLookUp(token);\n            this.logger.debug({[token]: vec});\n            if(vec === null){\n                missCacheTokens = [...missCacheTokens, token];\n            }\n            vecs = [...vecs, token];\n        }\n        if(missCacheTokens.length === 0){\n            return vecs;\n        }\n        \n        let {tokenChunkIds, chunkIds} = \n            this.F.mapTokenToChunkIds(missCacheTokens, this.TokenChunkIdMapper);\n        \n        this.logger.debug({tokenChunkIds, chunkIds});\n        let masterchunk = {};\n        for(let chunkId of chunkIds){\n            if(chunkId !== null){//not in chunk\n                console.log('lookup');\n                let chunk = await ChunkLookUp(chunkId);\n                if(chunk === null){\n                    chunk = await this.queryChunk(chunkId);\n                    await this.updateChunkLookUp(chunkId, chunk);\n                }\n                masterchunk = {...masterchunk, ...chunk};\n            }\n        }\n        \n        let finalVecs = vecs.reduce((finalVecs, vec)=>{\n                            if( typeof(vec) === \"string\" ){\n                                let _vec = masterchunk[vec];\n                                if(_vec === undefined){\n                                    _vec = this.unknowVec();\n                                }\n                                finalVecs.push(_vec);\n                            }\n                            else{\n                                finalVecs.push(vec);\n                            }\n                            return finalVecs;\n                        }, []);\n        return finalVecs;\n    }   \n};\nexport default WordEmbeddingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 496,
    "kind": "class",
    "name": "WordEmbeddingMixins",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "importStyle": "WordEmbeddingMixins",
    "description": "This WordEmbeddingMixins class is provide methods for transforn sentences, tokens to vectors",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetEmbedding"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "unknowVec",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#unknowVec",
    "access": "public",
    "description": "return default replacement for unknown vec. Currently it is set to zeros",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } vec"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "vec"
    },
    "params": []
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "sentenceEncode",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#sentenceEncode",
    "access": "public",
    "description": "return the vectors of tokenized sentences\nThis function require sentence to be tokenized via preprocessing",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Tensor } encoded sentences"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "array of string tokens of sentence"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Tensor "
      ],
      "spread": false,
      "description": "encoded sentences"
    }
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "transform",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#transform",
    "access": "public",
    "description": "Transform tokenized sentences into tensor vectors",
    "examples": [
      "let sentVec = await causalNetEmbedding.sentenceEncode([ ['this', 'is', 'test'] ]);"
    ],
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Tensor } 2d tensor represent vectors of each input sentences"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "2d array for token of sentences"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Tensor "
      ],
      "spread": false,
      "description": "2d tensor represent vectors of each input sentences"
    }
  },
  {
    "__docId__": 500,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js",
    "content": "const WordEmbeddingFunctorMixins = (BaseFunctionClass) => class extends BaseFunctionClass{\n    /**\n     *\n     * @param { Array } tokens - list of tokens to find coresponding ids\n     * @param { Function } mapper - \n     * @returns \n     */\n    mapTokenToChunkIds(tokens, mapper){\n        const R = this.R;\n        const TokenChunkIdMapper = mapper;\n        let tokenChunkMap = tokens.map( t => {\n            let chunkId = TokenChunkIdMapper(t);\n            return [[t, chunkId], chunkId]; \n        });\n        let [tokenChunkIds, _chunkIds] = this.unzip(tokenChunkMap);\n        let chunkIds = R.uniq(_chunkIds);\n        console.log({chunkIds, tokenChunkIds});\n        return {tokenChunkIds, chunkIds};\n    }\n    /**\n     * return zero vector given the vec size\n     * @param { Number } vecSize - positive integer indicates vector length\n     * @returns { Array } zero vector\n     */\n    zeroVec(vecSize){\n        return this.R.map(()=>0,this.R.range(0, vecSize));\n    };\n};\nexport default WordEmbeddingFunctorMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 501,
    "kind": "class",
    "name": "WordEmbeddingFunctorMixins",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js~WordEmbeddingFunctorMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js",
    "importStyle": "WordEmbeddingFunctorMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseFunctionClass"
    ]
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "mapTokenToChunkIds",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js~WordEmbeddingFunctorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js~WordEmbeddingFunctorMixins#mapTokenToChunkIds",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "list of tokens to find coresponding ids"
      },
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "mapper",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"tokenChunkIds\": *, \"chunkIds\": *}"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "zeroVec",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js~WordEmbeddingFunctorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunctor.mixins.js~WordEmbeddingFunctorMixins#zeroVec",
    "access": "public",
    "description": "return zero vector given the vec size",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } zero vector"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "vecSize",
        "description": "positive integer indicates vector length"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "zero vector"
    }
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "content": "import { Function as BaseFunction } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport random from 'random';\nimport { default as SubSamplingMixins } from './subSampling.mixins';\nimport { default as NegSamplingMixins } from './negSampling.mixins';\n\n/**\n * This CausalNetSampling class provides sampling methods\n * mixwith:\n * [ SubSamplingMixins, NegSamplingMixins ]\n * @class CausalNetSampling\n * @extends Function\n * @example\n * [EXAMPLE ../examples/causalNetSampling.babel.js]\n */\nclass CausalNetSampling extends platform.mixWith( BaseFunction, \n    [ SubSamplingMixins, NegSamplingMixins ]){\n    constructor(){\n        super();\n        this.Random = random;    \n    }\n}\n\nexport default new CausalNetSampling();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/causalNetSampling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "class",
    "name": "CausalNetSampling",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/causalNetSampling.js",
    "importStyle": null,
    "description": "This CausalNetSampling class provides sampling methods\nmixwith:\n[ SubSamplingMixins, NegSamplingMixins ]",
    "examples": [
      "import { causalNetSampling } from 'causal-net.sampling';\nimport {termLogger as Logger} from 'causal-net.log';\nlet numSamples = 4;\nlet idSize = 10;//id list: [0,1,2,3,4,5,6,7,8,9]\nLogger.log(causalNetSampling.subSampling(numSamples, idSize));\n\nnumSamples = 4;\nlet positiveSampleId = [0, 1];\n//ids: [0, 1, 2, 3];\nlet probIds = [0.9, 0.9, 0.3, 0.7];\nlet samples = causalNetSampling.negSampling(numSamples, positiveSampleId, probIds);\ntermLogger.log({ samples });"
    ],
    "lineNumber": 27,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetSampling"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 506,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 507,
    "kind": "member",
    "name": "Random",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "static": false,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling#Random",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "variable",
    "name": "causalNetSampling",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~causalNetSampling",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/causalNetSampling.js",
    "importStyle": "causalNetSampling",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/index.js",
    "content": "export { default as causalNetSampling } from './causalNetSampling';\nexport { default as SamplingMixins } from './sampling.mixins';\n\nexport { default as SubSamplingMixins } from './subSampling.mixins';\nexport { default as NegSamplingMixins } from './negSampling.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/negSampling.mixins.js",
    "content": "import random from \"random/dist/random\";\n\nconst NegativeSamplingMixins = (BaseSamplingClass)=> class extends BaseSamplingClass{\n    /**\n     * Perform negative sampling given the select prob of ids and list of positive samples\n     * @param { Number } negativeSize - size to sample\n     * @param { Array } positiveSamples - Array of possitive Ids\n     * @param { Array } candidateProbs - Array of probablity of candidate Ids\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    negSampling(negativeSize, positiveSamples, candidateProbs, replacable=true){\n        const R = this.R, Random = this.Random;\n        if(R.any((v)=> !R.type(Number,v) || v > 1 || v < 0, candidateProbs)){\n            throw Error(`${JSON.stringify(candidateProbs)} is not allow`);\n        }\n        let seletionProbs = R.reduce((selectionProbs, pidx)=>{\n                                selectionProbs[pidx] = Infinity;//positive candidate never be choosed\n                                return selectionProbs;\n                            }, R.clone(candidateProbs), positiveSamples);\n        let samples = [], takenIdxs = R.clone(seletionProbs);\n        const GenNewCandidateIdx = ()=>Random.int(0, seletionProbs.length-1);\n        const SelectIfHighProb = (prob)=>{\n            let rand = Random.float();\n            return rand>prob;\n        };\n        while(samples.length < negativeSize){\n            let idx = GenNewCandidateIdx();\n            let selected = SelectIfHighProb(seletionProbs[idx]);\n            if(!selected){\n                continue;\n            }\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, idx];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default NegativeSamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/negSampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 511,
    "kind": "class",
    "name": "NegativeSamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/negSampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/negSampling.mixins.js",
    "importStyle": "NegativeSamplingMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSamplingClass"
    ]
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "negSampling",
    "memberof": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins#negSampling",
    "access": "public",
    "description": "Perform negative sampling given the select prob of ids and list of positive samples",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array of sampled Ids"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "negativeSize",
        "description": "size to sample"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "positiveSamples",
        "description": "Array of possitive Ids"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "candidateProbs",
        "description": "Array of probablity of candidate Ids"
      },
      {
        "nullable": null,
        "types": [
          " Boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "replacable",
        "description": "if true, no duplicated sampling Id returned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of sampled Ids"
    }
  },
  {
    "__docId__": 513,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/sampling.mixins.js",
    "content": "import { Function } from 'causal-net.core';\nimport { assert } from 'causal-net.utils';\n/**\n * This SamplingMixins class provide mixins for PipelineClass or DatasetClass\n * @class SamplingMixins\n * @extends BasePipelineClass\n * @example\n * [EXAMPLE ../examples/sampling.mixins.babel.js]\n */\nconst SamplingMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    /**\n     * get current random instance\n     */\n    get Sampling(){\n        if(!this.sampling){\n            throw Error(`Sampling is not set`);\n        }\n        return this.sampling;\n    }\n    \n    /**\n     * set Sampling instance\n     * @readonly\n     */\n    set Sampling(sampling){\n        assert.beInstanceOf(sampling, Function);\n        this.sampling = sampling;\n    }\n};\n\nexport default SamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/sampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "class",
    "name": "SamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/sampling.mixins.js",
    "importStyle": "SamplingMixins",
    "description": "This SamplingMixins class provide mixins for PipelineClass or DatasetClass",
    "examples": [
      "import { SamplingMixins, causalNetSampling } from 'causal-net.sampling';\nimport { Platform } from 'causal-net.utils';\nimport { Tensor, Function } from 'causal-net.core';\nconsole.log(causalNetSampling instanceof Function);\nclass SimplePipeline extends Platform.mixWith(Tensor, [SamplingMixins]){\n    constructor(){\n        super();\n        this.Sampling = causalNetSampling;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Sampling);"
    ],
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SamplingMixins"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 515,
    "kind": "get",
    "name": "Sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#Sampling",
    "access": "public",
    "description": "get current random instance",
    "lineNumber": 25,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "set",
    "name": "Sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#Sampling",
    "access": "public",
    "description": "set Sampling instance",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 517,
    "kind": "member",
    "name": "sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#sampling",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/subSampling.mixins.js",
    "content": "const SubSamplingMixins = (BaseSamplingClass) => class extends BaseSamplingClass{\n    /**\n     * Perform uniform sample a sub set of Ids given the candidate list\n     * @param { Number } samplingSize\n     * @param { Array|Number } candidateList - list of candidates or size of candidate list\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    subSampling(samplingSize, candidateList, replacable=true){\n        const R = this.R, Random = this.Random;\n        let candidates = Array.isArray(candidateList)?R.clone(candidateList):R.range(0, candidateList);\n        if(candidates.length === 0){\n            throw Error('candidate length should be positive');\n        }\n        let samples = [], takenIdxs = R.clone(candidates);\n        const GenNewCandidateIdx = ()=>Random.int(0, candidates.length-1);\n        while(samples.length < samplingSize){\n            let idx = GenNewCandidateIdx();\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, candidates[idx]];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default SubSamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/subSampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 519,
    "kind": "class",
    "name": "SubSamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/subSampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/subSampling.mixins.js",
    "importStyle": "SubSamplingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSamplingClass"
    ]
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "subSampling",
    "memberof": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins#subSampling",
    "access": "public",
    "description": "Perform uniform sample a sub set of Ids given the candidate list",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array of sampled Ids"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "samplingSize",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Array",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "candidateList",
        "description": "list of candidates or size of candidate list"
      },
      {
        "nullable": null,
        "types": [
          " Boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "replacable",
        "description": "if true, no duplicated sampling Id returned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of sampled Ids"
    }
  },
  {
    "__docId__": 521,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/CSVFile.mixins.js",
    "content": "import { csvUtils } from 'causal-net.utils';\n/** \n * This CSVFileMixins class provide mixins for handle read/write/fetch csv content\n * @class CSVFileMixins\n * @experiment\n * @extends { StorageClass } \n */\nconst CSVFileMixins = (StorageClass)=> class extends StorageClass{\n    /**\n     * Read CSV content as item array given the file path\n     * @param { String } filePath - full file path \n     * @returns { Promise } Array content promise \n     */\n    async readCSVFile(filePath){\n        return await this.readFile(filePath);\n    }\n    /**\n     * @param  {} filePath\n     * @param  {} data\n     */\n    async writeCSVFile(filePath, parsedData){\n        return await this.writeFile(filePath, parsedData);\n    }\n\n    /**\n     * fetch CSV file, transform to get raw pixel data and save to file at the filePath\n     * @param { Url } url - url for png file\n     * @param { String } filePath - file name to save content\n     * @returns { Promise } Array content promiser \n     */\n    async fetchCSVFile(url, filePath){\n        let data = await csvUtils.fetchCSV(url);\n        return await this.writePNGFile(filePath, data);\n    }\n};\nexport default CSVFileMixins;\n    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/CSVFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 522,
    "kind": "class",
    "name": "CSVFileMixins",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/CSVFile.mixins.js",
    "importStyle": "CSVFileMixins",
    "description": "This CSVFileMixins class provide mixins for handle read/write/fetch csv content",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CSVFileMixins"
      },
      {
        "tagName": "@experiment",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      " StorageClass "
    ]
  },
  {
    "__docId__": 523,
    "kind": "method",
    "name": "readCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#readCSVFile",
    "access": "public",
    "description": "Read CSV content as item array given the file path",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promise "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "full file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promise"
    }
  },
  {
    "__docId__": 524,
    "kind": "method",
    "name": "writeCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#writeCSVFile",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "method",
    "name": "fetchCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#fetchCSVFile",
    "access": "public",
    "description": "fetch CSV file, transform to get raw pixel data and save to file at the filePath",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Url "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for png file"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "file name to save content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 526,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/PNGFile.mixins.js",
    "content": "import { pngUtils } from 'causal-net.utils';\n/**\n * This LevelJSMixins class provide mixins for handle read/write/fetch png content\n * @class PNGFileMixins\n * @extends {  BaseStorage } \n */\nconst PNGFileMixins = (StorageClass)=> class extends StorageClass{\n    /**\n     * Read PNG pixel data given the file path\n     * @param { String } filePath - full file path \n     * @returns { Promise } Array content promiser \n     */\n    async readPNGFile(filePath){\n        let item = await this.getItem(filePath, true);\n        return item[filePath];\n    }\n    /**\n     * write raw pixel data as Array to file at filePath\n     * @param  { String } filePath\n     * @param  { Array|ArrayBuffer } imgBuffer\n     * @returns { Promise } Array content promiser \n     */\n    async writePNGFile(filePath, imgBuffer){\n        return await this.writeFile(filePath, imgBuffer);\n    }\n    /**\n     * fetch PNG file, transform to get raw pixel data and save to file at the filePath\n     * @param { Url } url - url for png file\n     * @param { String } filePath - file name to save content\n     * @returns { Promise } Array content promiser \n     */\n    async fetchPNGFile(url, filePath){\n        let data = await pngUtils.fetchPNG(url);\n        return await this.writePNGFile(filePath, data);\n    }\n};\nexport default PNGFileMixins;\n    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/PNGFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 527,
    "kind": "class",
    "name": "PNGFileMixins",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/PNGFile.mixins.js",
    "importStyle": "PNGFileMixins",
    "description": "This LevelJSMixins class provide mixins for handle read/write/fetch png content",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PNGFileMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 528,
    "kind": "method",
    "name": "readPNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#readPNGFile",
    "access": "public",
    "description": "Read PNG pixel data given the file path",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "full file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 529,
    "kind": "method",
    "name": "writePNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#writePNGFile",
    "access": "public",
    "description": "write raw pixel data as Array to file at filePath",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Array",
          "ArrayBuffer "
        ],
        "spread": false,
        "optional": false,
        "name": "imgBuffer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "fetchPNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#fetchPNGFile",
    "access": "public",
    "description": "fetch PNG file, transform to get raw pixel data and save to file at the filePath",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Url "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for png file"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "file name to save content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 531,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/index.js",
    "content": "export { default as indexDBStorage } from './indexDBStorage';\nexport { default as StorageMixins } from './storage.mixins';\n\nexport { default as PNGFileMixins } from './PNGFile.mixins';\nexport { default as CSVFileMixins } from './CSVFile.mixins';\nexport { default as TextFileMixins } from './textFile.mixins';\n\n\n\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.js",
    "content": "import { platform } from 'causal-net.utils';\nimport { Store as BaseStorage } from 'causal-net.core';\nimport { default as PNGFileMixins } from './PNGFile.mixins';\nimport { default as TextFileMixins } from './textFile.mixins';\nimport { default as CSVFileMixins } from './CSVFile.mixins';\nimport { default as LevelDownMixins } from './indexDBStorage.mixins.node';\nimport { default as LevelJSMixins } from './indexDBStorage.mixins.web';\n\n/**\n * This indexDBStorage class is the default consistent storage based on \n * [leveldown](https://www.npmjs.com/package/leveldown) storage \n * with support file extends: png, csv, text by those corresponding mixins.\n * mixWith:\n *  - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n *  - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]\n * @class IndexDBStorage\n * @extends {  BaseStorage } \n * @example\n * [EXAMPLE ../examples/storage.babel.js]\n */\nclass IndexDBStorage extends platform.mixWith( BaseStorage, \n                       { 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n                          'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins] } ){\n    \n    correctName(filePath){\n        filePath = '/' +filePath;\n        return filePath.replace(/\\/{1,}/g, '/');\n    }\n    /**\n     * Batch operation with Array of ops\n     * @param { String } key\n     * @returns { Promise } key promise\n     * @memberof IndexDBStorage\n     * @example\n     *  let ops = [\n     *   { type: 'put', key: 'temp', value: '123445' },\n     *   { type: 'del', key: 'temp' }];\n     *  //batch does not support 'get' type\n     *  let batchResult = await indexDBStorage.batch(ops);\n     */\n    async batch(ops){\n        return new Promise((resolve, reject)=>{\n            this.store.batch(ops, (err, data)=>{\n                if(err){\n                    this.logger.log({ops, err});\n                    reject('error ops');\n                }\n                else{\n                    resolve(ops);\n                }\n            });\n        });\n    }\n    /**\n     * get list of file base on prefix\n     * @param { String } filePath\n     * @return { Promise } List of filenames \n     * @memberof IndexDBStorage\n     */\n    async getFileList(filePath){\n        filePath = this.correctName(filePath);\n        return await this.getItemList(filePath);\n    }\n\n    /**\n     * delete all files with name match prefix pattern \n     * return list of deleted files\n     * @param { String } filePath - pattern of file path\n     * @returns { Promise } deleted files list promise\n     * @memberof IndexDBStorage\n     */\n    async deleteFileByPrefix(filePath){\n        filePath = this.correctName(filePath);\n        const DelOp = (key)=>({type: 'del', key: key});\n        let fileList = await this.getFileList(filePath);\n        let delFileOps = fileList.map(f=>DelOp(f));\n        return await this.batch(delFileOps);\n    }\n}\n\nexport default new IndexDBStorage();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "class",
    "name": "IndexDBStorage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.js",
    "importStyle": null,
    "description": "This indexDBStorage class is the default consistent storage based on \n[leveldown](https://www.npmjs.com/package/leveldown) storage \nwith support file extends: png, csv, text by those corresponding mixins.\nmixWith:\n - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]",
    "examples": [
      "import { indexDBStorage } from 'causal-net.storage';\n(async ()=>{\n    await indexDBStorage.writeFile('/temp','12345');\n    let content  = await indexDBStorage.readFile('/temp');\n    console.log({content});\n    \n    //get file list\n    let listFiles = await indexDBStorage.getFileList('/');\n    console.log({listFiles});\n    \n    //fetch png image and save pixel data into file\n    const url = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    await indexDBStorage.fetchPNGFile(url, 'icon');\n    const pixelArray = await indexDBStorage.readPNGFile('icon');\n    console.log({ pixelArray });\n\n    let ops = [\n        { type: 'put', key: 'temp', value: '123445' },\n        { type: 'del', key: 'temp' }];\n    //batch does not support 'get' type\n    let batchResult = await indexDBStorage.batch(ops);\n    console.log({batchResult});\n})().catch(err=>{\n    console.error(err);\n});"
    ],
    "lineNumber": 46,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "IndexDBStorage"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 534,
    "kind": "method",
    "name": "correctName",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#correctName",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 535,
    "kind": "method",
    "name": "batch",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#batch",
    "access": "public",
    "description": "Batch operation with Array of ops",
    "examples": [
      " let ops = [\n  { type: 'put', key: 'temp', value: '123445' },\n  { type: 'del', key: 'temp' }];\n //batch does not support 'get' type\n let batchResult = await indexDBStorage.batch(ops);"
    ],
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "key promise"
    }
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "getFileList",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#getFileList",
    "access": "public",
    "description": "get list of file base on prefix",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "List of filenames"
    }
  },
  {
    "__docId__": 537,
    "kind": "method",
    "name": "deleteFileByPrefix",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#deleteFileByPrefix",
    "access": "public",
    "description": "delete all files with name match prefix pattern \nreturn list of deleted files",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } deleted files list promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "pattern of file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "deleted files list promise"
    }
  },
  {
    "__docId__": 538,
    "kind": "variable",
    "name": "indexDBStorage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~indexDBStorage",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.js",
    "importStyle": "indexDBStorage",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "content": "/**\n * This LevelDownMixins class provide mixins for implement indexDB-based storage class \n * with [leveldown](https://www.npmjs.com/package/leveldown) storage on node environment\n * @class LevelDownMixins\n * @extends {  StorageClass } \n */\nconst LevelDownMixins = (StorageClass)=> class extends StorageClass{ \n    constructor(){\n        super();\n        this.connect('data');\n    }\n    /**\n     * This method must be called to connect with leveldown storage once instance create\n     * @param { String } storageName - storage name\n     */\n    connect(storageName){\n        var leveldown = require('leveldown');\n        this.store = this.levelup(leveldown(storageName));\n    }\n};\nexport default LevelDownMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 540,
    "kind": "class",
    "name": "LevelDownMixins",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "importStyle": "LevelDownMixins",
    "description": "This LevelDownMixins class provide mixins for implement indexDB-based storage class \nwith [leveldown](https://www.npmjs.com/package/leveldown) storage on node environment",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LevelDownMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  StorageClass "
    ]
  },
  {
    "__docId__": 541,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#connect",
    "access": "public",
    "description": "This method must be called to connect with leveldown storage once instance create",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "storageName",
        "description": "storage name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 543,
    "kind": "member",
    "name": "store",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#store",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 544,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "content": "/**\n * This LevelJSMixins class provide mixins for implement indexDB-based storage class \n * with [level-js](https://www.npmjs.com/package/level-js) storage on web environment\n * @class LevelDownMixins\n * @extends {  StorageClass } \n */\nconst LevelJSMixins = (StorageClass)=> class extends StorageClass{ \n    constructor(){\n        super();\n        this.connect('data');\n    }\n    /**\n     * This method must be called to connect with level-js storage once instance create\n     * @param { String } storageName - storage name\n     */\n    connect(storageName){\n        var leveljs = require('level-js');\n        this.store = this.levelup(leveljs(storageName));\n    }\n};\nexport default LevelJSMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 545,
    "kind": "class",
    "name": "LevelJSMixins",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "importStyle": "LevelJSMixins",
    "description": "This LevelJSMixins class provide mixins for implement indexDB-based storage class \nwith [level-js](https://www.npmjs.com/package/level-js) storage on web environment",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LevelDownMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  StorageClass "
    ]
  },
  {
    "__docId__": 546,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#connect",
    "access": "public",
    "description": "This method must be called to connect with level-js storage once instance create",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "storageName",
        "description": "storage name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 548,
    "kind": "member",
    "name": "store",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#store",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/storage.mixins.js",
    "content": "import { Store as BaseStorage } from 'causal-net.core';\nimport { assert } from 'causal-net.utils';\n/**\n * This indexDBStorage class is the default consistent storage based on \n * [leveldown](https://www.npmjs.com/package/leveldown) storage \n * with support file extends: png, csv, text by those corresponding mixins.\n * mixWith:\n *  - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n *  - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]\n * @class IndexDBStorage\n * @extends {  BaseStorage } \n * @example\n * [EXAMPLE ../examples/storage.mixins.babel.js]\n */\nconst StorageMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    /**\n     * return file list of current storage\n     * @returns\n     */\n    async storageSummary(){\n        let storage = this.Storage;\n        return await this.storage.getFileList();\n    }\n    \n    /**\n     * set storage instance to pipeline\n     * @param { Object } - storage instance\n     */\n    set Storage(storage){\n        assert.beInstanceOf(storage, BaseStorage);\n        this.storage = storage;\n    }\n    \n    /**\n     * get current storage\n     * @readonly\n     */\n    get Storage(){\n        if(!this.storage){\n            throw Error('storage is not set');\n        }\n        return this.storage;\n    }\n};\nexport default StorageMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/storage.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 550,
    "kind": "class",
    "name": "StorageMixins",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/storage.mixins.js",
    "importStyle": "StorageMixins",
    "description": "This indexDBStorage class is the default consistent storage based on \n[leveldown](https://www.npmjs.com/package/leveldown) storage \nwith support file extends: png, csv, text by those corresponding mixins.\nmixWith:\n - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]",
    "examples": [
      "import { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { platform } from 'causal-net.utils';\nimport { Tensor, Store } from 'causal-net.core';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [StorageMixins]){\n    constructor(storage){\n        super();\n        this.Storage = storage;\n    }\n}\nlet pipeline = new SimplePipeline(indexDBStorage);\nconsole.log(pipeline.Storage instanceof Store);"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "IndexDBStorage"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "storageSummary",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#storageSummary",
    "access": "public",
    "description": "return file list of current storage",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "set",
    "name": "Storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#Storage",
    "access": "public",
    "description": "set storage instance to pipeline",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "storage instance"
      }
    ]
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#storage",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "get",
    "name": "Storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#Storage",
    "access": "public",
    "description": "get current storage",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/textFile.mixins.js",
    "content": "import { fetch } from 'causal-net.utils';\nconst TextFileMixins = (StorageClass)=> class extends StorageClass{\n    \n    /**\n     * @param  {} filePath\n     */\n    async readFile(filePath){\n        filePath = this.correctName(filePath);\n        let item = await this.getItem(filePath);\n        return item[filePath];\n    }\n    /**\n     * @param  {} filePath\n     * @param  {} data\n     */\n    async writeFile(filePath, data){\n        filePath = this.correctName(filePath);\n        return await this.setItem(filePath, data);\n    }\n\n    async deleteFile(filePath){\n        filePath = this.correctName(filePath);\n        return await this.delItem(filePath);\n    }\n\n    async fetchFile(url, filePath){\n        filePath = this.correctName(filePath);\n        let response = await fetch.fetchData(url);\n        return await this.writeFile(filePath, response);\n    }\n};\nexport default TextFileMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/textFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 556,
    "kind": "class",
    "name": "TextFileMixins",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/textFile.mixins.js",
    "importStyle": "TextFileMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "StorageClass"
    ]
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "readFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#readFile",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "writeFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#writeFile",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "deleteFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#deleteFile",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "fetchFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#fetchFile",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 561,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/assert.js",
    "content": "import assert from 'assert';\nimport * as generateSchema from 'generate-schema';\nimport * as Validator from 'ajv';\n/**\n * This Assert class provides asserting methods based on builtin \n * [generate-schema](https://www.npmjs.com/package/generate-schema), \n * and schema checking [ajv](https://www.npmjs.com/package/ajv) \n *\n * @class Assert\n * @example\n * [EXAMPLE ../examples/assert.babel.js]\n */\nclass Assert{\n    /**\n     *Creates an instance of assert.\n     * @memberof assert\n     */\n    constructor(){\n        /** \n         * @private \n         * @type { Object } assert\n        */\n        this.assert = assert;\n    }\n    /**\n     * Try to check if the sample pattern matchs with input value pattern. \n     * Since the auto-learnt sample pattern could be incompleted, \n     * this function usage should follow the examples.\n     * @param { Any } value - input value\n     * @param { Any } sample - sample value pattern\n     * @param { String } [name='sample'] - value name\n     * @memberof assert\n     */\n    seemMatchSample(value, sample, name='sample'){\n        let schema = generateSchema.json(name, sample);\n        delete schema.$schema;\n        let validator = new Validator(); \n        let valid = validator.addSchema(schema, name).validate(name, value);\n        if(!valid){ \n            throw Error(`value ${JSON.stringify(value)} not match schema \\n${JSON.stringify(schema)}`);\n        }\n    }\n    /**\n     * assert object to be instance of class\n     * @param { Object } instance\n     * @param { Class } targetClass\n     * @memberof assert\n     */\n    beInstanceOf(instance, targetClass){\n        if(targetClass === String){\n            if(typeof(instance) !== 'string'){\n                throw Error(`${JSON.stringify(instance)} must be type of ${targetClass.name}`);\n            }\n        }\n        if(targetClass === Function){\n            if(typeof(instance) !== 'function'){\n                throw Error(`${JSON.stringify(instance)} must be type of ${targetClass.name}`);\n            }\n        }\n        else if(!(instance instanceof targetClass)){\n            throw Error(`${JSON.stringify(instance)} must be instance of ${targetClass.name}`);\n        }\n    }\n} \n\nexport default new Assert();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/assert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 562,
    "kind": "class",
    "name": "Assert",
    "memberof": "causality/packages/causality-utils/src/assert.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/assert.js",
    "importStyle": null,
    "description": "This Assert class provides asserting methods based on builtin \n[generate-schema](https://www.npmjs.com/package/generate-schema), \nand schema checking [ajv](https://www.npmjs.com/package/ajv) ",
    "examples": [
      "import { assert } from 'causal-net.utils';\nassert.seemMatchSample([2,2,3], [1,2,3], 'validate sample');\nassert.seemMatchSample('sample text', 'pattern text', 'validate sample');\nassert.seemMatchSample( { 'text' : 'pattern text 1', 'number' : 1123 }, \n                        { 'text' : 'pattern text', 'number' : 1123 } , 'validate sample');\ntry{\n    assert.seemMatchSample(['2',2,3], [1,2,3], 'validate sample');\n}\ncatch(err){\n    //error due to mismatch schema\n    console.log(err.message);\n};\nclass A{};\nlet a = new A();\nassert.beInstanceOf(a, A);\ntry{\n    assert.beInstanceOf('1', A);\n}\ncatch(err){\n    console.log(err.message);\n}"
    ],
    "lineNumber": 34,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Assert"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 563,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#constructor",
    "access": "public",
    "description": "Creates an instance of assert.",
    "lineNumber": 39
  },
  {
    "__docId__": 564,
    "kind": "member",
    "name": "assert",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#assert",
    "access": "private",
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 565,
    "kind": "method",
    "name": "seemMatchSample",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#seemMatchSample",
    "access": "public",
    "description": "Try to check if the sample pattern matchs with input value pattern. \nSince the auto-learnt sample pattern could be incompleted, \nthis function usage should follow the examples.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "input value"
      },
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "sample",
        "description": "sample value pattern"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'sample'",
        "defaultRaw": "'sample'",
        "name": "name",
        "description": "value name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 566,
    "kind": "method",
    "name": "beInstanceOf",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#beInstanceOf",
    "access": "public",
    "description": "assert object to be instance of class",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "instance",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "targetClass",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 567,
    "kind": "variable",
    "name": "assert",
    "memberof": "causality/packages/causality-utils/src/assert.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/assert.js~assert",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/assert.js",
    "importStyle": "assert",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/assert.js~Assert"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/csvUtils.js",
    "content": "import { default as CSV } from 'csv-parser';\n/**\n * This CSVUtils class use [csv-parser](https://www.npmjs.com/package/csv-parser)\n * for csv parsing and transform csv data from fetch.\n * @todo: verify on web environment\n * @class CSVUtils\n */\nclass CSVUtils{\n    constructor(){\n        this.csv = CSV;\n        this.fs = require('fs');\n    }\n    /**\n     * return csv parser instance\n     * @readonly\n     * @memberof csvUtils\n     */\n    get CoreCSV(){\n        return this.csv;\n    }\n    /**\n     * fetch csv content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof csvUtils\n     */\n    fetchCSV(url){\n        return new Promise(async (resolve, reject)=>{\n            let reader = await fetch.streamData(url);\n            let data = [];\n            let csv = CSV();\n            csv.on('end', ()=>{\n                resolve(data);\n            });\n            csv.on('data',(row)=>{\n                data.push(row);\n            });\n            reader.pipe(csv);\n        });\n    }\n\n    writeCSV(data, columns, filePath){\n        throw Error('implement required');\n    }\n\n    readCSV(filePath){\n        const fs = this.fs, CSV = this.csv;\n        if(!fs.createReadStream){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            let data = [];\n            let csv = CSV();\n            csv.on('end', ()=>{\n                resolve(data);\n            });\n            csv.on('data',(row)=>{\n                data.push(row);\n            });\n            fs.createReadStream(filePath).pipe(csv);\n        });\n    }\n}\nexport default new CSVUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/csvUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 569,
    "kind": "class",
    "name": "CSVUtils",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/csvUtils.js",
    "importStyle": null,
    "description": "This CSVUtils class use [csv-parser](https://www.npmjs.com/package/csv-parser)\nfor csv parsing and transform csv data from fetch.\n@todo: verify on web environment",
    "lineNumber": 8,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CSVUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 570,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 571,
    "kind": "member",
    "name": "csv",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#csv",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "get",
    "name": "CoreCSV",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#CoreCSV",
    "access": "public",
    "description": "return csv parser instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "method",
    "name": "fetchCSV",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#fetchCSV",
    "access": "public",
    "description": "fetch csv content from given url",
    "lineNumber": 28,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 575,
    "kind": "method",
    "name": "writeCSV",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#writeCSV",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "columns",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 576,
    "kind": "method",
    "name": "readCSV",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~CSVUtils#readCSV",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "variable",
    "name": "cSVUtils",
    "memberof": "causality/packages/causality-utils/src/csvUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/csvUtils.js~cSVUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/csvUtils.js",
    "importStyle": "cSVUtils",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/csvUtils.js~CSVUtils"
      ]
    }
  },
  {
    "__docId__": 578,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetch.js",
    "content": "import fetch from 'cross-fetch';\nimport { default as platform } from './platform';\nimport { default as NodeStreamMixins } from './fetchStreamMixins.node';\nimport { default as WebStreamMixins } from './fetchStreamMixins.web';\n\nclass Basefetch{\n    constructor(){\n        this.fetch = fetch;\n    }\n}\n\n/**\n * This isomorphic fetch class is mixed with:\n * - NodeStreamMixins  \n * - WebStreamMixins\n * @class fetch\n * @extends Basefetch\n */\nclass Fetch extends platform.mixWith(Basefetch, {'node': [NodeStreamMixins], 'web':[WebStreamMixins]}){\n    constructor(){\n        super();\n    }\n    /**\n     * fetch text content given the url\n     * @param { String } url\n     * @returns { Promise } promise of content\n     */\n    fetchData(url){\n        return new Promise((resolve, reject)=>{\n            fetch(url).then(response=>{\n                if (response.status >= 400) {\n                    console.error(response.status);\n                    reject(\"Bad response from server\");\n                }\n                resolve(response.text());\n            });\n        });\n    }\n    /**\n     * fetch json content given the url \n     * @param { String } url\n     * @returns { promise } promise of content\n     */\n    fetchJson(url){\n        return new Promise(async (resolve, reject)=>{\n            fetch(url).then(response=>{\n                if (response.status >= 400) {\n                    console.error(response.status);\n                    reject(\"Bad response from server\");\n                }\n                resolve(response.json());\n            });\n        });\n    }\n}\n\nexport default new Fetch();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 579,
    "kind": "class",
    "name": "Basefetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~Basefetch",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 580,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Basefetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Basefetch#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 581,
    "kind": "member",
    "name": "fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Basefetch",
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Basefetch#fetch",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 582,
    "kind": "class",
    "name": "Fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": null,
    "description": "This isomorphic fetch class is mixed with:\n- NodeStreamMixins  \n- WebStreamMixins",
    "lineNumber": 19,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "fetch"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 583,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 584,
    "kind": "method",
    "name": "fetchData",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#fetchData",
    "access": "public",
    "description": "fetch text content given the url",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } promise of content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "promise of content"
    }
  },
  {
    "__docId__": 585,
    "kind": "method",
    "name": "fetchJson",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#fetchJson",
    "access": "public",
    "description": "fetch json content given the url ",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ promise } promise of content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " promise "
      ],
      "spread": false,
      "description": "promise of content"
    }
  },
  {
    "__docId__": 586,
    "kind": "variable",
    "name": "fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~fetch",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": "fetch",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/fetch.js~Fetch"
      ]
    }
  },
  {
    "__docId__": 587,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "content": "import fetch from 'cross-fetch';\n/**\n * mixins function for fetch on node environment\n * @class\n * @param { Class } FetchClass\n * @returns { Class } Fetclass - class with extended methods\n */\nconst NodeStreamMixins = (FetchClass)=> class extends FetchClass{ \n    /**\n     * @param { String } url - url for content\n     * @returns { Readable } content\n     * @memberof fetch\n     */\n    async streamData(url){\n        const response = await fetch(url);\n        if (response.status >= 400) {\n            throw Error(\"Bad response from server\");\n        }\n        return response.body;\n    }\n};\nexport default NodeStreamMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 588,
    "kind": "class",
    "name": "NodeStreamMixins",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "importStyle": "NodeStreamMixins",
    "description": "mixins function for fetch on node environment",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{ Class } Fetclass - class with extended methods"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "FetchClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": "Fetclass - class with extended methods"
    },
    "interface": false,
    "extends": [
      "FetchClass"
    ]
  },
  {
    "__docId__": 589,
    "kind": "method",
    "name": "streamData",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins#streamData",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": "content"
    }
  },
  {
    "__docId__": 590,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "content": "import fetchStream from 'fetch-readablestream';\n\n/**\n * provide streamData method for web environment\n * @class\n * @param { Class } FetchClass\n * @returns { Class } FetchClass - class with extended methods\n */\nconst WebStreamMixins = (FetchClass)=> class extends FetchClass{ \n    /**\n     * Stream content given the url\n     * @param { String } url - url for content\n     * @returns { Readable } content\n     */\n    async streamData(url){\n        let response = await fetchStream(url);\n        if(response.status >= 400){\n            console.error(response.status);\n            reject(\"Bad response from server\");\n        }\n        const streamReader = response.body.getReader();\n        let reader = Stream.makeReadable();\n        const recusiveRead = ()=>{\n            return new Promise((resolve, reject)=>{\n                streamReader.read().then(({ value, done })=>{\n                    if (done) {\n                        reader.push(null);\n                        resolve(0);\n                    }\n                    else{\n                        reader.push(value);\n                        resolve(1);\n                    }\n                });\n            });\n        };\n        const ReadNext = (recusiveRead)=>{\n            recusiveRead().then(hasNext=>{\n                if(hasNext){\n                    ReadNext(recusiveRead);\n                }\n            });\n        };\n        ReadNext(recusiveRead);\n        return reader;\n    }\n};\n\nexport default WebStreamMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 591,
    "kind": "class",
    "name": "WebStreamMixins",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "importStyle": "WebStreamMixins",
    "description": "provide streamData method for web environment",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{ Class } FetchClass - class with extended methods"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "FetchClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": "FetchClass - class with extended methods"
    },
    "interface": false,
    "extends": [
      "FetchClass"
    ]
  },
  {
    "__docId__": 592,
    "kind": "method",
    "name": "streamData",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins#streamData",
    "access": "public",
    "description": "Stream content given the url",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": "content"
    }
  },
  {
    "__docId__": 593,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/index.js",
    "content": "export { default as platform } from './platform';\nexport { default as fetch } from './fetch';\nexport { default as stream } from './stream';\nexport { default as assert } from './assert';\n\nexport { default as pngUtils } from './pngUtils';\nexport { default as csvUtils } from './csvUtils';\nexport { default as jsonUtils } from './jsonUtils';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 594,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/jsonUtils.js",
    "content": "import { default as json5 } from 'json5';\n/**\n * This JSONUtils class provide wrapper for \n * [json5](https://www.npmjs.com/package/json5)\n * for fetch/write/read json\n * @todo: verify on web environment\n * @class JSONUtils\n */\nclass JSONUtils{\n    constructor(){\n        this.json = json5;\n        this.fs = require('fs');\n    }\n    /**\n     * return json5 instance\n     * @readonly\n     * @memberof JSONUtils\n     */\n    get CoreJSON(){\n        return this.json;\n    }\n    /**\n     * fetch json content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JSONUtils\n     */\n    async fetchJSON(url){\n        return await fetch.fetchJson(url);\n    }\n\n    /**\n     * write json content from given content\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JSONUtils\n     */\n    async writeJSON(data, filePath){\n        const fs = this.fs, json = this.json;\n        if(!fs.writeFile){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            fs.writeFile(filePath, json.stringify(data), (err)=>{\n                if(err){\n                    reject(err);\n                }\n                else{\n                    resolve(filePath);\n                }\n            });\n        });\n    }\n\n    /**\n     * fetch json content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JSONUtils\n     */\n    readJSON(filePath){\n        const fs = this.fs, json = this.json;\n        if(!fs.readFile){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            fs.readFile(filePath, (err, data)=>{\n                if(err){\n                    reject(err);\n                }\n                else{\n                    resolve(json.parse(data));\n                }\n            });\n        });\n    }\n}\nexport default new JSONUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/jsonUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 595,
    "kind": "class",
    "name": "JSONUtils",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/jsonUtils.js",
    "importStyle": null,
    "description": "This JSONUtils class provide wrapper for \n[json5](https://www.npmjs.com/package/json5)\nfor fetch/write/read json\n@todo: verify on web environment",
    "lineNumber": 9,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "JSONUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 596,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "json",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#json",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "get",
    "name": "CoreJSON",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#CoreJSON",
    "access": "public",
    "description": "return json5 instance",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "method",
    "name": "fetchJSON",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#fetchJSON",
    "access": "public",
    "description": "fetch json content from given url",
    "lineNumber": 29,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 601,
    "kind": "method",
    "name": "writeJSON",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#writeJSON",
    "access": "public",
    "description": "write json content from given content",
    "lineNumber": 40,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "readJSON",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils#readJSON",
    "access": "public",
    "description": "fetch json content from given url",
    "lineNumber": 64,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 603,
    "kind": "variable",
    "name": "jSONUtils",
    "memberof": "causality/packages/causality-utils/src/jsonUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/jsonUtils.js~jSONUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/jsonUtils.js",
    "importStyle": "jSONUtils",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/jsonUtils.js~JSONUtils"
      ]
    }
  },
  {
    "__docId__": 604,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/platform.js",
    "content": "import platform from 'platform';\nimport process from 'process';\n\nconst platformMapping = (name)=>{\n    if(name === 'Node.js'){\n        return 'node';\n    }\n    else{\n        return 'web';\n    }\n};\n/**\n * This Platform class wrap [platform](https://www.npmjs.com/package/platform) \n * for checking current platform either 'node' or 'web'. And advance mixins\n * @todo: extend more platform in future\n * @class Platform\n * @example\n * [EXAMPLE ../examples/platform.babel.js]\n */\nclass Platform{\n    /**\n     *Creates an instance of platform.\n     * @memberof Platform\n     */\n    constructor(){\n        this.platform = platform;\n        if(typeof process !== 'undefined' && process.pid) {\n            this.pid = process.pid;\n        }\n        else{\n            this.pid = null;\n        }\n    }\n    /**\n     * return current process pid on node or `null` on web\n     * @readonly\n     * @memberof Platform\n     */\n    get PID(){\n        return this.pid;\n    }\n\n    currentPlatform(){\n        return this.platform.parse();\n    }\n    /**\n     * Enhanced mixins for based class and list of mixins\n     * @param { Class } BaseClass - base class\n     * @param { List } mixins - list of mixins function\n     * @returns { Class } \n     * @memberof Platform\n     */\n    mixWith(BaseClass, mixins){\n        var mixinsList = [];\n        if(Array.isArray(mixins)){\n            mixinsList = mixins;\n        }\n        else{\n            const PfName = platformMapping(platform.parse()['name']);\n            mixinsList = mixins[PfName];\n        }\n        if(mixinsList === undefined){\n            throw Error(`${PfName} not found in mixins`);\n        }\n        return mixinsList.reduce((c, mixin) => {\n            if(typeof c === \"function\"){\n                return mixin(c);\n            }\n            else{\n                throw Error(`${JSON.stringify(c)} is not support mixins with ${BaseClass.name}`);\n            }\n        }, BaseClass);\n    }\n};\n\nexport default new Platform();\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/platform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 605,
    "kind": "function",
    "name": "platformMapping",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~platformMapping",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 606,
    "kind": "class",
    "name": "Platform",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": null,
    "description": "This Platform class wrap [platform](https://www.npmjs.com/package/platform) \nfor checking current platform either 'node' or 'web'. And advance mixins\n@todo: extend more platform in future",
    "examples": [
      "import {Platform} from 'causal-net.utils';\nconsole.log(Platform.currentPlatform());\nclass A{\n    constructor(){\n    }\n    sayA(){\n        console.log('say A');\n    }\n}\nconst AMixinsNode = (Base)=>class extends Base{\n    sayA(){\n        console.log('mixins on node');\n        super.sayA();\n    }\n    sayAExtend(){\n        console.log('say A with mixins on node');\n    }\n}\nconst AMixinsWeb = (Base)=>class extends Base{\n    sayAExtend(){\n        console.log('say A with mixins on web');\n    }\n}\nclass AExtends extends Platform.mixWith(A, \n    {'node': [AMixinsNode], 'web': [AMixinsWeb]}){\n        constructor(){\n            super();\n        }\n    }\nconst a = new AExtends();\na.sayA();\na.sayAExtend();"
    ],
    "lineNumber": 51,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Platform"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 607,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#constructor",
    "access": "public",
    "description": "Creates an instance of platform.",
    "lineNumber": 56
  },
  {
    "__docId__": 608,
    "kind": "member",
    "name": "platform",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#platform",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 609,
    "kind": "member",
    "name": "pid",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#pid",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 611,
    "kind": "get",
    "name": "PID",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#PID",
    "access": "public",
    "description": "return current process pid on node or `null` on web",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "currentPlatform",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#currentPlatform",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "mixWith",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#mixWith",
    "access": "public",
    "description": "Enhanced mixins for based class and list of mixins",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Class } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "BaseClass",
        "description": "base class"
      },
      {
        "nullable": null,
        "types": [
          " List "
        ],
        "spread": false,
        "optional": false,
        "name": "mixins",
        "description": "list of mixins function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 614,
    "kind": "variable",
    "name": "platform",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~platform",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": "platform",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/platform.js~Platform"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/pngUtils.js",
    "content": "import { default as  fetch } from './fetch';\nimport { PNG } from 'pngjs3';\n/**\n * This PNGUtils class use [pngjs3](https://www.npmjs.com/package/pngjs3)\n * for png parsing and transform png data from fetch.\n * @class pngUtils\n */\nclass PNGUtils{\n    constructor(){\n        this.png = PNG;\n        this.fs = require('fs');\n    }\n    /**\n     * get pngjs3 instance\n     * @readonly\n     * @memberof PNGUtils\n     */\n    get CorePNG(){\n        return this.png;\n    }\n    /**\n     * fetch and tranform png file to raw array from url\n     * @param { URL } url - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    async fetchPNG(url){\n        return new Promise(async (resolve, reject)=>{\n            let reader = await fetch.streamData(url);\n            let png = new PNG();\n            png.on('parsed', function(){\n                resolve(this.data);\n            });\n            png.on('error',(err)=>{\n                console.error(err);\n                reject(err);\n            });\n            reader.pipe(png);\n        });\n    }\n    /**\n     * write and tranform png file to raw array from filepath\n     * @param { URL } url - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    async writePNG(data, size, filePath){\n        const fs = this.fs;\n        if(!fs.createWriteStream){\n            throw Error('method is not supported');\n        }\n        return new Promise((resolve, reject)=>{\n            const [width, height, depth] = size;\n            let png = new PNG({ filterType: depth, width: width, height: height });\n            png.data = data;\n            png.pack().pipe(fs.createWriteStream(filePath))\n                    .on('close', ()=>{ resolve(filePath); })\n                    .on('error', ()=>{ reject(`error or read png data from file ${filePath}`); });\n        });\n    }\n    /**\n     * read and tranform png file to raw array from filepath\n     * @param { String } filePath - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    async readPNG(filePath){\n        const fs = this.fs;\n        if(!fs.createReadStream){\n            throw Error('method is not supported');\n        }\n        return new Promise((resolve, reject)=>{\n            fs.createReadStream(filePath)\n                .pipe(new PNG())\n                .on('parsed', function() {\n                    resolve(this.data);\n                })\n                .on('error', ()=>{\n                    reject(`error or read png data from file ${filePath}`);\n                });\n        });\n    }\n}\nexport default new PNGUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/pngUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 616,
    "kind": "class",
    "name": "PNGUtils",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/pngUtils.js",
    "importStyle": null,
    "description": "This PNGUtils class use [pngjs3](https://www.npmjs.com/package/pngjs3)\nfor png parsing and transform png data from fetch.",
    "lineNumber": 8,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "pngUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 617,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 618,
    "kind": "member",
    "name": "png",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#png",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 619,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 620,
    "kind": "get",
    "name": "CorePNG",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#CorePNG",
    "access": "public",
    "description": "get pngjs3 instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 621,
    "kind": "method",
    "name": "fetchPNG",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#fetchPNG",
    "access": "public",
    "description": "fetch and tranform png file to raw array from url",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "writePNG",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#writePNG",
    "access": "public",
    "description": "write and tranform png file to raw array from filepath",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 623,
    "kind": "method",
    "name": "readPNG",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~PNGUtils#readPNG",
    "access": "public",
    "description": "read and tranform png file to raw array from filepath",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 624,
    "kind": "variable",
    "name": "pNGUtils",
    "memberof": "causality/packages/causality-utils/src/pngUtils.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/pngUtils.js~pNGUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/pngUtils.js",
    "importStyle": "pNGUtils",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/pngUtils.js~PNGUtils"
      ]
    }
  },
  {
    "__docId__": 625,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/stream.js",
    "content": "import stream from 'readable-stream';\n/**\n * This Stream class provide wrapper functions for \n * [readable-stream](https://www.npmjs.com/package/readable-stream)\n * @class StreamUtils\n * @example\n * [EXAMPLE ../examples/stream.babel.js]\n */\nclass Stream{\n    constructor(){\n    \n        /** @private { readable-stream } */\n        this.stream = stream;\n    }\n    \n    /**\n     * create reable object from readFn.\n     * @param { Function } readFn - called function for new data\n     * @returns { Readable } \n     */\n    makeReadable(readFn=null){\n        let reader = new stream.Readable({objectMode: true});\n        const DefaultReader = ()=>{};\n        reader._read = readFn || DefaultReader;\n        return reader;\n    }\n    \n    /**\n     * create writeable object from writeFn.\n     * @param { Function } writeFn - called function for new data\n     * @returns { Writable }\n     */\n    makeWritable(writeFn){\n        let writer = new stream.Writable({objectMode: true});\n        writer._write = writeFn;\n        return writer;\n    }\n    \n    /**\n     * create duplex object from writeFn and optional readFn.\n     * @param { Function } writeFn - called function for new data\n     * @param { Function } [readFn=null] \n     * @returns { Duplex } \n     */\n    makeDuplex(writeFn, readFn=null){\n        let duplex = new stream.Duplex({objectMode: true});\n        duplex._write = writeFn;\n        const DefaultReader = ()=>{};\n        duplex._read = readFn || DefaultReader;\n        return duplex;\n    }\n\n    /**\n     * create transform object from transformFn\n     * @param { Function } transformFn - called function for new data\n     * @returns { Transform }\n     */\n    makeTransform(transformFn){\n        let transformer = new stream.Transform({objectMode: true});\n        transformer._transform = transformFn;\n        return transformer;\n    }\n    \n    /**\n     * create pipeline from array of [readable, ...tranforms, writable].\n     * This stream.makePipeline([readable, transform, writable]) \n     * equivalent to readable.pipe(transform).pipe(writable).\n     * @param { Array } streams - array of [readable, ...tranforms, writable]\n     * @param { Function } [onDataFn=null] - handle function for data event at readable \n     * @returns { Promise } promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\".\n     */\n    makePipeline(streams, onDataFn=null){\n        return new Promise((resolve, reject)=>{\n            let writer = streams.slice(-1)[0];\n            let reader = streams[0];\n            writer.on('finish',()=>{\n                resolve('Success');\n            });\n            writer.on('error',(err)=>{\n                reject(`Pipeline failed. ${err}`);\n            });\n            reader.on('data',(data)=>{\n                if(onDataFn){ onDataFn(data); }\n            });\n            return streams.reduce((p, s)=>p.pipe(s));\n        });\n    }\n};\n\nexport default new Stream();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/stream.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 626,
    "kind": "class",
    "name": "Stream",
    "memberof": "causality/packages/causality-utils/src/stream.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/stream.js",
    "importStyle": null,
    "description": "This Stream class provide wrapper functions for \n[readable-stream](https://www.npmjs.com/package/readable-stream)",
    "examples": [
      "import { stream } from 'causal-net.utils';\n\nlet reader = stream.makeReadable();\n    \nconst TranformFn = (chunkData, chunkEncoding, afterTransformFn) =>{\n    chunkData.x = (chunkData.x+1.5);\n    let event = null;\n    afterTransformFn(event, chunkData);\n};\nlet transformer = stream.makeTransform(TranformFn);\n    \nconst WriteFn = (chunkData, chunkEncoding, callback) =>{\n    console.log({chunkData});\n    callback();\n};\nlet writer = stream.makeWritable(WriteFn);\n    \nreader.pipe(transformer).pipe(writer);\n//write random int for every 100 ms    \nsetInterval(() => {\n    reader.push({ x: Math.random() });\n}, 100);"
    ],
    "lineNumber": 31,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StreamUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 627,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "stream",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#stream",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 629,
    "kind": "method",
    "name": "makeReadable",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeReadable",
    "access": "public",
    "description": "create reable object from readFn.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "readFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "makeWritable",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeWritable",
    "access": "public",
    "description": "create writeable object from writeFn.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Writable }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "writeFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Writable "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 631,
    "kind": "method",
    "name": "makeDuplex",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeDuplex",
    "access": "public",
    "description": "create duplex object from writeFn and optional readFn.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Duplex } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "writeFn",
        "description": "called function for new data"
      },
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "readFn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Duplex "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 632,
    "kind": "method",
    "name": "makeTransform",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeTransform",
    "access": "public",
    "description": "create transform object from transformFn",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Transform }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "transformFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Transform "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 633,
    "kind": "method",
    "name": "makePipeline",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makePipeline",
    "access": "public",
    "description": "create pipeline from array of [readable, ...tranforms, writable].\nThis stream.makePipeline([readable, transform, writable]) \nequivalent to readable.pipe(transform).pipe(writable).",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\"."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "streams",
        "description": "array of [readable, ...tranforms, writable]"
      },
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onDataFn",
        "description": "handle function for data event at readable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\"."
    }
  },
  {
    "__docId__": 634,
    "kind": "variable",
    "name": "stream",
    "memberof": "causality/packages/causality-utils/src/stream.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/stream.js~stream",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/stream.js",
    "importStyle": "stream",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/stream.js~Stream"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "file",
    "name": "causality/src/causalNet.core.js",
    "content": "import * as Core from \"causal-net.core\";\nexport default Core;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.core.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 636,
    "kind": "file",
    "name": "causality/src/causalNet.datasets.js",
    "content": "import * as Datasets from 'causal-net.datasets';\nexport default Datasets;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.datasets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 637,
    "kind": "file",
    "name": "causality/src/causalNet.layer.js",
    "content": "import * as Layer from \"causal-net.layer\";\nexport default Layer;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 638,
    "kind": "file",
    "name": "causality/src/causalNet.log.js",
    "content": "import * as Log from \"causal-net.log\";\nexport default Log;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.log.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 639,
    "kind": "file",
    "name": "causality/src/causalNet.memcache.js",
    "content": "import * as MemCache from 'causal-net.memcache';\nexport default MemCache;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.memcache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 640,
    "kind": "file",
    "name": "causality/src/causalNet.models.js",
    "content": "import * as Models from 'causal-net.models';\nexport default Models;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.models.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "causality/src/causalNet.optimizers.js",
    "content": "import * as Optimizers from 'causal-net.optimizers';\nexport default Optimizers;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.optimizers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "file",
    "name": "causality/src/causalNet.preprocessing.js",
    "content": "import * as Preprocessing from 'causal-net.preprocessing';\nexport default Preprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.preprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 643,
    "kind": "file",
    "name": "causality/src/causalNet.representation.js",
    "content": "import * as Representation from 'causal-net.representation';\nexport default Representation;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 644,
    "kind": "file",
    "name": "causality/src/causalNet.storage.js",
    "content": "import * as Storage from 'causal-net.storage';\nexport default Storage;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 645,
    "kind": "file",
    "name": "causality/src/causalNet.utils.js",
    "content": "import * as Utils from 'causal-net.utils';\nexport default Utils;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 646,
    "kind": "file",
    "name": "causality/src/causality.js",
    "content": "import { Tensor } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { LoggerMixins, termLogger } from 'causal-net.log';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { LayerMixins, causalNetLayer } from 'causal-net.layer';\nimport { SupervisedModelsMixins, causalNetModels } from 'causal-net.models';\nimport { TrainerMixins } from 'causal-net.optimizers';\n\nimport {  PipelineBaseMixins,\n          PipelineRunnerMixins,\n          PipelinePredictingMixins,\n          PipelineTrainingMixins,\n          PipelineEvaluatingMixins,\n          PipelineEnsemblePredictingMixins,\n          PipelineEnsembleTrainingMixins,\n          PipelineEnsembleEvaluatingMixins,\n          PipelineParametersMixins,\n          PipelineHyperParametersMixins,\n          Function as PipelineFunction } from './pipeline/index';\n\nexport default class CausalNet extends Platform.mixWith(Tensor, [\n        StorageMixins,\n        LoggerMixins,\n        PipelineBaseMixins,\n        PipelineHyperParametersMixins,\n        PipelineParametersMixins,\n        LayerMixins,\n        SupervisedModelsMixins,\n        TrainerMixins,\n        PipelineRunnerMixins,\n        PipelinePredictingMixins,\n        PipelineTrainingMixins,\n        PipelineEvaluatingMixins,\n        PipelineEnsemblePredictingMixins,\n        PipelineEnsembleTrainingMixins,\n        PipelineEnsembleEvaluatingMixins\n    ]){\n    constructor(netConfig, parameters={}){\n        super();\n        this.F = new Function();\n        this.R = this.F.CoreFunction;\n        this.setBasePipelineByConfig(netConfig);\n        this.setHyperParametersByConfig(netConfig);\n        this.setModelByConfig(netConfig);\n        this.Parameters = parameters;\n        this.setTrainerByConfig(netConfig);\n        this.Storage = indexDBStorage;\n        this.saveModelDir = '/saveModel/';\n        this.Logger = termLogger;\n        this.Layer = causalNetLayer;\n        this.Models = causalNetModels;\n    }  \n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causality.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 647,
    "kind": "class",
    "name": "CausalNet",
    "memberof": "causality/src/causality.js",
    "static": true,
    "longname": "causality/src/causality.js~CausalNet",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/causality.js",
    "importStyle": "CausalNet",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 648,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/causality.js~CausalNet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 649,
    "kind": "member",
    "name": "F",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#F",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "R",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#R",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 651,
    "kind": "member",
    "name": "Parameters",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 652,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 653,
    "kind": "member",
    "name": "saveModelDir",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#saveModelDir",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 654,
    "kind": "member",
    "name": "Logger",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 655,
    "kind": "member",
    "name": "Layer",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Layer",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 656,
    "kind": "member",
    "name": "Models",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Models",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 657,
    "kind": "file",
    "name": "causality/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nimport {Platform} from 'causal-net.utils';\nimport {default as PipelineFunctionMixins} from './pipelineFunction.mixins';\n\nexport default class Function extends Platform.mixWith(BaseFunction,[PipelineFunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 658,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/src/function.js",
    "static": true,
    "longname": "causality/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[PipelineFunctionMixins])"
  },
  {
    "__docId__": 659,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 660,
    "kind": "file",
    "name": "causality/src/index.js",
    "content": "export { default as Utils } from './causalNet.utils';\nexport { default as Core } from './causalNet.core';\nexport { default as Log } from './causalNet.log';\nexport { default as Storage } from './causalNet.storage';\nexport { default as Memcache } from './causalNet.memcache';\nexport { default as Preprocessing } from './causalNet.preprocessing';\nexport { default as Representation } from './causalNet.representation';\nexport { default as Datasets } from './causalNet.datasets';\nexport { default as Layer } from './causalNet.layer';\nexport { default as Models } from './causalNet.models';\nexport { default as Optimizers } from './causalNet.optimizers';\nexport { default as CausalNet } from './causality';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 661,
    "kind": "file",
    "name": "causality/src/pipeline/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nimport {Platform} from 'causal-net.utils';\nimport {default as PipelineFunctionMixins} from './pipelineFunction.mixins';\n\nexport default class Function extends Platform.mixWith(BaseFunction,[PipelineFunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 662,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/src/pipeline/function.js",
    "static": true,
    "longname": "causality/src/pipeline/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[PipelineFunctionMixins])"
  },
  {
    "__docId__": 663,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/pipeline/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 664,
    "kind": "file",
    "name": "causality/src/pipeline/index.js",
    "content": "export { default as PipelinePredictingMixins } from './pipelinePredicting.mixins';\nexport { default as PipelineTrainingMixins } from './pipelineTraining.mixins';\nexport { default as PipelineEvaluatingMixins } from './pipelineEvaluating.mixins';\nexport { default as PipelineEnsemblePredictingMixins } from './pipelineEnsemblePredicting.mixins';\nexport { default as PipelineEnsembleEvaluatingMixins } from './pipelineEnsembleEvaluating.mixins';\nexport { default as PipelineEnsembleTrainingMixins } from './pipelineEnsembleTraining.mixins';\nexport { default as PipelineParametersMixins } from './pipelineParameters.mixins';\nexport { default as PipelineHyperParametersMixins } from './pipelineHyperParameters.mixins';\nexport { default as PipelineBaseMixins } from './pipelineBase.mixins';\nexport { default as PipelineRunnerMixins } from './pipelineRunner.mixins';\nexport { default as Function } from './function';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 665,
    "kind": "file",
    "name": "causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "content": "const PipelineEmbeddingMixins = (PipelineClass)=> class extends PipelineClass{\n    setEmbeddingByConfig(){\n    }\n\n    set Embedding(memory){\n        if(!memory){\n            throw Error(`expect memory, got ${memory}`);\n        }\n        this.memory = memory;\n    }\n\n    get Embedding(){\n        if(!this.memory){\n            throw Error(`memory is not set`);\n        }\n        return this.memory;\n    }\n};\nexport default PipelineEmbeddingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 666,
    "kind": "class",
    "name": "PipelineEmbeddingMixins",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "importStyle": "PipelineEmbeddingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "setEmbeddingByConfig",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#setEmbeddingByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 668,
    "kind": "set",
    "name": "Embedding",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#Embedding",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 669,
    "kind": "member",
    "name": "memory",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#memory",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 670,
    "kind": "get",
    "name": "Embedding",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#Embedding",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 671,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineBase.mixins.js",
    "content": "const PipelineBaseMixins = (PipelineClass)=> class extends PipelineClass{\n    set BasePipeline(basePipeline){\n        this.basePipeline = basePipeline;\n    }\n    get BasePipeline(){\n        this.basePipeline;\n    }\n    setBasePipelineByConfig(netConfig){\n        if(!netConfig.Pipeline){\n            throw Error('Pipeline must be define inside netConfig');\n        }\n        this.basePipeline = netConfig.Pipeline;\n    }\n};\nexport default PipelineBaseMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineBase.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 672,
    "kind": "class",
    "name": "PipelineBaseMixins",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineBase.mixins.js",
    "importStyle": "PipelineBaseMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 673,
    "kind": "set",
    "name": "BasePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#BasePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 674,
    "kind": "member",
    "name": "basePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#basePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 675,
    "kind": "get",
    "name": "BasePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#BasePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": null
  },
  {
    "__docId__": 676,
    "kind": "method",
    "name": "setBasePipelineByConfig",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#setBasePipelineByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 678,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "content": "const PipelineEnsembleEvaluatingMixins = (PipelineClass)=> class extends PipelineClass{ \n    async ensembleAccuracyTest(TestSampleGeneratorFn, modelList){\n        const T = this.T;\n        const testSampleGenerator = TestSampleGeneratorFn();\n        let testSize = 0, pass = 0;\n        for await (let {idx, batchSize, data} of testSampleGenerator){\n            this.SampleSize = batchSize;\n            let [batchSamples, batchLabels] = data;\n            let sampleTensor = T.tensor(batchSamples).reshape([batchSize, -1]).asType('float32');\n            let labelTensor  = T.tensor(batchLabels).reshape([batchSize, -1]);\n            let oneHotPredict = await this.ensembleOneHotPredict(modelList, sampleTensor, batchSize);\n            let correctPredicts = oneHotPredict.mul(labelTensor);\n            pass += correctPredicts.sum().dataSync()[0];\n            testSize += batchSize;\n        }\n        let accuracy = pass / testSize;\n        return {accuracy, pass};             \n    }\n};\nexport default PipelineEnsembleEvaluatingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 679,
    "kind": "class",
    "name": "PipelineEnsembleEvaluatingMixins",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "importStyle": "PipelineEnsembleEvaluatingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 680,
    "kind": "method",
    "name": "ensembleAccuracyTest",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins#ensembleAccuracyTest",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "TestSampleGeneratorFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"accuracy\": *, \"pass\": *}"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "member",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 682,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "content": "const PipelineEnsemblePredictMixins = (PipelineClass)=> class extends PipelineClass{ \n    async ensembleProbFit(modelList, sampleTensor){\n        const T = this.T;\n        let probs = [];\n        for(let model of modelList){\n            await this.loadParams(model);\n            let pipeOutput = this.runPipeline(sampleTensor);\n            let logProb = this.Fit(pipeOutput);\n            probs.push(T.exp(logProb));\n        }\n        let meanProb = T.concat(probs, 0);\n        if(probs.length > 1){\n            meanProb = meanProb.mean(0, true);\n        }\n        return meanProb;\n    }\n    async ensemblePredict(modelList, samples, numSamples=1){\n        const T = this.T;\n        console.log({samples});\n        let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n        let meanProb = this.ensembleProbFit(modelList, sampleTensor);\n        let predict = meanProb.argMax(1);\n        return predict;\n    }\n\n    async ensembleOneHotPredict(modelList, sampleTensor){\n        let meanProb = await this.ensembleProbFit(modelList, sampleTensor);\n        let predict = meanProb.argMax(1);\n        let oneHotPredict = this.T.oneHot(predict, this.NumClasses);\n        return oneHotPredict;\n    }\n};\nexport default PipelineEnsemblePredictMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 683,
    "kind": "class",
    "name": "PipelineEnsemblePredictMixins",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "importStyle": "PipelineEnsemblePredictMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 684,
    "kind": "method",
    "name": "ensembleProbFit",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensembleProbFit",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 685,
    "kind": "method",
    "name": "ensemblePredict",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensemblePredict",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "method",
    "name": "ensembleOneHotPredict",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensembleOneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "content": "const PipelineEnsembleTrainingMixins = (PipelineClass)=> class extends PipelineClass{ \n};\nexport default PipelineEnsembleTrainingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 688,
    "kind": "class",
    "name": "PipelineEnsembleTrainingMixins",
    "memberof": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js~PipelineEnsembleTrainingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "importStyle": "PipelineEnsembleTrainingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 689,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEvaluating.mixins.js",
    "content": "const PipelineEvaluatingMixins= (BasePipeline)=> class extends BasePipeline{\n    async accuracyTest(TestSampleGeneratorFn){\n        const T = this.T, F = this.F, R = this.R;\n        const testSampleGenerator = TestSampleGeneratorFn();\n        let testSize = 0, pass = 0;\n        for await (let {idx, batchSize, data} of testSampleGenerator){\n            let [batchSamples, batchLabels] = data;\n            let sampleTensor = T.tensor(batchSamples).reshape([batchSize, -1]).asType('float32'); \n            let labelTensor = T.tensor(batchLabels).reshape([batchSize, -1]);\n            let pipelineOutTensor = this.runPipeline(sampleTensor);\n            let onehotPredict = this.OneHotPredict(pipelineOutTensor);   \n            let correctPredicts = onehotPredict.mul(labelTensor);\n            pass += correctPredicts.sum().dataSync()[0];\n            testSize += batchSize;\n        }\n        let accuracy = pass / testSize;\n        return {accuracy, pass};        \n    }\n};\n\nexport default PipelineEvaluatingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEvaluating.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 690,
    "kind": "class",
    "name": "PipelineEvaluatingMixins",
    "memberof": "causality/src/pipeline/pipelineEvaluating.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEvaluating.mixins.js",
    "importStyle": "PipelineEvaluatingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipeline"
    ]
  },
  {
    "__docId__": 691,
    "kind": "method",
    "name": "accuracyTest",
    "memberof": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins#accuracyTest",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "TestSampleGeneratorFn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"accuracy\": *, \"pass\": *}"
      ]
    }
  },
  {
    "__docId__": 692,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineFunction.mixins.js",
    "content": "const PipelineFunctionMixins = (FunctionClass)=> class extends FunctionClass{ \n    range(len){\n        return this.R.range(0, len);\n    }\n\n    isParameter(val){\n        const R = this.R;\n        return R.is(Array)(val) && R.all(R.is(Number), val);\n    }\n\n    getPipeline(netConfig){\n        //TODO: make assertor\n        return this.R.prop('Pipeline', netConfig);\n    }\n    \n    getHyperParameter(netConfig){\n        //TODO: make assertor\n        return this.R.prop('HyperParameters', netConfig);\n    }\n    \n    getTraverse(){\n        return R.curry(function(keys, item){\n            R.pipe.apply(null, R.map(R.prop, keys))(item);\n        }); \n    }\n    \n    isTensor(object){\n        return object.size !== undefined && object.shape !== undefined && object.dtype !== undefined;\n    }\n};\n\nexport default PipelineFunctionMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineFunction.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 693,
    "kind": "class",
    "name": "PipelineFunctionMixins",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineFunction.mixins.js",
    "importStyle": "PipelineFunctionMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "FunctionClass"
    ]
  },
  {
    "__docId__": 694,
    "kind": "method",
    "name": "range",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#range",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "len",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 695,
    "kind": "method",
    "name": "isParameter",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#isParameter",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "getPipeline",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getPipeline",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 697,
    "kind": "method",
    "name": "getHyperParameter",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getHyperParameter",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 698,
    "kind": "method",
    "name": "getTraverse",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getTraverse",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 699,
    "kind": "method",
    "name": "isTensor",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#isTensor",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 700,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "content": "const PipelineHyperParametersMixins = (PipelineClass)=> class extends PipelineClass{\n    setHyperParametersByConfig(netConfig){\n        this.hyperParameters = this.F.getHyperParameter(netConfig);\n        this.hyperParameterAcquisition();\n    }\n    hyperParameterAcquisition(){\n        console.log('hyperParameterAcquisition');\n        const R = this.R; \n        let hyperParameters = this.hyperParameters;\n        if(!hyperParameters){\n            throw Error(`${hyperParameters} not hyperParameters`);\n        }\n        function replaceIfMatch(value, hyperParameters){\n            if(R.is(String, value) && R.startsWith('$', value)){\n                const key = R.slice(1, Infinity, value);\n                let param = R.prop(key, hyperParameters);\n                if(!param){\n                    throw Error(`${key} not found in ${Object.keys(hyperParameters)}`);\n                }\n                return param;\n            }\n            return value;\n        }\n        const doReplaceIfMatch = R.curry(replaceIfMatch)(R.__, hyperParameters);\n        function replaceHyperParameter(pipelineItem){\n            if(R.is(Array, pipelineItem)){\n                return pipelineItem.map(item=>replaceHyperParameter(item));\n            }\n            else if(R.is(Object, pipelineItem)){\n                if(typeof(pipelineItem) === 'function'){//omg, js type detect!!!\n                    return pipelineItem;\n                }\n                else{\n                    let ret = {};\n                    for(let key of Object.keys(pipelineItem)){\n                        ret[key] = replaceHyperParameter(pipelineItem[key]);\n                    }\n                    return ret;\n                }\n            }\n            else{\n                return doReplaceIfMatch(pipelineItem);\n            }\n        }\n        this.pipeline = replaceHyperParameter(this.basePipeline);\n        console.log({basePipeline:this.basePipeline, pipeline: this.pipeline});\n    }\n\n    set HyperParameters(hyperParameters){\n        this.hyperParameters = hyperParameters;\n    }\n\n    get HyperParameters(){\n        return this.hyperParameters;\n    }\n\n    set SampleSize(numSamples){\n        if(this.HyperParameters.SampleSize !== numSamples){\n            this.HyperParameters.SampleSize = numSamples;\n            this.hyperParameterAcquisition();\n        }\n    }\n\n    get SampleSize(){\n        return this.HyperParameters.SampleSize;\n    }\n};\nexport default PipelineHyperParametersMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 701,
    "kind": "class",
    "name": "PipelineHyperParametersMixins",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "importStyle": "PipelineHyperParametersMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 702,
    "kind": "method",
    "name": "setHyperParametersByConfig",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#setHyperParametersByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 703,
    "kind": "member",
    "name": "hyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#hyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 704,
    "kind": "method",
    "name": "hyperParameterAcquisition",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#hyperParameterAcquisition",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 705,
    "kind": "member",
    "name": "pipeline",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#pipeline",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 706,
    "kind": "set",
    "name": "HyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#HyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 708,
    "kind": "get",
    "name": "HyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#HyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 709,
    "kind": "set",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 710,
    "kind": "get",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 711,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineParameters.mixins.js",
    "content": "const PipelineParametersMixins = (PipelineClass)=> class extends PipelineClass{ \n    get Parameters(){\n        if(!this.parameters){\n            throw Error('parameter must be set');\n        }\n        return (async ()=>{\n            const Fn = async (param)=>(Array.from(await param.data()));\n            let params = await this.extractParamFromTensorDict(this.parameters, Fn);\n            return params;\n        })();\n    }\n    set Parameters(params){\n        if(!this.pipeline){\n            throw Error('pipeline is not defined and must be set from basePipeline');\n        }\n        this.parameters = this.setOrInitParams(this.pipeline, params);\n    }\n    async extractParamFromTensorDict(params, fn){\n        const F = this.F, R = this.R;\n        const Traveller = async (params, fn)=>{\n            if(F.isTensor(params)){\n                return await fn(params);\n            }\n            else{\n                let kVals = R.toPairs(params);\n                let res = {};\n                for(let [k, val] of kVals){\n                    res[k] = await Traveller(val, fn); \n                }\n                return res;\n            }\n        };\n        return Traveller(params, fn);\n    };\n    async parametersSummary(){\n        if(!this.parameters){\n            throw Error('parameter must be set');\n        }\n        const Fn = async (param)=>Array.from(await param.mean().data());\n        return await this.extractParamFromTensorDict(this.parameters, Fn);\n    }\n    setOrInitParams(pipeline, netParams){\n        const R = this.R, T = this.T, F = this.F;\n        let pipeParams = R.fromPairs(R.filter(([k,v])=>v !== undefined,\n                                R.map(R.__, pipeline)(p=>[p.Name, p.Parameters])));\n        const SetOrInit = (mainValue, subVal)=>{\n            let keys = R.keys(mainValue);\n            let keyMainValSubVal = R.map((k)=> [k, R.prop(k, mainValue), R.propOr(null, k, subVal)], keys);\n            const ValMapping = ([key, mainVal, subVal])=>{\n                if(F.isParameter(mainVal)){\n                    const paramShape = mainVal;\n                    if(R.isNil(subVal)){\n                        return [key, T.variable(T.randomNormal(paramShape))];\n                    }\n                    else{\n                        return [key, T.variable(T.tensor(subVal).reshape(paramShape))];\n                    }\n                }\n                else{\n                    return [key, SetOrInit(mainVal, subVal)];\n                }\n            };\n            return R.fromPairs(R.map(ValMapping, keyMainValSubVal));\n        };\n        return SetOrInit(pipeParams, netParams);\n    }\n\n    async getSavedParams(){\n        let fileList = await this.storage.getFileList(this.saveModelDir);\n        return fileList.map(fileName=>fileName.replace(this.saveModelDir,''));\n    }\n\n    async saveParams(fileName){\n        const params = await this.Parameters;\n        await this.storage.writeFile(this.saveModelDir + fileName, JSON.stringify(params));\n        return params;\n    }\n    async loadParams(fileName){\n        let strParams = await this.storage.readFile(this.saveModelDir+fileName);\n        let params = JSON.parse(strParams);\n        this.Parameters = params;\n        return await this.Parameters;\n    }\n};\n\nexport default PipelineParametersMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineParameters.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 712,
    "kind": "class",
    "name": "PipelineParametersMixins",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineParameters.mixins.js",
    "importStyle": "PipelineParametersMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 713,
    "kind": "get",
    "name": "Parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 714,
    "kind": "set",
    "name": "Parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 715,
    "kind": "member",
    "name": "parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 716,
    "kind": "method",
    "name": "extractParamFromTensorDict",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#extractParamFromTensorDict",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 717,
    "kind": "method",
    "name": "parametersSummary",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#parametersSummary",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "setOrInitParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#setOrInitParams",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "pipeline",
        "types": [
          "*"
        ]
      },
      {
        "name": "netParams",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 719,
    "kind": "method",
    "name": "getSavedParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#getSavedParams",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 720,
    "kind": "method",
    "name": "saveParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#saveParams",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 721,
    "kind": "method",
    "name": "loadParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#loadParams",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 723,
    "kind": "file",
    "name": "causality/src/pipeline/pipelinePredicting.mixins.js",
    "content": "const PipelinePredictMixins = (PipelineClass)=> class extends PipelineClass{\n\n    predict(samples, numSamples=1){\n        const Predict = this.Predict;\n        const T = this.T;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n            let pipeOutput = this.runPipeline(sampleTensor);\n            return Predict(pipeOutput);\n        });\n    }\n\n    onehotPredict(samples, numSamples=1){\n        const OneHotPredict = this.OnehotPredict;\n        const T = this.T;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n            let pipeOutput = this.runPipeline(sampleTensor);\n            return OneHotPredict(pipeOutput);\n        });\n    }\n};\nexport default PipelinePredictMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelinePredicting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 724,
    "kind": "class",
    "name": "PipelinePredictMixins",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelinePredicting.mixins.js",
    "importStyle": "PipelinePredictMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 725,
    "kind": "method",
    "name": "predict",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins#predict",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 726,
    "kind": "method",
    "name": "onehotPredict",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins#onehotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 727,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineRunner.mixins.js",
    "content": "const PipelineRunnerMixins = (PipelineClass)=> class extends PipelineClass{\n    runOpFlow(value, flow, parameters){\n        const R = this.R;\n        const OpsRunner = R.addIndex(R.reduce)(R.__,{result: value, trace: {}}, flow);\n        var {result, trace} = OpsRunner(({result, trace}, node, idx)=>{\n            if(node.Parameter){\n                let params = parameters[node.Parameter];\n                result = result[node.Op](params, ...node.Args);\n            }\n            else{\n                result = result[node.Op](...node.Args);    \n            };\n            trace[idx] = result.shape;\n            return {result, trace};\n        });\n        return {result, trace};\n    }\n\n    runOpLayer(value, net, parameters){\n        let result = net(value, parameters);\n        let trace = {};\n        return {result, trace};\n    }\n    runLayer(value, layerConfigure, layerParameters){\n        const {Name, Type, Flow, Net} = layerConfigure;\n        this.logger.debug({Name, Type, Flow, Net});\n        if(Type === 'Tensor'){\n            let {result, trace} = this.runOpFlow(value, Flow, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else if(Type === 'Layer'){\n            let {result, trace} = this.runOpLayer(value, Net, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else{\n            throw Error('type must be either Layer or Tensor');\n        }\n    }\n    \n    tracing(traces, name, trace){\n        if(traces){\n            traces.push({[name]: trace});\n        }\n    }\n    runPipeline(samples, traces=[]){\n        let pipeValue = {PipeInput: samples}, lastLayer = 'PipeInput';\n        for(let layer of this.pipeline){\n            let layerOutput = this.runLayer(pipeValue[lastLayer], layer, this.parameters[layer.Name]);\n            pipeValue[layer.Name] = layerOutput[layer.Name];\n            lastLayer = layer.Name;\n            this.tracing(traces, layer.Name, layerOutput.trace);\n        }\n        this.logger.debug({traces});\n        return pipeValue[lastLayer];\n    }\n};\n\nexport default PipelineRunnerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineRunner.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 728,
    "kind": "class",
    "name": "PipelineRunnerMixins",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineRunner.mixins.js",
    "importStyle": "PipelineRunnerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 729,
    "kind": "method",
    "name": "runOpFlow",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runOpFlow",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "flow",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 730,
    "kind": "method",
    "name": "runOpLayer",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runOpLayer",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "net",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 731,
    "kind": "method",
    "name": "runLayer",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runLayer",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerConfigure",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerParameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Name\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 732,
    "kind": "method",
    "name": "tracing",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#tracing",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "traces",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "trace",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 733,
    "kind": "method",
    "name": "runPipeline",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runPipeline",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "traces",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 734,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineTraining.mixins.js",
    "content": "const PipelineTrainingMixins = (PipelineClass)=> class extends PipelineClass{\n    trainProgress(epochIdx, losses, numEpochs){\n        if(!this.startTimeStamp){\n            this.startTimeStamp = new Date();\n        }\n        if(this.logger.progress){\n            this.logger.progress({epochIdx, losses,  \n                         'start at': this.startTimeStamp.toISOString(), \n                         'elapse in second': (new Date() - this.startTimeStamp)/1000});\n        }\n        if(epochIdx === numEpochs - 1){//done\n            this.startTimeStamp = null;\n        }\n    }\n    \n    loss(data, numSamples){\n        const Loss = this.Loss;\n        this.SampleSize = numSamples;\n        const T = this.T;\n        let [batchSamples, batchLabels] = data;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(batchSamples).reshape([numSamples, -1]).asType('float32'); \n            let labelTensor = T.tensor(batchLabels).reshape([numSamples, -1]);\n            let pipelineOutTensor = this.runPipeline(sampleTensor);\n            let loss = Loss(pipelineOutTensor, labelTensor);\n            return loss;\n        });\n    };\n    \n    async train(SampleGeneratorFn, numEpochs = 2){\n        const F = this.F, R = this.R;\n        const Trainer = this.Trainer;\n        let losses = [];\n        for(let epochIdx of F.range(numEpochs)){\n            const sampleGenerator = SampleGeneratorFn(epochIdx);\n            let iterLosses = [];\n            for await (let {idx, batchSize, data} of sampleGenerator){\n                Trainer.fit(()=>{\n                    let loss = this.loss(data, batchSize);\n                    iterLosses.push(loss.dataSync());\n                    return loss;\n                });\n            }\n            losses.push(R.mean(iterLosses));\n            iterLosses = [];\n            this.trainProgress(epochIdx, losses, numEpochs);\n        }\n        return new Promise((resolve, reject)=>{\n            resolve({losses});\n        });\n    };\n};\nexport default PipelineTrainingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineTraining.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 735,
    "kind": "class",
    "name": "PipelineTrainingMixins",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineTraining.mixins.js",
    "importStyle": "PipelineTrainingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "trainProgress",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#trainProgress",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "epochIdx",
        "types": [
          "*"
        ]
      },
      {
        "name": "losses",
        "types": [
          "*"
        ]
      },
      {
        "name": "numEpochs",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 737,
    "kind": "member",
    "name": "startTimeStamp",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#startTimeStamp",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 739,
    "kind": "method",
    "name": "loss",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#loss",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 740,
    "kind": "member",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 741,
    "kind": "method",
    "name": "train",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#train",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "SampleGeneratorFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "numEpochs",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 2,
        "defaultValue": "2"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "![Introduction](./causal-doc/index.md)\n\nFull doc link: (https://red-gold.github.io/causality-docs/)\n",
    "longname": "/home/huynhnguyen/github/causality/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "***This project is immature and under active development. Contents will be updated rapidly***\n\n# Portable deep learning models with Causality\n\n![Photo on Unsplash](./manual/asset/coffee-main.jpg)\n\nCausality is a free and open source javascript library that allows building isomorphic machine learning pipeline. Roundly speaking, your trained model can be deployed on client's devices via web environment without re-piping your code. \n\nOn top of Tensorflowjs, our set of reusable components handle data preprocessing, infer data representation, visualizing, training and evaluation on both node and web environment with the same APIs. Thus reduce engineering efforts for making production AI services. By using the same language, developers can simplify development setup, mitigate the communication cost, better coding pattern and share more ideas. \n\nMoreover, with AI models are loaded as client' devices for performing inference, personal or sensitive data is not exposed to the service providers. We also invest in ensemble learning and the recent federated learning approach for distributed training while preserving data privacy without requiring any global data storage. \n\nResearchers can utilize built-in datasets and the prebuilt pipelines to prototype new model ideas and make research results easy to review, present and reproduce. We hope developers and researchers can find this project a meaningful work to contribute and collaborate to push forward a new class of affordable, transparent deep learning services. \n\nThe commercial version of this library, Moderator, is our effort for moderating social network contents heading to protecting community culture. The AI moderator, which is built up by community voted training data, transparently prevent bad contents from propagating, and re-ranking relevant contents prior to client views without revealing any personal preference. The Causality, Moderator alongside with React Social Network are the ideas from our startup, Red Gold, for building a smarter social network with community culture respect and transparent AI moderator.",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/index.md",
    "name": "./causal-doc/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/asset",
    "name": "./causal-doc/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/overview/introduction.md",
    "name": "./causal-doc/overview/introduction.md",
    "content": "![Photo by Iker Urteaga on Unsplash](./asset/iker-urteaga-246955-unsplash.jpg)\n# Introduction\nCausality intensively uses [mixin](https://en.wikipedia.org/wiki/Mixin) for composing class. Mixins allow constructing elastic class that imports just enough methods for target usages. We try to mitigate redundant methods and reduce bundle size. The main mixins for building a pipeline class can be found at the `/src/` folder which pre-built `CausalNet` pipeline ready to use (check tutorials session). Advance mixins \nare seperated into different sub-packages under the `/packages/` folder. Each sub-package exports at most one mixin for building pipeline, For example, causality-optimizer provide trainerMixins for optimizing parameters.\n\nKey design principles:\n- Make everything isomorphic.\n- Make everything easy to extend.\n- Make everything open to view.\n- Make data processing as functional blocks. \n\nWe not use type script because we try to mitigate early technical debt from unpaid [type tax](https://medium.com/javascript-scene/the-typescript-tax-132ff4cb175b). \n\n\n\n## Pipeline\nCausality attempts to standardize the pipeline into those steps:\n- Sampling from raw data.\n- Preprocessing data.\n- Infering representation of data.\n- Training/ensemble training.\n- Evaluation/ensemble evaluation.\n## Project module view\n![overview](./asset/block_diagram.png)\n\nHere are some machine learning concepts:\n- Parameters: TBU\n- Hyper parameters: TBU\n- Layers: TBU\n- Optimizers: TBU\n- Sampling: TBU\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/overview/packages.md",
    "name": "./causal-doc/overview/packages.md",
    "content": "# Monorepo\n\nCausality provides sub-package plugins for build up pipeline as follows:\n\n## causal-net.core \nThis package provides:\n\n### causalNetCore\n- Allow acess to core function and core tensor instance.\n\n```javascript\nimport { causalNetCore } from 'causal-net.core';\nconsole.log(causalNetCore.CoreTensor);\nconsole.log(causalNetCore.CoreFunctor);\n\n```\n\n[Run code](./asset/examples/core.babel.js)\n\n### Tensor\n- Primitive class for composing Tensor based class. This class is based on [tensorflowjs](https://js.tensorflow.org/)\n\n### Function\n- Primitive class for composing Function based class. This class is based on [Ramda](https://ramdajs.com/)\n\n### Store\n- Primivtive class for composing Store base class. This class is based on [levelup](https://www.npmjs.com/package/levelup)\n\n## causal-net.log \n\nThis causal-net.log is a sub-module for [causality](https://red-gold.github.io/causality-docs/) project.\nThis module provide log instance and sampling mixins\n\n### termLogger \n\n- Provide isomomorphic logger instance to replace console.log.\n\n\n```javascript\nimport { termLogger } from 'causal-net.log';\n\ntermLogger.log('this is text');\ntermLogger.log({'name':'this is text'});\n\ntermLogger.log({'father':{'name':'this is text','alias':'this is another text'}});\ntermLogger.log({'father':{'name':{sub:'this is text'},'alias':'this is another text'}});\ntermLogger.log({'array':[0,1,2,3,4]});\ntermLogger.log({'array':[{a:0}, {b:1}, {c:2},  {d:4},  {e:6}]});\n\ntermLogger.Level = 'debug';\nconsole.log(termLogger.Level);\ntermLogger.log({'not to show': true});\ntermLogger.Level = 'log';\nconsole.log(termLogger.Level);\n\ntermLogger.progressBegin(5);\nfor(let i of [1,2,3,4,5]){\n    termLogger.progressUpdate({current: i});\n}\ntermLogger.progressEnd();\n\ntermLogger.groupBegin('group A');\ntermLogger.groupBegin('group B');\ntermLogger.groupBegin('group C');\ntermLogger.groupEnd();\ntermLogger.groupEnd();\ntermLogger.groupEnd();\n\n\n```\n\n[Run code](./asset/examples/log.babel.js)\n\n### LoggerMixins\n\n- Mixins function for mix with the main class to acquire logger.\n\n\n```javascript\nimport { LoggerMixins, termLogger, BaseLogger } from 'causal-net.log';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [LoggerMixins]){\n    constructor(){\n        super();\n        this.Logger = termLogger;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Logger instanceof BaseLogger);\n```\n\n[Run code](./asset/examples/logger.mixins.babel.js)\n\n## causal-net.preprocessing \n\nThis causal-net.preprocessing is a sub-module for [causality](https://red-gold.github.io/causality-docs/) project.\nThis module provide preprocessing instances and preprocessing mixins\n\n### nlpPreprocessing\n- Provide methods for text processing: tokenize, filter, count word frequency.\n\n### imagePreprocessing \n- Provide method for image processing: split, transform color\n\n### PreprocessingMixins\n- Mixins for mix with Pipeline class or dataset class.\n\n## causal-net.representation\n\nThis module provide representation instances and representation mixins\n\n### causalNetEmbedding \n- Provide methods for transforming tokens or representing sentence into single vector.\n\nNode\n\n```javascript\nimport { causalNetEmbedding } from 'causal-net.representation';\nimport { termLogger } from 'causal-net.log';\n(async ()=>{\n    const configLink = '../../datasets/WordVec_EN/';\n    await causalNetEmbedding.connect(configLink, true);\n    //first time transform will find on storage cache\n    let vecs = await causalNetEmbedding.transform(['this', 'is', 'test']);\n    for(let vec of vecs){\n        termLogger.log({ vec });\n    }\n    //second time transform will find on memory cache\n    vecs = await causalNetEmbedding.transform(['this', 'is', 'test']);\n    for(let vec of vecs){\n        termLogger.log({ vec });\n    }\n    //return the tensor representing sentence\n    let sentVec = await causalNetEmbedding.sentenceEncode([ ['this', 'is', 'test'] ]);\n    sentVec.print();\n})().catch(err=>{\n    console.error(err);\n});\n```\n\n[Run code](./asset/examples/causalNetEmbedding.babel.node.js)\n\n### universalEmbedding\n- Provide methods for transforming tokens or representing sentence into single vector based [use](https://github.com/tensorflow/tfjs-models/tree/master/universal-sentence-encoder)\n\n\n```javascript\nimport { universalEmbedding, Log } from 'causal-net.representation';\nimport { termLogger } from 'causal-net.log';\n(async ()=>{\n    // termLogger.groupBegin();\n    await universalEmbedding.connect();\n    // termLogger.groupEnd();\n    let sentVec = await universalEmbedding.sentenceEncode([ 'this is test' ])\n    sentVec.print();\n})();\n```\n\n[Run code](./asset/examples/universalEmbedding.babel.js)\n\n### RepresentationMixins\n- Mixins for mix with Pipeline class or dataset class.\n\n\n```javascript\nimport { RepresentationMixins, causalNetEmbedding } from 'causal-net.representation';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nconst PipeLineConfigure = {\n    Representation: {\n        Embedding: causalNetEmbedding,\n        EmbeddingConfig: '../../datasets/WordVec_EN/',\n    }\n}\nclass SimplePipeline extends platform.mixWith(Tensor, [RepresentationMixins]){\n    constructor(configure){\n        super();\n        this.setRepresentationByConfig(configure);\n    }\n}\nlet pipeline = new SimplePipeline(PipeLineConfigure);\npipeline.connect();\nconsole.log(pipeline.Representation);\n```\n\n[Run code](./asset/examples/embeddingMixins.babel.node.js)\n\n\n## causal-net.sampling \n\nThis causal-net.sampling is a sub-module for [causality](https://red-gold.github.io/causality-docs/) project.\nThis module provide sampling instance and sampling mixins\n\n### causalNetSampling \n- Provide sampling instance with various sampling methods.\n\n\n```javascript\nimport { causalNetSampling } from 'causal-net.sampling';\nimport {termLogger as Logger} from 'causal-net.log';\nlet numSamples = 4;\nlet idSize = 10;//id list: [0,1,2,3,4,5,6,7,8,9]\nLogger.log(causalNetSampling.subSampling(numSamples, idSize));\n\nnumSamples = 4;\nlet positiveSampleId = [0, 1];\n//ids: [0, 1, 2, 3];\nlet probIds = [0.9, 0.9, 0.3, 0.7];\nlet samples = causalNetSampling.negSampling(numSamples, positiveSampleId, probIds);\ntermLogger.log({ samples });\n```\n\n[Run code](./asset/examples/causalNetSampling.babel.js)\n\n### SamplingMixins\n- Mixins Mixins for mix with Pipeline class or dataset class.\n\n```javascript\nimport { SamplingMixins, causalNetSampling } from 'causal-net.sampling';\nimport { Platform } from 'causal-net.utils';\nimport { Tensor, Function } from 'causal-net.core';\nconsole.log(causalNetSampling instanceof Function);\nclass SimplePipeline extends Platform.mixWith(Tensor, [SamplingMixins]){\n    constructor(){\n        super();\n        this.Sampling = causalNetSampling;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Sampling);\n```\n\n[Run code](./asset/examples/sampling.mixins.babel.js)\n\n## causal-net.models \n\n### causalNetModels\n- causalNetModels provides common used models: \n\nClassification models\n[EXAMPLE  ERROR! /home/huynhnguyen/github/causality/packages/causality-models/DESCRIPTION.md, /home/huynhnguyen/github/causality/packages/causality-models/examples/classification.babel.js]\n\n### SupervisedModelsMixins\n- Mixins for mix with Pipeline class for supervised models.\n\n\n## causal-net.layer\n\nThis module provides:\n\n### causalNetSGDOptimizer\n- Provide SGD optimizing methods: adam\n[EXAMPLE  ERROR! /home/huynhnguyen/github/causality/packages/causality-layer/DESCRIPTION.md, /home/huynhnguyen/github/causality/packages/causality-layer/examples/examples/SGDOptimizer.babel.js]\n### TrainerMixins\n- Mixins for mix with Pipeline class.\n[EXAMPLE  ERROR! /home/huynhnguyen/github/causality/packages/causality-layer/DESCRIPTION.md, /home/huynhnguyen/github/causality/packages/causality-layer/examples/trainer.mixins.babel.js]\n\n## causal-net.optimizers\nThis causal-net.optimizer provides: \n\n### causalNetSGDOptimizer\n- Provide SGD optimizing methods: adam\n\n```javascript\nimport { causalNetCore } from \"causal-net.core\";\nimport { causalNetSGDOptimizer } from 'causal-net.optimizers';\n\nvar adam = causalNetSGDOptimizer.adam({learningRate: 0.01});\n\nconst T = causalNetCore.CoreTensor;\nvar a = T.variable(T.tensor([1,2,3,4]).reshape([2,2])); \nvar b = T.tensor([2,3,4,5]).reshape([2,2]);\nconst FitFn = ()=>{\n    return a.mul(b).mean();\n};\nconsole.log( adam.fit(FitFn) );\na.print();\nb.print();\n```\n\n[Run code](./asset/examples/causalNetSGDOptimizers.babel.js)\n\n### TrainerMixins\n- Mixins for mix with Pipeline class.\n\n```javascript\nimport { causalNetSGDOptimizer, TrainerMixins } from 'causal-net.optimizers';\nimport { causalNetModels, ModelMixins } from 'causal-net.models';\nimport { causalNetParameters, causalNetLayers, causalNetRunner, NetMixins } from 'causal-net.layer';\nimport { causalNetCore } from 'causal-net.core';\nimport { platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { termLogger } from 'causal-net.log';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [ \n        NetMixins, \n        ModelMixins, \n        TrainerMixins]){\n    constructor(netParameters, netRunner, logger){\n        super();\n        this.logger = logger;\n        this.Parameters = netParameters;\n        this.Net = netRunner;\n    }\n}\nconst T = causalNetCore.CoreTensor;\n(async ()=>{\n    const PipeLineConfigure = {\n        Dataset: {\n            TrainData: [[1,2,3,4]],\n            TestData: [[1,2,3,4]],\n            ValidateData: [[1,2,3,4]]\n        },\n        Net: { \n                Parameters: { Predict: null, Encode: null, Decode: null },\n                Layers: { \n                    Predict: [ causalNetLayers.dense(4, 3), \n                               causalNetLayers.dense(3, 2) ], \n                    Encode: [ causalNetLayers.dense(4, 2) ], \n                    Decode: [ causalNetLayers.dense(4, 2) ] \n                },\n                Model: causalNetModels.classification(2),\n                Optimizer: causalNetSGDOptimizer.adam({learningRate: 0.01})\n        }\n    };\n\n    let pipeline = new SimplePipeline( causalNetParameters, \n                            causalNetRunner, termLogger);\n    pipeline.setByConfig(PipeLineConfigure);\n    const { Predictor } = pipeline.Net;\n    let predictInfer = Predictor(T.tensor([[1,2,3,4]]));\n    predictInfer.print();\n    predictInfer = pipeline.PredictModel(T.tensor([[1,2,3,4]]));\n    predictInfer.print();\n    \n    let modelOneHotPredict = pipeline.OneHotPredictModel(T.tensor([[1,2,3,4]]).asType('float32'));\n    modelOneHotPredict.print();\n    let fit = pipeline.FitModel(T.tensor([[1,2,3,4]]).asType('float32'));\n    fit.print();\n    let modelLoss = pipeline.LossModel(T.tensor([[1,2,3,4]]).asType('float32'), \n                             T.tensor([[0, 1]]).asType('float32'));\n    modelLoss.print();\n    let trainLoss = pipeline.Trainer(T.tensor([[1,2,3,4]]).asType('float32'), \n        T.tensor([[0, 1]]).asType('float32'));\n    trainLoss.print();\n    trainLoss = pipeline.Trainer(T.tensor([[1,2,3,4]]).asType('float32'), \n        T.tensor([[0, 1]]).asType('float32'));\n    trainLoss.print();\n})().catch(err=>{\n    console.error({err});\n});\n```\n\n[Run code](./asset/examples/trainer.mixins.babel.js)\n\n## causal-net.memcache \n\n### memDownCache\n- memDownCache provides wrapper for [memdown]() caching.\n\n\n```javascript\nimport {memDownCache} from 'causal-net.memcache';\nimport {termLogger} from 'causal-net.log';\n\n(async ()=>{\n    await memDownCache.setItem(123, '1223adfa');\n    termLogger.log({getItem: await memDownCache.getItem(123)});\n})();\n\n```\n\n[Run code](./asset/examples/memDownCache.babel.js)\n\n### MemCacheMixins\n- Mixins for mix with Pipeline class for memcache.\n\n```javascript\nimport {memDownCache, MemCacheMixins} from 'causal-net.memcache';\nimport {termLogger} from 'causal-net.log';\n\nimport { platform } from 'causal-net.utils';\nimport { Tensor, Store } from 'causal-net.core';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [MemCacheMixins]){\n    constructor(){\n        super();\n        this.MemCache = memDownCache;\n    }\n}\nlet pipeline = new SimplePipeline();\ntermLogger.log(pipeline.MemCache instanceof Store);\n```\n\n[Run code](./asset/examples/memCache.mixins.babel.js)\n\n\n## causal-net.storage \n\nThis module provides:\n\n### indexDBStorage \n- The isomorphic high performance key-value storage based on indexDB.\n\n\n```javascript\nimport { indexDBStorage } from 'causal-net.storage';\n(async ()=>{\n    await indexDBStorage.writeFile('/temp','12345');\n    let content  = await indexDBStorage.readFile('/temp');\n    console.log({content});\n    \n    //get file list\n    let listFiles = await indexDBStorage.getFileList('/');\n    console.log({listFiles});\n    \n    //fetch png image and save pixel data into file\n    const url = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    await indexDBStorage.fetchPNGFile(url, 'icon');\n    const pixelArray = await indexDBStorage.readPNGFile('icon');\n    console.log({ pixelArray });\n\n    let ops = [\n        { type: 'put', key: 'temp', value: '123445' },\n        { type: 'del', key: 'temp' }];\n    //batch does not support 'get' type\n    let batchResult = await indexDBStorage.batch(ops);\n    console.log({batchResult});\n})().catch(err=>{\n    console.error(err);\n});\n\n```\n\n[Run code](./asset/examples/storage.babel.js)\n### StorageMixins\n- Mixins storage for mix with Pipeline class.\n\n\n```javascript\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { platform } from 'causal-net.utils';\nimport { Tensor, Store } from 'causal-net.core';\n\nclass SimplePipeline extends platform.mixWith(Tensor, [StorageMixins]){\n    constructor(storage){\n        super();\n        this.Storage = storage;\n    }\n}\nlet pipeline = new SimplePipeline(indexDBStorage);\nconsole.log(pipeline.Storage instanceof Store);\n```\n\n[Run code](./asset/examples/storage.mixins.babel.js)\n\n### CSVFileMixins \n- Mixins for read/write/fetch CSV file. \n\n\n### PNGFileMixins\n- Mixins for read/write/fetch PNG file.\n\n### TextFileMixins\n- Mixins for read/write/fetch Text file.\n\n## causal-net.utils  \nThis module provides:\n\n### platform \n- Enhanced isomorphic mixins with corresponding platform (node|web).\n\n```javascript\nimport { assert } from 'causal-net.utils';\nassert.seemMatchSample([2,2,3], [1,2,3], 'validate sample');\nassert.seemMatchSample('sample text', 'pattern text', 'validate sample');\nassert.seemMatchSample( { 'text' : 'pattern text 1', 'number' : 1123 }, \n                        { 'text' : 'pattern text', 'number' : 1123 } , 'validate sample');\ntry{\n    assert.seemMatchSample(['2',2,3], [1,2,3], 'validate sample');\n}\ncatch(err){\n    //error due to mismatch schema\n    console.log(err.message);\n};\nclass A{};\nlet a = new A();\nassert.beInstanceOf(a, A);\ntry{\n    assert.beInstanceOf('1', A);\n}\ncatch(err){\n    console.log(err.message);\n}\n\n```\n\n[Run code](./asset/examples/assert.babel.js)\n### fetch \n- isomorphic fetch.\n\n\n```javascript\nimport {fetch, Stream, PNGUtils} from 'causal-net.utils';\n(async ()=>{\n    let link = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    let content = await fetch.fetchData(link);\n    console.log({'content length': content.length});\n});\n\n\n```\n\n[Run code](./asset/examples/fetch.babel.js)\n### PNG \n- isomorphic PNG parser.\n\nWeb/Node:\n\n```javascript\nimport { pngUtils } from 'causal-net.utils';\n(async ()=>{\n    const link = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    let fetchedData = await pngUtils.fetchPNG(link);\n    console.log(fetchedData.length);\n})();\n```\n\n[Run code](./asset/examples/png.babel.js)\n\nNode:\n\n```javascript\nimport { pngUtils } from 'causal-net.utils';\n(async ()=>{\n    let data = await pngUtils.readPNG('../../datasets/icon.png');\n    console.log(data.length);\n    pngUtils.writePNG(data, [200, 200, 4], './out.png');\n})();\n\n```\n\n[Run code](./asset/examples/png.babel.node.js)\n### CSV \n- isomorphic CSV parser.\n\nNode:\n\n```javascript\nimport { csvUtils } from 'causal-net.utils';\n(async ()=>{\n    let data = await csvUtils.readCSV('../../datasets/credict.csv');\n    console.log(data);\n})();\n\n```\n\n[Run code](./asset/examples/csv.babel.node.js)\n### Stream \n- isomorphic Stream with Readable, Writeable, Duplex.\n\n\n```javascript\nimport { stream } from 'causal-net.utils';\n\nlet reader = stream.makeReadable();\n    \nconst TranformFn = (chunkData, chunkEncoding, afterTransformFn) =>{\n    chunkData.x = (chunkData.x+1.5);\n    let event = null;\n    afterTransformFn(event, chunkData);\n};\nlet transformer = stream.makeTransform(TranformFn);\n    \nconst WriteFn = (chunkData, chunkEncoding, callback) =>{\n    console.log({chunkData});\n    callback();\n};\nlet writer = stream.makeWritable(WriteFn);\n    \nreader.pipe(transformer).pipe(writer);\n//write random int for every 100 ms    \nsetInterval(() => {\n    reader.push({ x: Math.random() });\n}, 100);\n\n```\n\n[Run code](./asset/examples/stream.babel.js)\n### assert \n- Enhanced isomorphic assert with schema learnt from example.\n\n\n```javascript\nimport { assert } from 'causal-net.utils';\nassert.seemMatchSample([2,2,3], [1,2,3], 'validate sample');\nassert.seemMatchSample('sample text', 'pattern text', 'validate sample');\nassert.seemMatchSample( { 'text' : 'pattern text 1', 'number' : 1123 }, \n                        { 'text' : 'pattern text', 'number' : 1123 } , 'validate sample');\ntry{\n    assert.seemMatchSample(['2',2,3], [1,2,3], 'validate sample');\n}\ncatch(err){\n    //error due to mismatch schema\n    console.log(err.message);\n};\nclass A{};\nlet a = new A();\nassert.beInstanceOf(a, A);\ntry{\n    assert.beInstanceOf('1', A);\n}\ncatch(err){\n    console.log(err.message);\n}\n\n```\n\n[Run code](./asset/examples/assert.babel.js)\n\n\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/tutorials/streamProcessingText8.babel.node.js.md",
    "name": "./causal-doc/tutorials/streamProcessingText8.babel.node.js.md",
    "content": "\n# Tutorials\n\n## Stream processing with text8 data\n\nInput raw text8 corpus file and return the occurent number of each tokens in corpus.\n\n\n```javascript\nimport * as Preprocessing from 'causal-net.preprocessing';\nimport * as Log from 'causal-net.log';\nimport * as Utils from 'causal-net.utils';\nimport * as Storage from 'causal-net.storage';\nimport * as fs from 'fs';\nvar { indexDBStorage } = Storage;\nvar { stream } = Utils;\nvar { termLogger } = Log;\nvar { nlpPreprocessing, tokenizerEN } = Preprocessing;\n```\n\n\n\n\n    'use strict'\n\n\n\ncreate stream process\n- read chunks from file.\n- transform each chunk.\n- write transformed chunk into new files.\n\n\n```javascript\nvar remainingChars = '', wordFreqCount = {}, lineIndex = 0;\nfunction tranformFn(chunkData, chunkEncoding, afterTransformFn){\n    let sampleText = chunkData + remainingChars;\n    let sampleLines = sampleText.split('\\n');\n    let transformedData = [];\n    for(let line of sampleLines){\n        let tokens = tokenizerEN.tokenize(line);\n        wordFreqCount = nlpPreprocessing.wordFreqCount(tokens, wordFreqCount);\n        lineIndex += 1;\n        transformedData.push({lineIndex, tokens});\n    }\n    afterTransformFn(null, transformedData);\n};\nvar transformer = stream.makeTransform(tranformFn);\n\nfunction writeTokens(transformedData, chunkEncoding, afterWriteFn){\n    const WriteTokensToFile = async (transformedData)=>{\n        for(let {lineIndex, tokens} of transformedData){\n//             console.log({lineIndex});\n            await indexDBStorage.writeFile(`/corpus/line_${lineIndex}`, JSON.stringify(tokens));\n        }\n    }\n    WriteTokensToFile(transformedData).then(()=>{\n        afterWriteFn();\n    })\n}\nvar writer = stream.makeWritable(writeTokens);\nvar characterCount = 0;\n(async ()=>{\n    var corpusReader = fs.createReadStream('../datasets/text8/text8.txt');\n    const CorpusStreamer = stream.makePipeline([corpusReader, transformer, writer], (data)=>{\n        characterCount += data.length;\n    });\n    termLogger.groupBegin('stream performance');\n    let result = await CorpusStreamer;\n    termLogger.groupEnd()\n    termLogger.log({ result, characterCount } );\n})();\n```\n\n    stream performance: begin at Fri Mar 15 2019 16:42:45 GMT+0700 (Indochina Time)\n    stream performance: end after 8514 (ms)\n    { result: 'Success', characterCount: 100000000 }\n\n\n\n```javascript\ntermLogger.log({'show 100 items': Object.entries(wordFreqCount).slice(0,100)});\n```\n\n    { 'show 100 items':\n       [ [ 'anarchism', 303 ],\n         [ 'originated', 572 ],\n         [ 'as', 131819 ],\n         [ 'a', 325895 ],\n         [ 'term', 7220 ],\n         [ 'of', 593676 ],\n         [ 'abuse', 563 ],\n         [ 'first', 28809 ],\n         [ 'used', 22736 ],\n         [ 'against', 8431 ],\n         [ 'early', 10172 ],\n         [ 'working', 2270 ],\n         [ 'class', 3412 ],\n         [ 'radicals', 116 ],\n         [ 'including', 9630 ],\n         [ 'the', 1061363 ],\n         [ 'diggers', 25 ],\n         [ 'english', 11868 ],\n         [ 'revolution', 2029 ],\n         [ 'and', 416615 ],\n         [ 'sans', 68 ],\n         [ 'culottes', 6 ],\n         [ 'french', 8736 ],\n         [ 'whilst', 481 ],\n         [ 'is', 183158 ],\n         [ 'still', 7378 ],\n         [ 'in', 372203 ],\n         [ 'pejorative', 114 ],\n         [ 'way', 6432 ],\n         [ 'to', 316375 ],\n         [ 'describe', 1352 ],\n         [ 'any', 11804 ],\n         [ 'act', 3502 ],\n         [ 'that', 109508 ],\n         [ 'violent', 653 ],\n         [ 'means', 4165 ],\n         [ 'destroy', 466 ],\n         [ 'organization', 2374 ],\n         [ 'society', 4067 ],\n         [ 'it', 73335 ],\n         [ 'has', 37865 ],\n         [ 'also', 44358 ],\n         [ 'been', 25381 ],\n         [ 'taken', 3043 ],\n         [ 'up', 12446 ],\n         [ 'positive', 1254 ],\n         [ 'label', 646 ],\n         [ 'by', 111829 ],\n         [ 'self', 2879 ],\n         [ 'defined', 2449 ],\n         [ 'anarchists', 203 ],\n         [ 'word', 5678 ],\n         [ 'derived', 1701 ],\n         [ 'from', 72865 ],\n         [ 'greek', 4577 ],\n         [ 'without', 5660 ],\n         [ 'archons', 10 ],\n         [ 'ruler', 617 ],\n         [ 'chief', 2130 ],\n         [ 'king', 7457 ],\n         [ 'political', 6967 ],\n         [ 'philosophy', 2758 ],\n         [ 'belief', 1572 ],\n         [ 'rulers', 687 ],\n         [ 'are', 76523 ],\n         [ 'unnecessary', 146 ],\n         [ 'should', 5113 ],\n         [ 'be', 61283 ],\n         [ 'abolished', 399 ],\n         [ 'although', 9286 ],\n         [ 'there', 22706 ],\n         [ 'differing', 231 ],\n         [ 'interpretations', 395 ],\n         [ 'what', 8581 ],\n         [ 'this', 58827 ],\n         [ 'refers', 1570 ],\n         [ 'related', 3535 ],\n         [ 'social', 4307 ],\n         [ 'movements', 1002 ],\n         [ 'advocate', 331 ],\n         [ 'elimination', 216 ],\n         [ 'authoritarian', 185 ],\n         [ 'institutions', 1021 ],\n         [ 'particularly', 2881 ],\n         [ 'state', 12905 ],\n         [ 'anarchy', 109 ],\n         [ 'most', 25562 ],\n         [ 'use', 14011 ],\n         [ 'does', 5220 ],\n         [ 'not', 44030 ],\n         [ 'imply', 257 ],\n         [ 'chaos', 331 ],\n         [ 'nihilism', 42 ],\n         [ 'or', 68948 ],\n         [ 'anomie', 7 ],\n         [ 'but', 35356 ],\n         [ 'rather', 4605 ],\n         [ 'harmonious', 28 ],\n         [ 'anti', 3103 ],\n         [ 'place', 5345 ] ] }\n\n\nAfter preprocessing, data is saved into files under `/copus/` folder\n\n\n```javascript\n(async ()=>{\n    termLogger.groupBegin('get list of preprocessing files')\n    let listFiles = await indexDBStorage.getFileList('/corpus/');\n    termLogger.groupEnd()\n    termLogger.groupBegin('read one file from indexDB')\n    let tokens = await indexDBStorage.readFile(listFiles[0]);\n    termLogger.groupEnd()\n    termLogger.log([ listFiles.length , JSON.parse(tokens).length]);\n})()    \n```\n\n    get list of preprocessing files: begin at Fri Mar 15 2019 16:42:56 GMT+0700 (Indochina Time)\n    get list of preprocessing files: end after 194 (ms)\n    read one file from indexDB: begin at Fri Mar 15 2019 16:42:56 GMT+0700 (Indochina Time)\n    read one file from indexDB: end after 0 (ms)\n    [ 3228, 1293 ]\n\n\n\n```javascript\n\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 742,
    "kind": "testFile",
    "name": "causality/packages/causality-core/test/functor.test.js",
    "content": "import {default as Functor} from '../src/functor';\n/** @test { Functor } */\ntest('functor setIn should be okay', ()=>{\n    let F = new Functor();\n    let setVal = F.setIn(['a','b','c'],'3',{a:1});\n    console.log(JSON.stringify(setVal));\n    expect(JSON.stringify(setVal)).toEqual(JSON.stringify({\"a\":{\"b\":{\"c\":\"3\"}}}));\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/test/functor.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 743,
    "kind": "test",
    "name": "test0",
    "testId": 0,
    "memberof": "causality/packages/causality-core/test/functor.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-core/test/functor.test.js~test0",
    "access": null,
    "description": "functor setIn should be okay",
    "lineNumber": 3,
    "testTargets": [
      " Functor "
    ]
  },
  {
    "__docId__": 744,
    "kind": "testFile",
    "name": "causality/packages/causality-core/test/tensor.test.js",
    "content": "import {default as Tensor} from '../src/tensor';\n/** @test { Tensor } */\ntest('tensor init should be okay', ()=>{\n    let T = new Tensor();\n    expect(T.CoreTensor).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/test/tensor.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 745,
    "kind": "test",
    "name": "test1",
    "testId": 1,
    "memberof": "causality/packages/causality-core/test/tensor.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-core/test/tensor.test.js~test1",
    "access": null,
    "description": "tensor init should be okay",
    "lineNumber": 3,
    "testTargets": [
      " Tensor "
    ]
  },
  {
    "__docId__": 746,
    "kind": "testFile",
    "name": "causality/packages/causality-datasets/test/dataset.test.js",
    "content": "import {default as MnistDataset} from '../src/MNIST.ImgDataset';\ntest('dataset no configure instance should be not okay', ()=>{\n    const Init = ()=>{ \n        try{ let MNIST = new MnistDataset(); }\n        catch(e){\n            throw Error(e);\n        } \n    };\n    expect(Init()).toThrowError();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/test/dataset.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 747,
    "kind": "test",
    "name": "test2",
    "testId": 2,
    "memberof": "causality/packages/causality-datasets/test/dataset.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-datasets/test/dataset.test.js~test2",
    "access": null,
    "description": "dataset no configure instance should be not okay",
    "lineNumber": 2
  },
  {
    "__docId__": 748,
    "kind": "testFile",
    "name": "causality/packages/causality-log/test/termlog.test.js",
    "content": "import { termLogger } from '../src/index';\n/** @test { TermLogger } */\ntest('term logger instance should be defined', ()=>{\n    expect(termLogger).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/test/termlog.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 749,
    "kind": "test",
    "name": "test3",
    "testId": 3,
    "memberof": "causality/packages/causality-log/test/termlog.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-log/test/termlog.test.js~test3",
    "access": null,
    "description": "term logger instance should be defined",
    "lineNumber": 3,
    "testTargets": [
      " TermLogger "
    ]
  },
  {
    "__docId__": 750,
    "kind": "testFile",
    "name": "causality/packages/causality-memcache/test/memdown.test.js",
    "content": "import {memDownCache} from '../src/index';\n/** @test { MemoryCache } */\ntest('memdown instance should be define', ()=>{\n    expect(memDownCache).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/test/memdown.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 751,
    "kind": "test",
    "name": "test4",
    "testId": 4,
    "memberof": "causality/packages/causality-memcache/test/memdown.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-memcache/test/memdown.test.js~test4",
    "access": null,
    "description": "memdown instance should be define",
    "lineNumber": 3,
    "testTargets": [
      " MemoryCache "
    ]
  },
  {
    "__docId__": 752,
    "kind": "testFile",
    "name": "causality/packages/causality-optimizers/test/SGDOptimizer.test.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/test/SGDOptimizer.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 753,
    "kind": "testFile",
    "name": "causality/packages/causality-preprocessing/test/imgPreprocessing.test.js",
    "content": "import { imagePreprocessing } from '../src/index';\n/** @test { ImagePreprocessing } */\ntest('ImagePreprocessing instance should be define', ()=>{    \n    expect(imagePreprocessing).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/test/imgPreprocessing.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 754,
    "kind": "test",
    "name": "test5",
    "testId": 5,
    "memberof": "causality/packages/causality-preprocessing/test/imgPreprocessing.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-preprocessing/test/imgPreprocessing.test.js~test5",
    "access": null,
    "description": "ImagePreprocessing instance should be define",
    "lineNumber": 3,
    "testTargets": [
      " ImagePreprocessing "
    ]
  },
  {
    "__docId__": 755,
    "kind": "testFile",
    "name": "causality/packages/causality-preprocessing/test/nlpPreprocessing.test.js",
    "content": "import { nlpPreprocessing } from '../src/index';\n/** @test { NLPPreprocessing } */\ntest('nlpPreprocessing instance should be define', ()=>{    \n    expect(nlpPreprocessing).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/test/nlpPreprocessing.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 756,
    "kind": "test",
    "name": "test6",
    "testId": 6,
    "memberof": "causality/packages/causality-preprocessing/test/nlpPreprocessing.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-preprocessing/test/nlpPreprocessing.test.js~test6",
    "access": null,
    "description": "nlpPreprocessing instance should be define",
    "lineNumber": 3,
    "testTargets": [
      " NLPPreprocessing "
    ]
  },
  {
    "__docId__": 757,
    "kind": "testFile",
    "name": "causality/packages/causality-representation/test/causalNetEmbedding.test.js",
    "content": "import { default as CausalNetEmbedding } from '../src/causalNetEmbedding';\n/** @test { CausalNetEmbedding } */\ntest('UniversalEmbedding instance should be okay', async ()=>{\n    expect(CausalNetEmbedding).toBeDefined();\n})\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/test/causalNetEmbedding.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 758,
    "kind": "test",
    "name": "test7",
    "testId": 7,
    "memberof": "causality/packages/causality-representation/test/causalNetEmbedding.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-representation/test/causalNetEmbedding.test.js~test7",
    "access": null,
    "description": "UniversalEmbedding instance should be okay",
    "lineNumber": 3,
    "testTargets": [
      " CausalNetEmbedding "
    ]
  },
  {
    "__docId__": 759,
    "kind": "testFile",
    "name": "causality/packages/causality-representation/test/universalEmbedding.test.js",
    "content": "import { default as UniversalEmbedding } from '../src/universalEmbedding';\n/** @test { UniversalEmbedding } */\ntest('UniversalEmbedding instance should be okay', async ()=>{\n    expect(UniversalEmbedding).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/test/universalEmbedding.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 760,
    "kind": "test",
    "name": "test8",
    "testId": 8,
    "memberof": "causality/packages/causality-representation/test/universalEmbedding.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-representation/test/universalEmbedding.test.js~test8",
    "access": null,
    "description": "UniversalEmbedding instance should be okay",
    "lineNumber": 3,
    "testTargets": [
      " UniversalEmbedding "
    ]
  },
  {
    "__docId__": 761,
    "kind": "testFile",
    "name": "causality/packages/causality-sampling/test/sampling.test.js",
    "content": "import { default as causalNetSampling } from '../src/causalNetSampling';\n/** @test { CausalNetSampling } */\ntest('negSampling should be okay', async ()=>{\n    let samples = causalNetSampling.negSampling(4, [0, 1], [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]);\n    expect(samples.length).toEqual(4);\n})\n/** @test { CausalNetSampling } */\ntest('subSampling should be okay', async ()=>{\n    let samples = causalNetSampling.subSampling(4, 10);\n    expect(samples.length).toEqual(4);\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/test/sampling.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 762,
    "kind": "test",
    "name": "test9",
    "testId": 9,
    "memberof": "causality/packages/causality-sampling/test/sampling.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-sampling/test/sampling.test.js~test9",
    "access": null,
    "description": "negSampling should be okay",
    "lineNumber": 3,
    "testTargets": [
      " CausalNetSampling "
    ]
  },
  {
    "__docId__": 763,
    "kind": "test",
    "name": "test10",
    "testId": 10,
    "memberof": "causality/packages/causality-sampling/test/sampling.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-sampling/test/sampling.test.js~test10",
    "access": null,
    "description": "subSampling should be okay",
    "lineNumber": 8,
    "testTargets": [
      " CausalNetSampling "
    ]
  },
  {
    "__docId__": 764,
    "kind": "testFile",
    "name": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "content": "import {indexDBStorage} from '../src/index';\n/** @test {IndexDBStorage} */\ntest('indexdb write file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    expect(writePath).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb read file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    let data = await indexDBStorage.readFile(writePath);    \n    expect(data).toBe('12345');\n})\n/** @test {IndexDBStorage} */\ntest('indexdb delete file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    let filePath = await indexDBStorage.deleteFile(writePath);    \n    return await indexDBStorage.readFile('temp').catch(e=>{\n        expect(e).toMatch(/read/);\n    })\n})\n/** @test {IndexDBStorage} */\ntest('indexdb batch write should be okay', async ()=>{\n    let ops = [//no op get\n            { type: 'put', key: 'temp', value: '123445' },\n            { type: 'del', key: 'temp' }];\n    let res = await indexDBStorage.batch(ops);\n    console.log({res});\n    expect(res).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb list file should be okay', async ()=>{\n    let fileList = await indexDBStorage.getFileList('/');\n    console.log({fileList});\n    expect(fileList).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb delete by prefix should be okay', async ()=>{\n    let writePath = await indexDBStorage.deleteFileByPrefix('/');\n    console.log({writePath});\n    expect(writePath).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/test/indexdbStorage.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 765,
    "kind": "test",
    "name": "test11",
    "testId": 11,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test11",
    "access": null,
    "description": "indexdb write file should be okay",
    "lineNumber": 3,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 766,
    "kind": "test",
    "name": "test12",
    "testId": 12,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test12",
    "access": null,
    "description": "indexdb read file should be okay",
    "lineNumber": 8,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 767,
    "kind": "test",
    "name": "test13",
    "testId": 13,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test13",
    "access": null,
    "description": "indexdb delete file should be okay",
    "lineNumber": 14,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 768,
    "kind": "test",
    "name": "test14",
    "testId": 14,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test14",
    "access": null,
    "description": "indexdb batch write should be okay",
    "lineNumber": 22,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 769,
    "kind": "test",
    "name": "test15",
    "testId": 15,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test15",
    "access": null,
    "description": "indexdb list file should be okay",
    "lineNumber": 31,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 770,
    "kind": "test",
    "name": "test16",
    "testId": 16,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test16",
    "access": null,
    "description": "indexdb delete by prefix should be okay",
    "lineNumber": 37,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 771,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/assert.test.js",
    "content": "import {default as assert} from '../src/assert';\n/** @test {assert} */\ntest('assert should be define', async ()=>{\n    /** @test {assert#instance} */\n    expect(assert).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/assert.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 772,
    "kind": "test",
    "name": "test17",
    "testId": 17,
    "memberof": "causality/packages/causality-utils/test/assert.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/assert.test.js~test17",
    "access": null,
    "description": "assert should be define",
    "lineNumber": 3,
    "testTargets": [
      "assert"
    ]
  },
  {
    "__docId__": 773,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/csvUtils.test.js",
    "content": "import {default as csvUtils } from '../src/csvUtils';\n/** @test {csvUtils} */\ntest('create PNG file must success', async ()=>{\n    let csv = csvUtils.CoreCSV;\n    /** @test {csvUtils#instance} */\n    expect(csv).toBeDefined();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/csvUtils.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 774,
    "kind": "test",
    "name": "test18",
    "testId": 18,
    "memberof": "causality/packages/causality-utils/test/csvUtils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/csvUtils.test.js~test18",
    "access": null,
    "description": "create PNG file must success",
    "lineNumber": 3,
    "testTargets": [
      "csvUtils"
    ]
  },
  {
    "__docId__": 775,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/fetch.test.js",
    "content": "import {default as fetch} from '../src/fetch';\n/** @test {fetch} */\ntest('fetch file should be okay', async ()=>{\n    const link = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    let data = await fetch.fetchData(link);\n    /** @test {fetch#instance} */\n    expect(data).toBeDefined();\n})\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/fetch.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 776,
    "kind": "test",
    "name": "test19",
    "testId": 19,
    "memberof": "causality/packages/causality-utils/test/fetch.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/fetch.test.js~test19",
    "access": null,
    "description": "fetch file should be okay",
    "lineNumber": 3,
    "testTargets": [
      "fetch"
    ]
  },
  {
    "__docId__": 777,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/platform.test.js",
    "content": "import {default as platform} from '../src/platform';\n/** @test {Platform} */\ntest('platform must return', ()=>{\n    let machine = platform.currentPlatform();\n    /** @test {Platform#instance} */\n    expect(machine).toBeDefined();\n});\ntest('platform mix should works', ()=>{\n    class A{\n        constructor(){\n        }\n        sayA(){\n            return 'say A';\n        }\n    }\n    const AMixins = (Base)=>class extends Base{\n        sayAExtend(){\n            return 'say A with mixins';\n        }\n    }\n    class AExtends extends platform.mixWith(A, [AMixins]){}\n    const a = new AExtends();\n    /** @test {Platform#mixWith} */\n    expect(a.sayAExtend()).toEqual('say A with mixins');\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/platform.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 778,
    "kind": "test",
    "name": "test20",
    "testId": 20,
    "memberof": "causality/packages/causality-utils/test/platform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/platform.test.js~test20",
    "access": null,
    "description": "platform must return",
    "lineNumber": 3,
    "testTargets": [
      "Platform"
    ]
  },
  {
    "__docId__": 779,
    "kind": "test",
    "name": "test21",
    "testId": 21,
    "memberof": "causality/packages/causality-utils/test/platform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/platform.test.js~test21",
    "access": null,
    "description": "platform mix should works",
    "lineNumber": 8
  },
  {
    "__docId__": 780,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/pngUtils.test.js",
    "content": "import {default as pngUtils } from '../src/pngUtils';\n/** @test {PNGUtils} */\ntest('create PNG file must success', async ()=>{\n    let PNG = pngUtils.CorePNG;\n    let png = new PNG({width:1, height:1});\n    png.data = Buffer.from([128,128,128,255]);\n    /** @test {pngUtils#createFile} */\n    expect(png).toBeDefined();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/pngUtils.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 781,
    "kind": "test",
    "name": "test22",
    "testId": 22,
    "memberof": "causality/packages/causality-utils/test/pngUtils.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/pngUtils.test.js~test22",
    "access": null,
    "description": "create PNG file must success",
    "lineNumber": 3,
    "testTargets": [
      "PNGUtils"
    ]
  },
  {
    "__docId__": 782,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/stream.test.js",
    "content": "import {default as Stream} from '../src/stream';\n/** @test {Stream} */\ntest('Stream readable must define', async ()=>{\n    let reader = Stream.makeReadable();\n    /** @test {Stream#instance} */\n    expect(reader).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/stream.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 783,
    "kind": "test",
    "name": "test23",
    "testId": 23,
    "memberof": "causality/packages/causality-utils/test/stream.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/stream.test.js~test23",
    "access": null,
    "description": "Stream readable must define",
    "lineNumber": 3,
    "testTargets": [
      "Stream"
    ]
  }
]