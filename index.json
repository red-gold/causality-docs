[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "causality/packages/causality-core/src/function.js",
    "content": "/**\n * class Function is the primitive class for composing higher class.\n * This class wrap [Ramda](https://ramdajs.com/) for providing Functional programming style method.\n * @class Function\n */\nclass Function{\n    constructor(){\n        /**\n         * @private { Object } Ramda instance\n         */\n        this.R = R;\n    \n        /**\n         * @private { Logger } logger   \n         */        \n        this.logger = console;\n    }\n    /**\n     * This method return core Ramda instance\n     * @readonly\n     * @memberof Function\n     */\n    get CoreFunction(){\n        return R;\n    }\n    \n    /**\n     *\n     * @param { Array } keys\n     * @param { Object } item\n     * @param { Any } defaultValue - return value in case of not found\n     * @returns { Any } return found value or defaultValue\n     * @memberof Function\n     */\n    getIn(keys, item, defaultValue){\n        return R.pathOr(defaultValue, keys, item);\n    }\n    \n    /**\n     * set value into object by the keys list\n     * @param { Array } keys\n     * @param { Object } value\n     * @param { Object } item - item to set\n     * @returns { Any } return found value or defaultValue\n     * @memberof Function\n     */\n    setIn(keys, value, item){\n        return R.assocPath(keys, value, item);\n    }\n\n    /**\n     * zip two array\n     * @param { Array } pairs - two arrays to zip\n     * @returns { Array } array after zip\n     * @memberof Function\n     */\n    zip(...pairs){\n        return this.R.zip(...pairs);\n    }\n    /**\n     * Unzip array of pairs to two arrays\n     * @param { Array } pairs - array of pairs to unzip\n     * @returns { [Array1, Array2] } - two arrays \n     * @memberof Function\n     */\n    unzip(pairs){\n        const R = this.R;\n        const Unzip = (uz, [v1, v2])=>{\n            uz[0] = [...uz[0], v1];\n            uz[1] = [...uz[1], v2];\n            return uz;\n        };\n        return R.reduce(Unzip,[[], []],pairs);\n    }\n}\n\nexport default Function;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-core/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/function.js",
    "importStyle": "Function",
    "description": "class Function is the primitive class for composing higher class.\nThis class wrap [Ramda](https://ramdajs.com/) for providing Functional programming style method.",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Function"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#R",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#logger",
    "access": "private",
    "description": "",
    "lineNumber": 16,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "get",
    "name": "CoreFunction",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#CoreFunction",
    "access": "public",
    "description": "This method return core Ramda instance",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "method",
    "name": "getIn",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#getIn",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Any } return found value or defaultValue"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "return value in case of not found"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Any "
      ],
      "spread": false,
      "description": "return found value or defaultValue"
    }
  },
  {
    "__docId__": 7,
    "kind": "method",
    "name": "setIn",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#setIn",
    "access": "public",
    "description": "set value into object by the keys list",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Any } return found value or defaultValue"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "item to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Any "
      ],
      "spread": false,
      "description": "return found value or defaultValue"
    }
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "zip",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#zip",
    "access": "public",
    "description": "zip two array",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array after zip"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "pairs",
        "description": "two arrays to zip"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array after zip"
    }
  },
  {
    "__docId__": 9,
    "kind": "method",
    "name": "unzip",
    "memberof": "causality/packages/causality-core/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/function.js~Function#unzip",
    "access": "public",
    "description": "Unzip array of pairs to two arrays",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ [Array1, Array2] } - two arrays "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "pairs",
        "description": "array of pairs to unzip"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " [Array1, Array2] "
      ],
      "spread": false,
      "description": "two arrays"
    }
  },
  {
    "__docId__": 10,
    "kind": "file",
    "name": "causality/packages/causality-core/src/index.js",
    "content": "import { default as Tensor } from './tensor';\nimport { default as Function } from './function';\nconst causalNetCore = {\n    get CoreFunction(){\n        return Function.CoreFunction; \n    },\n    get CoreTensor(){\n        return Tensor.CoreTensor; \n    }\n};\nexport { Tensor, Function, causalNetCore };\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 11,
    "kind": "variable",
    "name": "causalNetCore",
    "memberof": "causality/packages/causality-core/src/index.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/index.js~causalNetCore",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/index.js",
    "importStyle": "{causalNetCore}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"CoreFunction\": function, \"CoreTensor\": function}"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "file",
    "name": "causality/packages/causality-core/src/tensor.js",
    "content": "var tf = require('@tensorflow/tfjs');\nimport('@tensorflow/tfjs-node');\nimport('@tensorflow/tfjs-node-gpu');\n/**\n * class Function is the primitive class for composing higher class.\n * This class wrap [tensorflowjs](https://www.tensorflow.org/js) for providing tensor calculation\n * @class Tensor\n */\nexport default class Tensor{\n    constructor(){\n        this.T = tf;\n        this.logger = console;\n    }\n    /**\n     * This method return the core tensor instance\n     * @readonly\n     * @memberof Tensor\n     */\n    get CoreTensor(){\n        return this.T;\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/src/tensor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 13,
    "kind": "variable",
    "name": "tf",
    "memberof": "causality/packages/causality-core/src/tensor.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/tensor.js~tf",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-core/src/tensor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 14,
    "kind": "class",
    "name": "Tensor",
    "memberof": "causality/packages/causality-core/src/tensor.js",
    "static": true,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-core/src/tensor.js",
    "importStyle": "Tensor",
    "description": "class Function is the primitive class for composing higher class.\nThis class wrap [tensorflowjs](https://www.tensorflow.org/js) for providing tensor calculation",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Tensor"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 15,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 16,
    "kind": "member",
    "name": "T",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#T",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 17,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#logger",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "get",
    "name": "CoreTensor",
    "memberof": "causality/packages/causality-core/src/tensor.js~Tensor",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-core/src/tensor.js~Tensor#CoreTensor",
    "access": "public",
    "description": "This method return the core tensor instance",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/CONLL.NLPDataset.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/CONLL.NLPDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/IRIS.tabularDataset.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/IRIS.tabularDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 21,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "content": "import { default as BaseImgDataset } from './baseImgDataset';\nimport { Platform } from 'causal-net.utils';\nimport { LoggerMixins } from 'causal-net.log';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { MemCacheMixins, memDownCache } from 'causal-net.memcache';\nimport { default as Function } from './function';\nimport { default as ImageDatasetFetchMixins } from './imageDatasetFetch.mixins';\nimport { default as ImageDatasetPreprocessingMixins } from './imageDatasetPreprocessing.mixins';\nimport { default as ImageDatasetGeneratorMixins } from './imageDatasetGenerator.mixins';\nimport { PreprocessingMixins, imagePreprocessing } from 'causal-net.preprocessing';\n\nexport default class MnistDataset extends Platform.mixWith(BaseImgDataset, \n        [ ImageDatasetFetchMixins,\n          ImageDatasetPreprocessingMixins,\n          PreprocessingMixins,\n          ImageDatasetGeneratorMixins,\n          MemCacheMixins,\n          StorageMixins,\n          LoggerMixins ]){\n    \n    constructor(...args){\n        super(...args);\n        this.F = new Function();\n        this.Storage = indexDBStorage;\n        this.MemCache = memDownCache;\n        const PreprocessingSample = async (masterSampleBuffer, sampleSize)=>{\n            return await imagePreprocessing.imageSplit(masterSampleBuffer, sampleSize);\n        };\n        const PreprocessingLabel = async (masterLabelBuffer, labelSize)=>{\n            return await imagePreprocessing.imageSplit(masterLabelBuffer, labelSize);\n        };\n        this.setPreprocessingFunctions(PreprocessingSample, PreprocessingLabel);\n    }\n};\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 22,
    "kind": "class",
    "name": "MnistDataset",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/MNIST.ImgDataset.js",
    "importStyle": "MnistDataset",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 23,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#F",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "MemCache",
    "memberof": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/MNIST.ImgDataset.js~MnistDataset#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseImgDataset.js",
    "content": "export default class BaseImgDataset{\n    constructor(datasetConfigure){\n        this.configuration = datasetConfigure;\n        const {numSamples, sampleSize, numClasses} = this.configuration;\n        this.dataSize = [numSamples, ...sampleSize];\n        \n        this.numSamples = numSamples;\n        this.sampleSize = sampleSize;\n        this.numClass   = numClasses;\n    }\n    \n    summary(){\n        return this.configuration;\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseImgDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 28,
    "kind": "class",
    "name": "BaseImgDataset",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/baseImgDataset.js",
    "importStyle": "BaseImgDataset",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "configuration",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#configuration",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "member",
    "name": "dataSize",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#dataSize",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "numSamples",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#numSamples",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "sampleSize",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#sampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "name": "numClass",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#numClass",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "name": "summary",
    "memberof": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/baseImgDataset.js~BaseImgDataset#summary",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseNLPDataset.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseNLPDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 37,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/baseTabularDataset.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/baseTabularDataset.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 38,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/function.js",
    "content": "import { Function as BaseFunction} from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { default as FunctionMixins} from './function.mixins';\nexport default class Function extends Platform.mixWith(BaseFunction,[FunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 39,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-datasets/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[FunctionMixins])"
  },
  {
    "__docId__": 40,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-datasets/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/function.mixins.js",
    "content": "const FunctionMixins = (BaseFunctionClass)=> class extends BaseFunctionClass{ \n    getImgBufferSize(imgSize){\n        const R = this.R;\n        return R.reduce((s,d)=>s*d,1,imgSize);\n    }\n    generatorWithIndex(items){\n        const R = this.R;\n        return R.addIndex(R.map)((d, idx)=>[idx, d], items);\n    }\n    splitTrainTestSet(items, splitIndex){\n        const R = this.R;\n        return R.splitAt(splitIndex, items);\n    }\n};\nexport default FunctionMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/function.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "class",
    "name": "FunctionMixins",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/function.mixins.js",
    "importStyle": "FunctionMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseFunctionClass"
    ]
  },
  {
    "__docId__": 43,
    "kind": "method",
    "name": "getImgBufferSize",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#getImgBufferSize",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "imgSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "method",
    "name": "generatorWithIndex",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#generatorWithIndex",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "items",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "splitTrainTestSet",
    "memberof": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/function.mixins.js~FunctionMixins#splitTrainTestSet",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "items",
        "types": [
          "*"
        ]
      },
      {
        "name": "splitIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "content": "\nimport { Sampling } from 'causal-net.utils';\nconst ImageDatasetFetchMixins = (BaseImageClass)=> class extends BaseImageClass{ \n    async fetchLabelChunk(saveDir, labelChunk){\n        let labelChunkUrl = this.configuration.datasetUrl + labelChunk;\n        let labelSavePath = saveDir + labelChunk;\n        return await this.storage.fetchFile(labelChunkUrl, labelSavePath);\n    }\n\n    async fetchSampleChunk(saveDir, sampleChunk){\n        let sampleChunkUrl = this.configuration.datasetUrl + sampleChunk;\n        let sammpleSavePath = saveDir + sampleChunk;\n        this.logger.debug({sampleChunkUrl, sammpleSavePath});\n        return await this.storage.fetchPNGFile(sampleChunkUrl, sammpleSavePath);\n    }\n\n    selectChunks(numchunks, selectBy='random'){\n        let chunkIdxs = Sampling.choice(this.configuration.chunkList, numchunks);\n        return chunkIdxs.map((idx, ith)=>([`data-chunk-${idx}.png`,`label-chunk-${idx}`]));\n    }\n\n    async fetchDataset(saveDir='/mnist/',numchunks=10, selectBy='random'){\n        let selectedChunks = this.selectChunks(numchunks, selectBy);\n        this.savedChunks = [];\n        for(let [sampleChunk, labelChunk] of selectedChunks){\n            let samplePath = await this.fetchSampleChunk(saveDir, sampleChunk);\n            let labelPath = await this.fetchLabelChunk(saveDir, labelChunk);\n            this.savedChunks.push([samplePath, labelPath]);\n            this.progress({saveChunks:[samplePath, labelPath]});\n        };\n        return this.F.unzip(this.savedChunks);\n    }\n};\nexport default ImageDatasetFetchMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 47,
    "kind": "class",
    "name": "ImageDatasetFetchMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js",
    "importStyle": "ImageDatasetFetchMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseImageClass"
    ]
  },
  {
    "__docId__": 48,
    "kind": "method",
    "name": "fetchLabelChunk",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins#fetchLabelChunk",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "types": [
          "*"
        ]
      },
      {
        "name": "labelChunk",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "fetchSampleChunk",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins#fetchSampleChunk",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleChunk",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "selectChunks",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins#selectChunks",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "numchunks",
        "types": [
          "*"
        ]
      },
      {
        "name": "selectBy",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "random",
        "defaultValue": "random"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "fetchDataset",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins#fetchDataset",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "/mnist/",
        "defaultValue": "/mnist/"
      },
      {
        "name": "numchunks",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 10,
        "defaultValue": "10"
      },
      {
        "name": "selectBy",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "random",
        "defaultValue": "random"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "savedChunks",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetFetch.mixins.js~ImageDatasetFetchMixins#savedChunks",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "content": "import { Sampling } from 'causal-net.utils';\nconst ImageDatasetGeneratorMixins = (BaseImageClass)=> class extends BaseImageClass{ \n    \n    getTrainTestSet(trainSize=null){\n        trainSize = trainSize||parseInt(this.savedPreprocessing.length*0.9);\n        const [trainSet, testSet] = this.F.splitTrainTestSet(this.savedPreprocessing, trainSize);\n        return [trainSet, testSet];\n    }\n\n    makeSampleGenerator(sampleIdxSet, batchSize=null, start=0, end=null){\n        if(!this.savedPreprocessing){\n            throw Error('preprocessing must be performed');\n        }\n        batchSize = batchSize?batchSize:sampleIdxSet.length;\n        const _batches = this.F.hsplitEvery(sampleIdxSet, batchSize);\n        const batches = Sampling.choice(_batches, _batches.length);\n        if(end === null){\n            end = batches.length;\n        }\n        let nextIndex = start, iterationCount = 0, step = 1;\n        const batchGenerator = {\n                next: async()=>{\n                    let batchSamples = [], batchLabels = [];\n                    for(let [samplePath, labelPath] of batches[nextIndex]){\n                        let sampleItem = await this.preProcessingStorage.getItem(samplePath,true);\n                        let labelItem = await this.preProcessingStorage.getItem(labelPath,true);\n                        batchSamples = [...batchSamples, sampleItem[samplePath]];\n                        batchLabels = [...batchLabels, labelItem[labelPath]];\n                    }\n                    nextIndex += step;\n                    let idx = iterationCount;\n                    iterationCount++;\n                    return {idx, batchSize, data:[batchSamples, batchLabels]};\n                },\n                *[Symbol.iterator]() {\n                    while(nextIndex < end){\n                        yield this.next();\n                    }\n                }\n            };\n        return batchGenerator;\n    }\n};\nexport default ImageDatasetGeneratorMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "ImageDatasetGeneratorMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js",
    "importStyle": "ImageDatasetGeneratorMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseImageClass"
    ]
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "getTrainTestSet",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins#getTrainTestSet",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "trainSize",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "makeSampleGenerator",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetGenerator.mixins.js~ImageDatasetGeneratorMixins#makeSampleGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "sampleIdxSet",
        "types": [
          "*"
        ]
      },
      {
        "name": "batchSize",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "start",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "end",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "content": "import { Stream } from 'causal-net.utils';\nconst ImageDatasetPreprocessingMixins = (BaseImageClass)=> class extends BaseImageClass{ \n    makePreprocessingStream(saveDir){\n        const ImageBufferSize = this.F.getImgBufferSize(this.sampleSize);\n        const LabelBufferSize = this.numClass;\n        this.logger.debug({imageBufferSize: ImageBufferSize, \n                     labelBufferSize: LabelBufferSize});\n        const TransformFn = (chunk, chunkEncoding, afterTransformFn) =>{\n            const TransformAsync = async ()=>{\n                let sampleBuffer = chunk.sample;\n                let labelBuffer = chunk.label;\n                this.logger.debug({sampleBuffer, labelBuffer});\n                let preprocessedImgBuffer = await this.PreprocessingSampleFn(sampleBuffer, ImageBufferSize);\n                let preprocessedLabelBuffer = await this.PreprocessingLabelFn(labelBuffer, LabelBufferSize);\n                return { processedChunk: this.F.zip(preprocessedImgBuffer, preprocessedLabelBuffer), \n                         chunkIdx: chunk.idx};\n            };\n            TransformAsync(chunk).then(processedChunk=>{\n                afterTransformFn(null, processedChunk);\n            });\n        };\n        \n        const WriteFn = (processedChunk, chunkEncoding, callback) =>{\n            \n            const WriteAsync = async (processedChunk)=>{\n                let generator = this.F.generatorWithIndex(processedChunk.processedChunk);\n                let chunkIdx  = processedChunk.chunkIdx;\n                let samplePath  = [], labelPath = [];\n                for(let [idx, [sample, label]] of generator){\n                    let chunkSamplePath = await this.preProcessingStorage\n                            .setItem(saveDir + 'sample/' + chunkIdx + '/' + idx + '/', sample);    \n                    let chunkLabelPath = await this.preProcessingStorage\n                            .setItem(saveDir + 'label/' + chunkIdx + '/' + idx + '/', label);\n                    samplePath = [...samplePath, chunkSamplePath];\n                    labelPath = [...labelPath, chunkLabelPath];\n                    this.progress({preprocessing: [chunkSamplePath, chunkLabelPath]});\n                }\n                return this.F.zip(samplePath, labelPath);\n            };\n            \n            WriteAsync(processedChunk).then((result)=>{\n                if(this.savedPreprocessing){\n                    this.savedPreprocessing = [...this.savedPreprocessing, ...result];\n                }\n                else{\n                    this.savedPreprocessing = result;\n                }\n                callback();\n            });\n        };\n        let duplexer = Stream.makeDuplex(WriteFn);\n        let transformer = Stream.makeTransform(TransformFn);\n        let stream = duplexer.pipe(transformer).pipe(duplexer);\n        return stream;\n    }\n\n    async preprocessingDataset(saveDir='/preprocessing/mnist/',storeInMemory=false){\n        this.preProcessingStorage = (storeInMemory)?this.memCache:this.storage;\n        let stream = this.makePreprocessingStream(saveDir);\n        let generator = this.F.generatorWithIndex(this.savedChunks);\n        for(let [idx, [samplePath, labelPath]] of generator){\n            let sampleItem = await this.storage.getItem(samplePath, true);\n            let labelItem = await this.storage.getItem(labelPath, true);\n            let sample = sampleItem[samplePath];\n            let label = labelItem[labelPath];\n            this.logger.debug({sample, label});\n            stream.push({idx, sample, label});\n        }\n        stream.push(null);\n        return new Promise((resolve, reject)=>{\n            stream.on('finish', ()=>{\n                resolve(this.savedPreprocessing);\n            });\n        });\n    }\n};\nexport default ImageDatasetPreprocessingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "ImageDatasetPreprocessingMixins",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js",
    "importStyle": "ImageDatasetPreprocessingMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseImageClass"
    ]
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "makePreprocessingStream",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#makePreprocessingStream",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "savedPreprocessing",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#savedPreprocessing",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "preprocessingDataset",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#preprocessingDataset",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "saveDir",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "/preprocessing/mnist/",
        "defaultValue": "/preprocessing/mnist/"
      },
      {
        "name": "storeInMemory",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "preProcessingStorage",
    "memberof": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-datasets/src/imageDatasetPreprocessing.mixins.js~ImageDatasetPreprocessingMixins#preProcessingStorage",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "causality/packages/causality-datasets/src/index.js",
    "content": "export {default as MNIST} from './MNIST.ImgDataset';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/causalNetLayer.js",
    "content": "import { default as Function } from './function';\nimport { Tensor as BaseTensor } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { default as DenseMixins } from './layers/dense.mixins'; \nclass CausalNetLayer extends Platform.mixWith(BaseTensor, [DenseMixins]){\n    constructor(){\n        super();\n        this.F = new Function();\n        this.R = this.F.CoreFunction;\n    }\n}\n\nexport default new CausalNetLayer;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/causalNetLayer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "CausalNetLayer",
    "memberof": "causality/packages/causality-layer/src/causalNetLayer.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/causalNetLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseTensor, [DenseMixins])"
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer",
    "static": false,
    "longname": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer#F",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer",
    "static": false,
    "longname": "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer#R",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "causalNetLayer",
    "memberof": "causality/packages/causality-layer/src/causalNetLayer.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/causalNetLayer.js~causalNetLayer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/causalNetLayer.js",
    "importStyle": "causalNetLayer",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-layer/src/causalNetLayer.js~CausalNetLayer"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nexport default class Function extends BaseFunction{\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-layer/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~BaseFunction"
    ]
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-layer/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/index.js",
    "content": "export { default as causalNetLayer } from './causalNetLayer';\nexport { default as LayerMixins } from './layer.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/layer.mixins.js",
    "content": "const LayerMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    get Layer(){\n        this.layer;\n    }\n    set Layer(layer){\n        this.layer = layer;\n    }\n};\n\nexport default LayerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/layer.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "class",
    "name": "LayerMixins",
    "memberof": "causality/packages/causality-layer/src/layer.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/layer.mixins.js",
    "importStyle": "LayerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 77,
    "kind": "get",
    "name": "Layer",
    "memberof": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins#Layer",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": null
  },
  {
    "__docId__": 78,
    "kind": "set",
    "name": "Layer",
    "memberof": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins#Layer",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "layer",
    "memberof": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins",
    "static": false,
    "longname": "causality/packages/causality-layer/src/layer.mixins.js~LayerMixins#layer",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "causality/packages/causality-layer/src/layers/dense.mixins.js",
    "content": "const DenseLayerMixins = (PipelineClass)=> class extends PipelineClass{\n    dense(name, inputSize, outputSize){\n        return { \n            Name: name, Type: 'Layer',\n            Parameters: { Weight: [inputSize, outputSize], Bias: [outputSize] },\n            Net: function(value, params){\n                    let {Weight, Bias} = params;\n                    let result = value.dot(Weight).add(Bias);\n                    return result;\n                }\n            };\n    }\n};\nexport default DenseLayerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-layer/src/layers/dense.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "class",
    "name": "DenseLayerMixins",
    "memberof": "causality/packages/causality-layer/src/layers/dense.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-layer/src/layers/dense.mixins.js~DenseLayerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-layer/src/layers/dense.mixins.js",
    "importStyle": "DenseLayerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "dense",
    "memberof": "causality/packages/causality-layer/src/layers/dense.mixins.js~DenseLayerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-layer/src/layers/dense.mixins.js~DenseLayerMixins#dense",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "inputSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "outputSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Name\": *, \"Type\": string, \"Parameters\": *, \"Net\": *}"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "causality/packages/causality-log/src/baseLog.js",
    "content": "/**\n * This class provided the \n * @class BaseLog\n */\nclass BaseLog{\n    constructor(){\n        this.AcceptedLevels = {debug: 0, log:1, warning:2, error: 3};\n        this.rAcceptedLevels = {0:'debug', 1: 'log', 2: 'warning', 3: 'error'};\n        this.level = this.AcceptedLevels['debug'];\n    }\n    set Level(level){\n        if(this.AcceptedLevels[level]!==undefined){\n            this.level = this.AcceptedLevels[level];    \n        }\n        else{\n            throw Error(`${level} must be one of ${Object.keys(this.AcceptedLevels)}`);\n        }\n    }\n    get Level(){\n        return this.rAcceptedLevels[this.level];\n    }\n\n    connect(){\n        throw Error('implement required');\n    }\n\n    log(message){\n        throw Error('implement required');\n    }\n\n    debug(message){\n        throw Error('implement required');\n    }\n\n    progressBegin(range){\n        throw Error('implement required');\n    }\n\n    progressUpdate(message){\n        throw Error('implement required');\n    }\n\n    progressEnd(message){\n        throw Error('implement required');\n    }\n}\n\nexport default BaseLog;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/baseLog.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "class",
    "name": "BaseLog",
    "memberof": "causality/packages/causality-log/src/baseLog.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/baseLog.js",
    "importStyle": "BaseLog",
    "description": "This class provided the ",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BaseLog"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "AcceptedLevels",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#AcceptedLevels",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"debug\": *, \"log\": number, \"warning\": number, \"error\": number}"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "rAcceptedLevels",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#rAcceptedLevels",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"0\": string, \"1\": string, \"2\": string, \"3\": string}"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "level",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#level",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "set",
    "name": "Level",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#Level",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "get",
    "name": "Level",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#Level",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#connect",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#log",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#debug",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "progressBegin",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#progressBegin",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "range",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "progressUpdate",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#progressUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "progressEnd",
    "memberof": "causality/packages/causality-log/src/baseLog.js~BaseLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/baseLog.js~BaseLog#progressEnd",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "causality/packages/causality-log/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nexport default class Function extends BaseFunction{\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-log/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~BaseFunction"
    ]
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "causality/packages/causality-log/src/index.js",
    "content": "export {default as termLogger} from './termLog';\nexport {default as BaseLog} from './baseLog';\nexport {default as LoggerMixins} from './logger.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "causality/packages/causality-log/src/logger.mixins.js",
    "content": "const LoggerMixins = (BasedClass)=> class extends BasedClass{\n    constructor(){\n        super();\n        this.logger = console;\n    }\n    progress(progressMessage){\n        if(this.logger.progress){\n            this.logger.progress(progressMessage);\n        }\n    }\n    set Logger(logger){\n        this.logger = logger;\n    }\n    \n    get Logger(){\n        return this.logger;\n    }\n};\n\nexport default LoggerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/logger.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "class",
    "name": "LoggerMixins",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/logger.mixins.js",
    "importStyle": "LoggerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasedClass"
    ]
  },
  {
    "__docId__": 104,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#logger",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "progress",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#progress",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "progressMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "set",
    "name": "Logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 109,
    "kind": "get",
    "name": "Logger",
    "memberof": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/logger.mixins.js~LoggerMixins#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "causality/packages/causality-log/src/prettyJson.js",
    "content": "// origin code from https://github.com/lucygilbert/json-display/blob/master/json-display.js\n// Copyright (c) 2017 Lucy Gilbert\nexport default class JsonView{\n    constructor(){\n    }\n    static JSONDisplay(json, openLevelsArg, styleOptionsArg) {\n        var DEFAULT_STYLE_OPTIONS = {\n          root: { tag: 'pre', style: 'padding: 5px; font-size: 1rem;' },\n          titleContainer: { tag: 'div', style: 'margin-bottom: 3px;' },\n          title: { tag: 'span', style: 'cursor: pointer;' },\n          titleText: { tag: 'span', style: '' },\n          openButton: { \n            tag: 'span',\n            style: 'display: inline-block; margin: 0px 7px 0px 2px; border-top: 5px solid transparent; '\n                 + 'border-bottom: 5px solid transparent; border-left: 5px solid black;',\n          },\n          contentsContainer: { tag: 'div', style: 'padding-left: 18px;' },\n          keyValuePair: { tag: 'span', style: 'display: block; margin-bottom: 2px;' },\n          key: { tag: 'span', style: 'color: darkblue;' },\n          symbolValue: { tag: 'span', style: 'color: darkgreen;' },\n          stringValue: { tag: 'span', style: 'color: crimson;' },\n          numberValue: { tag: 'span', style: 'color: blue;' },\n          booleanValue: { tag: 'span', style: 'color: blue;' },\n          nullValue: { tag: 'span', style: 'color: blue;' },\n        };\n        var openLevels = isNaN(parseInt(openLevelsArg)) ? Infinity : parseInt(openLevelsArg);\n        var styleOptions = typeof styleOptionsArg === 'object' \n                           ? mergeStyleOptions(DEFAULT_STYLE_OPTIONS, styleOptionsArg)\n                           : DEFAULT_STYLE_OPTIONS;\n    \n        if (typeof Object.assign != 'function') {\n          Object.assign = function(target) {\n            if (target == null) {\n              throw new TypeError('Cannot convert undefined or null to object');\n            }\n    \n            var to = Object(target);\n    \n            for (var index = 1; index < arguments.length; index++) {\n              var nextSource = arguments[index];\n    \n              if (nextSource != null) {\n                for (var nextKey in nextSource) {\n                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                  }\n                }\n              }\n            }\n            return to;\n          };\n        }\n    \n        function render() {\n          var element = document.createElement(styleOptions.root.tag);\n          element.style.cssText = styleOptions.root.style;\n    \n          if (json === null || json === undefined) {\n            var voidElement = getValue(null);\n            element.appendChild(voidElement);\n          } else if (json instanceof Date) {\n            var dateElement = getValue(json.toISOString());\n            element.appendChild(dateElement);\n          } else if (typeof json !== 'object') {\n            var nonExpandableElement = getValue(json);\n            element.appendChild(nonExpandableElement);\n          } else {\n            var title = Array.isArray(json) ? 'Array[' + json.length + ']' : 'Object';\n            var thisLevelIsClosed = openLevels < 1;\n            element.appendChild(getTitle(title, null, thisLevelIsClosed));\n            element.appendChild(convertJsonToElements(json, 1));\n          }\n    \n          return element;\n        }\n    \n        function convertJsonToElements(json, index) {\n          var thisLevelIsClosed = index > openLevels;\n          var nextLevelIsClosed = index + 1 > openLevels;\n          var container = getContentsContainer(thisLevelIsClosed);\n          for (var key in json) {\n            if (Array.isArray(json[key])) {\n              container.appendChild(getTitle('Array[' + json[key].length + ']', key, nextLevelIsClosed));\n              container.appendChild(convertJsonToElements(json[key], index + 1));\n            } else if (json[key] === null || json[key] === undefined) {\n              container.appendChild(getStandardPair(key, null));\n            } else if (json[key] instanceof Date) {\n              container.appendChild(getStandardPair(key, json[key].toISOString()));\n            } else if (typeof json[key] === 'object') {\n              container.appendChild(getTitle('Object', key, nextLevelIsClosed));\n              container.appendChild(convertJsonToElements(json[key], index + 1));\n            } else {\n              container.appendChild(getStandardPair(key, json[key]));\n            }\n          }\n          if (typeof Object.getOwnPropertySymbols === 'function') {\n            Object.getOwnPropertySymbols(json).forEach(function(symbol) {\n              container.appendChild(getStandardPair(symbol.toString(), json[symbol]));\n            });\n          }\n    \n          return container;\n        }\n    \n        function getTitle(titleText, optionalKey, levelIsClosed) {\n          var currentlyClosed = levelIsClosed;\n          var containerElement = document.createElement(styleOptions.titleContainer.tag);\n          containerElement.style.cssText = styleOptions.titleContainer.style;\n          containerElement.setAttribute('data-test', 'titleContainer');\n          var textElement = document.createElement(styleOptions.titleText.tag);\n          var titleElement = document.createElement(styleOptions.title.tag);\n          titleElement.style.cssText = styleOptions.title.style;\n          textElement.style.cssText = styleOptions.titleText.style;\n    \n          titleElement.appendChild(getOpenButton(levelIsClosed));\n          if (optionalKey) {\n            textElement.appendChild(getKey(optionalKey));\n          }\n          textElement.appendChild(document.createTextNode(titleText));\n          titleElement.appendChild(textElement);\n    \n          titleElement.onclick = function () {\n            var openButton = titleElement.firstChild;\n            var objectContents = titleElement.parentNode.nextSibling;\n            objectContents.style.display = currentlyClosed ? 'block' : 'none';\n            openButton.style.transform = currentlyClosed ? 'rotate(90deg)' : 'rotate(0deg)';\n            currentlyClosed = !currentlyClosed;\n          };\n    \n          containerElement.appendChild(titleElement);\n          return containerElement;\n        }\n    \n        function getOpenButton(levelIsClosed) {\n          var buttonElement = document.createElement(styleOptions.openButton.tag);\n          buttonElement.style.cssText = styleOptions.openButton.style;\n          buttonElement.style.transform = levelIsClosed ? 'rotate(0deg)' : 'rotate(90deg)';\n          return buttonElement;\n        }\n    \n        function getContentsContainer(isClosed) {\n          var containerElement = document.createElement(styleOptions.contentsContainer.tag);\n          containerElement.setAttribute('data-test', 'contentsContainer');\n          containerElement.style.cssText = styleOptions.contentsContainer.style;\n          containerElement.style.display = (isClosed ? 'none' : 'block');\n          return containerElement;\n        }\n    \n        function getStandardPair(key, value) {\n          var pairElement = document.createElement(styleOptions.keyValuePair.tag);\n          pairElement.style.cssText = styleOptions.keyValuePair.style;\n          pairElement.appendChild(getKey(key));\n          pairElement.appendChild(getValue(value));\n          return pairElement;\n        }\n    \n        function getKey(name) {\n          var keyElement = document.createElement(styleOptions.key.tag);\n          keyElement.style.cssText = styleOptions.key.style;\n          keyElement.appendChild(document.createTextNode(name + ': '));\n          return keyElement;\n        }\n    \n        function getValue(value) {\n          var valueElement;\n          var nullType = 'object';\n          switch (typeof value) {\n            case 'symbol':\n              valueElement = document.createElement(styleOptions.symbolValue.tag);\n              valueElement.style.cssText = styleOptions.symbolValue.style;\n              valueElement.appendChild(document.createTextNode(value.toString()));\n              break;\n            case 'string':\n              valueElement = document.createElement(styleOptions.stringValue.tag);\n              valueElement.style.cssText = styleOptions.stringValue.style;\n              valueElement.appendChild(document.createTextNode('\"' + value + '\"'));\n              break;\n            case 'number':\n              valueElement = document.createElement(styleOptions.numberValue.tag);\n              valueElement.style.cssText = styleOptions.numberValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n            case 'boolean':\n              valueElement = document.createElement(styleOptions.booleanValue.tag);\n              valueElement.style.cssText = styleOptions.booleanValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n            case nullType:\n              valueElement = document.createElement(styleOptions.nullValue.tag);\n              valueElement.style.cssText = styleOptions.nullValue.style;\n              valueElement.appendChild(document.createTextNode(value));\n              break;\n          }\n          return valueElement;\n        }\n    \n        function mergeStyleOptions(defaults, overrides) {\n          var merged = {};\n          for (var key in defaults) {\n            merged[key] = Object.assign({}, defaults[key], overrides[key]);\n          }\n          return merged;\n        }\n    \n        return render();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/prettyJson.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "JsonView",
    "memberof": "causality/packages/causality-log/src/prettyJson.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/prettyJson.js",
    "importStyle": "JsonView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "JSONDisplay",
    "memberof": "causality/packages/causality-log/src/prettyJson.js~JsonView",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-log/src/prettyJson.js~JsonView.JSONDisplay",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "json",
        "types": [
          "*"
        ]
      },
      {
        "name": "openLevelsArg",
        "types": [
          "*"
        ]
      },
      {
        "name": "styleOptionsArg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLog.js",
    "content": "import { default as BaseLog } from './baseLog';\nimport { default as LogNodeMixins } from './termLog.mixins.node';\nimport { default as WebNodeMixins } from './termLog.mixins.web';\nimport { Platform } from 'causal-net.utils';\nclass TermLog extends Platform.mixWith(BaseLog, {'node':[LogNodeMixins],'web':[WebNodeMixins]}){\n    constructor(){\n        super();\n    }\n}\nexport default new TermLog();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLog.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "TermLog",
    "memberof": "causality/packages/causality-log/src/termLog.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLog.js~TermLog",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLog.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseLog, {'node':[LogNodeMixins],'web':[WebNodeMixins]})"
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-log/src/termLog.js~TermLog",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.js~TermLog#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "termLog",
    "memberof": "causality/packages/causality-log/src/termLog.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLog.js~termLog",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLog.js",
    "importStyle": "termLog",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-log/src/termLog.js~TermLog"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLog.mixins.node.js",
    "content": "import * as cliProgress from 'cli-progress';\n\nconst LogNodeMixins = (LogClass)=> class extends LogClass{\n    connect(channel){\n        this.currentBar = false;\n    }\n    log(message){\n        //TODO: make decorator \n        this.currentBar = false;\n        if(this.level >= this.AcceptedLevels['log']){\n            return null;\n        }\n        console.log(message);\n    }\n    progressBegin(range){\n        this.processCounter += 1;\n        this.currentBar = new cliProgress.Bar({}, cliProgress.Presets.shades_classic);\n        this.currentBar.setTotal(range);\n    }\n    progressUpdate(progressMessage){\n        if(!this.currentBar){\n            progressBegin()\n        }\n        this.processCounter += 1;\n        this.currentBar.update(currentVal);\n    }\n    progressEnd(){\n        this.currentBar.stop();\n    }\n    debug(message){\n        this.currentBar = false; \n        if(this.level >= this.AcceptedLevels['debug']){\n            return null;\n        }\n        console.debug(message);\n    }\n};\n\nexport default LogNodeMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLog.mixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "class",
    "name": "LogNodeMixins",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLog.mixins.node.js",
    "importStyle": "LogNodeMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "LogClass"
    ]
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#connect",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "channel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "currentBar",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#currentBar",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#log",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "progressBegin",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#progressBegin",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "range",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "processCounter",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#processCounter",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "progressUpdate",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#progressUpdate",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "progressMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "progressEnd",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#progressEnd",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.node.js~LogNodeMixins#debug",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "causality/packages/causality-log/src/termLog.mixins.web.js",
    "content": "import {default as JsonView} from './prettyJson';\nconst WebNodeMixins = (LogClass)=> class extends LogClass{\n    connect(documentEl=null){\n        documentEl = documentEl||document.body;\n        let node = document.createElement(\"ul\");\n        node.style.cssText = \"list-style-type: none;\";\n        documentEl.appendChild(node);\n        this.frameEl = documentEl;\n        this.loggerEl = documentEl.getElementsByTagName(\"ul\")[0];\n    }\n    scrollBottom(element=null){\n        element = element || this.frameEl;\n        element.scrollTop = element.scrollHeight - element.clientHeight;\n    }\n    progress(processMessage){\n        // let node = this.loggerEl.getElementsByTagName(\"li:nth-last-of-type(1)\");\n        let LINodes = this.loggerEl.getElementsByTagName(\"li\");\n        let node = LINodes[LINodes.length-1];\n        if(!node || node.classList.contains(\"logger-progress\")){\n            //create new el\n            node = document.createElement(\"li\");\n            node.classList.add(\"logger-progress\");\n            this.loggerEl.appendChild(node);\n        }\n        let jsonNode = JsonView.JSONDisplay(processMessage);\n        var date = new Date();\n        node.innerHTML = `<p style=\"font-size: 12px; text-align:right\">${date}</p>`;\n        node.appendChild(jsonNode);\n        this.scrollBottom();\n    }\n    log(message){\n        if(this.level >= this.AcceptedLevels['log']){\n            return null;\n        }\n        if(!this.loggerEl || !this.loggerEl.appendChild){\n            this.connect();\n        }\n        let node = document.createElement(\"li\");\n        node.style.cssText = 'border-bottom: 1px solid #dedede;';       \n        let jsonNode = JsonView.JSONDisplay(message);\n        var date = new Date();\n        node.innerHTML = `<p style=\"font-size: 12px; text-align:right\">${date}</p>`;\n        node.appendChild(jsonNode);\n        this.loggerEl.appendChild(node);\n        this.scrollBottom();\n        console.log(message);\n    }\n\n    debug(message){\n        if(this.level >= this.AcceptedLevels['debug']){\n            return null;\n        }\n        //no show on web screen;        \n        console.debug(message);\n    }\n};\n\nexport default WebNodeMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/src/termLog.mixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "class",
    "name": "WebNodeMixins",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-log/src/termLog.mixins.web.js",
    "importStyle": "WebNodeMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "LogClass"
    ]
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#connect",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "documentEl",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "frameEl",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#frameEl",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "loggerEl",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#loggerEl",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "scrollBottom",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#scrollBottom",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "progress",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#progress",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "processMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "log",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#log",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "debug",
    "memberof": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-log/src/termLog.mixins.web.js~WebNodeMixins#debug",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/baseMemCache.js",
    "content": "export default class BaseMemCache{\n    constructor(zone=''){\n        this.zone = zone;\n    }\n\n    async getItem(key, asBuffer=false){\n        throw Error('need to implement');\n    }\n\n    async setItem(key, data){\n        throw Error('need to implement');\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/baseMemCache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "class",
    "name": "BaseMemCache",
    "memberof": "causality/packages/causality-memcache/src/baseMemCache.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/baseMemCache.js",
    "importStyle": "BaseMemCache",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 143,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "zone",
    "memberof": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache",
    "static": false,
    "longname": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache#zone",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "getItem",
    "memberof": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "asBuffer",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "setItem",
    "memberof": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/baseMemCache.js~BaseMemCache#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nexport default class Function extends BaseFunction{\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-memcache/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~BaseFunction"
    ]
  },
  {
    "__docId__": 149,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memcache/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/index.js",
    "content": "export { default as memDownCache } from './memdownCache';\nexport { default as BaseMemCache } from './baseMemCache';\nexport { default as MemCacheMixins } from './memcache.mixins';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memcache.mixins.js",
    "content": "const MemCacheMixins = (BaseClass)=> class extends BaseClass{\n    async memCacheSummary(){\n        return await this.memCache.getItemList();\n    }\n    set MemCache(memCache){\n        this.memCache = memCache;\n    }\n\n    get MemCache(){\n        return this.memCache;\n    }\n};\nexport default MemCacheMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memcache.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "MemCacheMixins",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memcache.mixins.js",
    "importStyle": "MemCacheMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseClass"
    ]
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "memCacheSummary",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#memCacheSummary",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "set",
    "name": "MemCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "memCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#memCache",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "get",
    "name": "MemCache",
    "memberof": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memcache.mixins.js~MemCacheMixins#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memdown.mixins.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memdown.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memdownCache.js",
    "content": "import { Platform } from 'causal-net.utils';\nimport BaseMemCache from './baseMemCache';\nimport levelup from 'levelup';\nimport memdown from 'memdown';\nimport { default as MemorizingMixins } from './memorizing.mixins';\nclass MemoryCache extends Platform.mixWith(BaseMemCache,\n    [ MemorizingMixins ]){\n    constructor(zone){\n        super(zone);\n        this.cache = levelup(memdown());        \n    }\n    async getItem(key, asBuffer=false){\n        return new Promise((resolve, reject)=>{\n            this.cache.get(key, {asBuffer}, (err, data)=>{\n                if(err){\n                    reject('error write');\n                }\n                else{\n                    resolve({[key]: data});\n                }\n            });\n        });\n    }\n    \n    async setItem(key, data){\n        return new Promise((resolve, reject)=>{\n            this.cache.put(key, data, (err)=>{\n                if(err){\n                    reject('error write');\n                }\n                else{\n                    resolve({[key]: data});\n                }\n            });\n        });\n    }\n\n    async delItem(key){\n        return new Promise((resolve, reject)=>{\n            this.storage.del(key, (err)=>{\n                if(err){\n                    console.error({err});\n                    reject('error write');\n                }\n                else{\n                    resolve(key);\n                }\n            });\n        });\n    }\n\n    createCheckItemNameFn(name){\n        var pattern = name;\n        var regex = new RegExp(`${pattern}.*`,'g');\n        return (fileName)=>fileName.match(regex) || [];\n    };\n\n    async getItemList(namePath='/'){\n        const NameTester = this.createCheckItemNameFn(filePath);\n        return new Promise((resolve, reject)=>{\n            let fileList = [];\n            this.storage.createKeyStream()\n                .on('data', (key) =>{\n                    key = key.toString('utf8');\n                    if(NameTester(key).length===1){\n                        fileList.push(key);\n                    }\n                })\n                .on('close', () => resolve(fileList) )\n                .on('end',  () => resolve(fileList) )\n                .on('error', (err) =>{ \n                    console.error(err);\n                    reject('error getFileList') ;\n                });\n        });\n    }\n}\n\nexport default new MemoryCache();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memdownCache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "MemoryCache",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memdownCache.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "cache",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#cache",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getItem",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "asBuffer",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "setItem",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "delItem",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#delItem",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "createCheckItemNameFn",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#createCheckItemNameFn",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "getItemList",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache#getItemList",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "namePath",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "/",
        "defaultValue": "/"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "memoryCache",
    "memberof": "causality/packages/causality-memcache/src/memdownCache.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memdownCache.js~memoryCache",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memdownCache.js",
    "importStyle": "memoryCache",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-memcache/src/memdownCache.js~MemoryCache"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "causality/packages/causality-memcache/src/memorizing.mixins.js",
    "content": "const MemorizingMixins = (BaseMemCacheClass)=> class extends BaseMemCacheClass{\n    async read(memorySlotIndex){\n        const GetFromMemory = (memorySlotIndex)=>{\n            return this.getItem(memorySlotIndex)\n                        .then(data=>data[memorySlotIndex])\n                        .catch(err => null);\n        };\n        return await GetFromMemory(memorySlotIndex);\n    }\n    async write(memorySlotIndex, value){\n        return await this.setItem(memorySlotIndex, value);\n    }\n\n    async recall(slotIdxs){\n        let memory = [];\n        for(let slotIdx of slotIdxs){\n            memory.push(await this.read(slotIdx));\n        }\n        return memory;\n    }\n};\nexport default MemorizingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/src/memorizing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "class",
    "name": "MemorizingMixins",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memcache/src/memorizing.mixins.js",
    "importStyle": "MemorizingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseMemCacheClass"
    ]
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "read",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#read",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "memorySlotIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "write",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#write",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "memorySlotIndex",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "recall",
    "memberof": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memcache/src/memorizing.mixins.js~MemorizingMixins#recall",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "file",
    "name": "causality/packages/causality-memory/src/causalNetMemory.js",
    "content": "import { Tensor, causalNetCore } from 'causal-net.core';\nimport { memDownCache } from 'causal-net.memcache';\nclass CausalNetMemory extends Tensor{\n    constructor(){\n        super();\n        this.Memory = memDownCache;\n        this.R = causalNetCore.CoreFunction;\n    }\n    set Memory(memory){\n        //TODO: type checking \n        this.memory = memory;\n    }\n    get Memory(){\n        if(!this.memory){\n            throw Error(`memory is not set`);\n        }\n        return this.memory;\n    }\n    get MemorySize(){\n        return this.memorySize;\n    }\n    set MemorySize(size){\n        this.memorySize = size;\n    }\n    get NumSlots(){\n        return this.memorySize[0];\n    }\n    get SlotSize(){\n        \n        return this.memorySize[1];\n    }\n    async initMemory(size, initTensor=null){\n        this.MemorySize = size;\n        const R = this.R;\n        if(!initTensor){\n            initTensor = await this.T.randomNormal(size);\n        }        \n        let slotIdxs = R.range(0, this.NumSlots);\n        return this.writeSlots(slotIdxs, initTensor);\n    }\n\n    async normalize(){\n        const Memory = this.Memory, NumSlots = this.NumSlots, R = this.R;\n        let memValues = await Memory.recall(R.range(0, NumSlots));\n        let allTs = this.T.tensor(memValues);\n        let meanTs = allTs.mean(1, true);\n        let stdTs = allTs.sub(meanTs).pow(2).mean(1, true).pow(0.5);\n        return allTs.sub(meanTs).div(stdTs);    \n    }\n\n    async getMatchScore(slotIdxs){\n        let normTs = await this.normalize();\n        let cTs = normTs.gather(slotIdxs);\n        let similarityScore = normTs.dot(cTs.transpose());\n        return similarityScore;\n    }\n\n    async getTopKSimilar(slotIdxs, k){\n        let matchScoreTensor = await this.getMatchScore(slotIdxs);\n        const {values, indices} = matchScoreTensor.transpose().topk(k);\n        return indices;\n    }\n    \n    async writeSlots(slotIdxs, memoryTensor){   \n        const R = this.R, SlotSize = this.SlotSize, Memory = this.Memory;\n        let tensorData = await memoryTensor.data(); \n        let values = R.splitEvery(SlotSize, tensorData);\n        for(let idx of R.range(0, slotIdxs.length)){\n            await Memory.write(slotIdxs[idx], values[idx]);\n        }\n        return memoryTensor;\n    }\n    async readSlots(slotIndexs){\n        const Memory = this.Memory, T = this.T;\n        let values = [];\n        for(let slotIdx of slotIndexs){\n            let value = await Memory.read(slotIdx);\n            values.push(value);\n        }\n        return T.variable(T.tensor(values));\n    }\n}\n\nexport default new CausalNetMemory();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memory/src/causalNetMemory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "class",
    "name": "CausalNetMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js",
    "static": true,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memory/src/causalNetMemory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~Tensor"
    ]
  },
  {
    "__docId__": 175,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "R",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#R",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "set",
    "name": "Memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#Memory",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#memory",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "get",
    "name": "Memory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#Memory",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "get",
    "name": "MemorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#MemorySize",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "set",
    "name": "MemorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#MemorySize",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "memorySize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#memorySize",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "NumSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#NumSlots",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "get",
    "name": "SlotSize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#SlotSize",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "initMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#initMemory",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      },
      {
        "name": "initTensor",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "normalize",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#normalize",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "getMatchScore",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#getMatchScore",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "getTopKSimilar",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#getTopKSimilar",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      },
      {
        "name": "k",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "writeSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#writeSlots",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "slotIdxs",
        "types": [
          "*"
        ]
      },
      {
        "name": "memoryTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "readSlots",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory#readSlots",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "slotIndexs",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "variable",
    "name": "causalNetMemory",
    "memberof": "causality/packages/causality-memory/src/causalNetMemory.js",
    "static": true,
    "longname": "causality/packages/causality-memory/src/causalNetMemory.js~causalNetMemory",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-memory/src/causalNetMemory.js",
    "importStyle": "causalNetMemory",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-memory/src/causalNetMemory.js~CausalNetMemory"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "causality/packages/causality-memory/src/index.js",
    "content": "export { default as causalNetMemory } from './causalNetMemory';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memory/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/index.js",
    "content": "export { default as SingleLabelMixins } from './singleLabel.mixins';\nexport { default as SequenceLabelsMixins } from './sequenceLabels.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/sequenceLabels.mixins.js",
    "content": "const SequenceLabelsMixins = (basePipelineClass)=> class extends (basePipelineClass){\n    Decoder(){\n        throw Error('implement required');\n    }\n\n    CTCDecode(){\n        throw Error('implement required');\n    }\n};\n\nexport default SequenceLabelsMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/sequenceLabels.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "SequenceLabelsMixins",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/sequenceLabels.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/sequenceLabels.mixins.js~SequenceLabelsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/sequenceLabels.mixins.js",
    "importStyle": "SequenceLabelsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "basePipelineClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "causality/packages/causality-models/src/SupervisedModels/singleLabel.mixins.js",
    "content": "const SingleLabelMixins = (basePipelineClass)=> class extends (basePipelineClass){\n    classification(){\n        const Fit = (pipelineOutTensor) =>{\n            let logProb = pipelineOutTensor.sub(pipelineOutTensor.logSumExp(1, true));\n            return logProb;\n        };\n        const Predict = (pipelineOutTensor) =>{\n            let logProb = Fit(pipelineOutTensor);\n            let predictedClass = logProb.argMax(1);\n            return predictedClass;\n        };\n        const OneHotPredict = (pipelineOutTensor, numClasses) =>{\n            let predictedClass = Predict(pipelineOutTensor);\n            let oneHotPredict = this.T.oneHot(predictedClass, numClasses);\n            return oneHotPredict;\n        };\n        const Loss = (pipelineOutTensor, labelTensor)=>{\n            let logProb = Fit(pipelineOutTensor);\n            let likelihood = logProb.neg().mul(labelTensor);\n            let loss = likelihood.mean();\n            return loss;\n        };\n        return { Predict, OneHotPredict, Loss, Fit };\n    }\n};\n\nexport default SingleLabelMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/SupervisedModels/singleLabel.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "SingleLabelMixins",
    "memberof": "causality/packages/causality-models/src/SupervisedModels/singleLabel.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-models/src/SupervisedModels/singleLabel.mixins.js~SingleLabelMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/SupervisedModels/singleLabel.mixins.js",
    "importStyle": "SingleLabelMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "basePipelineClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Predict\": *, \"OneHotPredict\": *, \"Loss\": *, \"Fit\": *}"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/index.js",
    "content": "export { default as WordContextModelMixins } from './wordContextsModels.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "causality/packages/causality-models/src/UnSupervisedModels/wordContextsModels.mixins.js",
    "content": "const WordContextModelMixins = (basePipelineClass)=> class extends (basePipelineClass){\n    skipGram(){\n        // TODO: come up with better name later\n        //implicit matrix factorization\n        const Fit = (pipelineOutTensor) =>{\n            let logProb = pipelineOutTensor;\n            return logProb;\n        };\n        const Loss = (pipelineOutTensor, labelTensor)=>{\n            let logProb = Fit(pipelineOutTensor);\n            let likelihood = logProb.mul(labelTensor).logSigmoid();\n            let loss = likelihood.mean();\n            return loss;\n        };\n        return { Loss, Fit };\n    }\n};\n\nexport default WordContextModelMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/UnSupervisedModels/wordContextsModels.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "WordContextModelMixins",
    "memberof": "causality/packages/causality-models/src/UnSupervisedModels/wordContextsModels.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-models/src/UnSupervisedModels/wordContextsModels.mixins.js~WordContextModelMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/UnSupervisedModels/wordContextsModels.mixins.js",
    "importStyle": "WordContextModelMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "basePipelineClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Loss\": *, \"Fit\": *}"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "causality/packages/causality-models/src/causalNetModels.js",
    "content": "import { Platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nimport { SingleLabelMixins, SequenceLabelsMixins } from './SupervisedModels/index';\nimport { WordContextModelMixins } from './UnSupervisedModels/index';\nclass CausalNetModels extends Platform.mixWith(Tensor, \n    [ SingleLabelMixins, \n      SequenceLabelsMixins,\n      WordContextModelMixins ]){\n    constructor(){\n        super();\n    }\n}\nexport default new CausalNetModels;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/causalNetModels.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "CausalNetModels",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/causalNetModels.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "P"
  },
  {
    "__docId__": 205,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "causalNetModels",
    "memberof": "causality/packages/causality-models/src/causalNetModels.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/causalNetModels.js~causalNetModels",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/causalNetModels.js",
    "importStyle": "causalNetModels",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-models/src/causalNetModels.js~CausalNetModels"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "causality/packages/causality-models/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nexport default class Function extends BaseFunction{\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-models/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "causal-net.core~BaseFunction"
    ]
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-models/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "causality/packages/causality-models/src/index.js",
    "content": "export { default as SupervisedModelsMixins } from './supervisedModels.mixins';\nexport { default as UnSupervisedModelsMixins } from './unSupervisedModels.mixins';\nexport { default as causalNetModels } from './causalNetModels';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "causality/packages/causality-models/src/supervisedModels.mixins.js",
    "content": "const SupervisedModelsMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    \n    get Loss(){\n        if(!this.modelLoss){\n            throw Error('modelLoss is not set');\n        }\n        return this.modelLoss;\n    }\n    set Loss(loss){\n        if(!loss || typeof(Loss) !== 'function'){\n            throw Error(`expect loss, got ${JSON.stringify(loss)}`);\n        }\n        this.modelLoss = loss;\n        this.modelLoss.bind(this);\n    }\n\n    get Predict(){\n        if(!this.modelPredict){\n            throw Error('modelPredict is not set');\n        }\n        return this.modelPredict;\n    }\n    set Predict(predict){\n        if(!predict){\n            throw Error(`expect predict, got ${predict}`);\n        }\n        this.modelPredict = predict;\n        this.modelPredict.bind(this);\n    }\n\n    get Fit(){\n        if(!this.modelFit){\n            throw Error(`modelFit is not set`);\n        }\n        return this.modelFit;\n    }\n    set Fit(fit){\n        if(!fit || typeof(fit) !== 'function' ){\n            throw Error(`expect fit, got ${JSON.stringify(fit)}`);\n        }\n        this.modelFit = fit;\n        this.modelFit.bind(this);\n    }\n\n    get NumClasses(){\n        return this.modelNumClasses;\n    }\n    set NumClasses(numClasses){\n        if(typeof(numClasses) !== 'number' || numClasses <= 0){\n            throw Error(`expect numClasses, got ${JSON.stringify(numClasses)}`);\n        }\n        this.modelNumClasses = numClasses;\n    }\n\n    get OneHotPredict(){\n        return (samples)=>this.modelOneHotPredict(samples, this.NumClasses);\n    }\n    set OneHotPredict(oneHotPredict){\n        if(!oneHotPredict || typeof(oneHotPredict) !== 'function' ){\n            throw Error(`expect oneHotPredict, got ${JSON.stringify(oneHotPredict)}`);\n        }\n        this.modelOneHotPredict = oneHotPredict;\n        this.modelOneHotPredict.bind(this);\n    }\n\n    setModelByConfig(netConfig){\n        const NumClasses = netConfig.NumClasses;\n        const {Loss, Predict, OneHotPredict, Fit} = netConfig.Model;\n        this.Loss = Loss;\n        this.Fit = Fit;\n        this.Predict = Predict;\n        this.OneHotPredict = OneHotPredict;\n        this.NumClasses = NumClasses;\n    }\n};\n\nexport default SupervisedModelsMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/supervisedModels.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "SupervisedModelsMixins",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/supervisedModels.mixins.js",
    "importStyle": "SupervisedModelsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 213,
    "kind": "get",
    "name": "Loss",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Loss",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "set",
    "name": "Loss",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Loss",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "modelLoss",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#modelLoss",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "get",
    "name": "Predict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Predict",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "set",
    "name": "Predict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Predict",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "modelPredict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#modelPredict",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "get",
    "name": "Fit",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Fit",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "set",
    "name": "Fit",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#Fit",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "modelFit",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#modelFit",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "get",
    "name": "NumClasses",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#NumClasses",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "set",
    "name": "NumClasses",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#NumClasses",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "modelNumClasses",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#modelNumClasses",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "get",
    "name": "OneHotPredict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#OneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "set",
    "name": "OneHotPredict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#OneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 227,
    "kind": "member",
    "name": "modelOneHotPredict",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#modelOneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "setModelByConfig",
    "memberof": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/supervisedModels.mixins.js~SupervisedModelsMixins#setModelByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "causality/packages/causality-models/src/unSupervisedModels.mixins.js",
    "content": "const UnSupervisedModelsMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    get Models(){\n        this.models;\n    }\n    set Models(models){\n        this.models = models;\n    }\n    get Loss(){\n        return this.modelLoss;\n    }\n    set Loss(loss){\n        this.modelLoss = loss;\n        this.modelLoss.bind(this);\n    }\n\n    get Predict(){\n        return this.modelPredict;\n    }\n    set Predict(predict){\n        this.modelPredict = predict;\n        this.modelPredict.bind(this);\n    }\n\n    get Fit(){\n        return this.modelFit;\n    }\n    set Fit(fit){\n        this.modelFit = fit;\n        this.modelFit.bind(this);\n    }\n\n    setModelByConfig(netConfig){\n        const {Loss, Encode, Decode, Fit} = netConfig.Model;\n        if(!Loss){\n            throw Error('Loss must be defind as a tensor function or acquire from CausalNet.models');\n        }\n        if(typeof(Loss) === 'function'){\n            this.Loss = Loss;\n        }\n        else{\n            throw Error('not knowning yet');\n        }\n        if(typeof(Fit) === 'function'){\n            this.Fit = Fit;\n        }\n        else{\n            throw Error('not knowning yet');\n        }\n        if(typeof(Predict) === 'function'){\n            this.Predict = Predict;\n        }\n        else{\n            throw Error('not knowning yet');\n        }\n        if(typeof(OneHotPredict) === 'function'){\n            this.OneHotPredict = OneHotPredict;\n        }\n        else{\n            throw Error('not knowning yet');\n        }\n        if(NumClasses > 0){\n            this.NumClasses = NumClasses;\n        }\n        else{\n            throw Error('NumClasses from netConfig must be non zero, positive number');\n        }\n    }\n};\n\nexport default UnSupervisedModelsMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-models/src/unSupervisedModels.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "class",
    "name": "UnSupervisedModelsMixins",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-models/src/unSupervisedModels.mixins.js",
    "importStyle": "UnSupervisedModelsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 236,
    "kind": "get",
    "name": "Models",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Models",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": null
  },
  {
    "__docId__": 237,
    "kind": "set",
    "name": "Models",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Models",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "models",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#models",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "get",
    "name": "Loss",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Loss",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "set",
    "name": "Loss",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Loss",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "modelLoss",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#modelLoss",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "get",
    "name": "Predict",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Predict",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "set",
    "name": "Predict",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Predict",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "modelPredict",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#modelPredict",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "get",
    "name": "Fit",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Fit",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "set",
    "name": "Fit",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#Fit",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "modelFit",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#modelFit",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "setModelByConfig",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#setModelByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "OneHotPredict",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#OneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "NumClasses",
    "memberof": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins",
    "static": false,
    "longname": "causality/packages/causality-models/src/unSupervisedModels.mixins.js~UnSupervisedModelsMixins#NumClasses",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/MarkovChains/index.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/MarkovChains/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/MarkovChains/mh.mixins.js",
    "content": "\nconst MetroHastingMixins = BaseOptimizerClass => class extends BaseOptimizerClass{\n\n}\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/MarkovChains/mh.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "MetroHastingMixins",
    "memberof": "causality/packages/causality-optimizers/src/MarkovChains/mh.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/MarkovChains/mh.mixins.js~MetroHastingMixins",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/MarkovChains/mh.mixins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "BaseOptimizerClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/ReparameteredDistributions/normal.distribution.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/ReparameteredDistributions/normal.distribution.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "content": "const SGDFitParamsMixins = (BaseOptimizerClass) => class extends BaseOptimizerClass{\n    fit(lossFn, trainableVars){\n        return this.trainer.minimize(lossFn, true, trainableVars);\n    }\n};\n\nexport default SGDFitParamsMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "class",
    "name": "SGDFitParamsMixins",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js",
    "importStyle": "SGDFitParamsMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseOptimizerClass"
    ]
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "fit",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/SGDFitParams.mixins.js~SGDFitParamsMixins#fit",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "lossFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "trainableVars",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "content": "import { Tensor as BaseTensor, Function } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { default as SGDFitParamsMixins } from './SGDFitParams.mixins';\nexport default class AdamOptimizer extends Platform.mixWith(BaseTensor, \n    [ SGDFitParamsMixins ]){\n    constructor(optimizerParams={}){\n        super();\n        let defaultOptimizerParameters = {beta1: 0.1, beta2: 0.2, epsilon:0.03};\n        this.F = new Function();\n        const {learningRate, beta1, beta2, epsilon} = \n            this.F.R.mergeDeepLeft(optimizerParams, defaultOptimizerParameters);\n        this.trainer = this.T.train.adam(learningRate, beta1, beta2, epsilon);\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "class",
    "name": "AdamOptimizer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js",
    "importStyle": "AdamOptimizer",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 263,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#F",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "trainer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/adamOptimizer.js~AdamOptimizer#trainer",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "content": "import {default as AdamOptimizer} from './adamOptimizer';\nlet causalNetSGDOptimizer = {\n    adam: (optimizerParams)=>{\n        return new AdamOptimizer(optimizerParams); \n    }\n};\nexport default causalNetSGDOptimizer;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "causalNetSGDOptimizer",
    "memberof": "causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js~causalNetSGDOptimizer",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/StochasticGradientDescent/index.js",
    "importStyle": "causalNetSGDOptimizer",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "{\"adam\": *}"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/VariationalInferences/divergenceFunctions/KL.mixins.js",
    "content": "const KLDivergence = (BaseDivergenceClass)=> class extends BaseDivergenceClas{\n\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/VariationalInferences/divergenceFunctions/KL.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "KLDivergence",
    "memberof": "causality/packages/causality-optimizers/src/VariationalInferences/divergenceFunctions/KL.mixins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/VariationalInferences/divergenceFunctions/KL.mixins.js~KLDivergence",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/VariationalInferences/divergenceFunctions/KL.mixins.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "BaseDivergenceClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/VariationalInferences/index.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/VariationalInferences/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/causalNetDistributions.js",
    "content": "",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/causalNetDistributions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/index.js",
    "content": "export { default as causalNetSGDOptimizer } from './StochasticGradientDescent';\nexport { default as TrainerMixins } from './trainer.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "causality/packages/causality-optimizers/src/trainer.mixins.js",
    "content": "const TrainerMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    get Optimizer(){\n        if(!this.optimizer){\n            throw Error('optimizer is not set');\n        }\n        return this.optimizer;\n    }\n    \n    set Optimizer(optimizer){\n        if(!optimizer){\n            throw Error(`expect optimizer got ${optimizer}`);\n        }\n        this.optimizer = optimizer;\n    }\n    \n    get OptimizerParameters(){\n        if(!this.optimizerParameters){\n            throw Error('optimizerParameters is not set');\n        }\n        return this.optimizerParameters;\n    }\n    \n    set OptimizerParameters(optimizerParameters){\n        if(!optimizerParameters){\n            throw Error(`expect optimizerPameters got ${JSON.stringify(optimizerParameters)}`);\n        }\n        this.optimizerParameters = optimizerParameters;\n    }\n    \n    get Trainer(){\n        let optimizer = this.Optimizer;\n        let optimizerPameters = this.OptimizerParameters;\n        return optimizer(optimizerPameters);\n    }\n    \n    get TrainableParameters(){\n        if(!this.trainableParameters){\n            throw Error('trainableParameters is not set');\n        }\n        return this.trainableParameters;\n    }\n\n    set TrainableParameters(trainableParameters){\n        if(!trainableParameters){\n            throw Error(`expect trainableParameters got ${trainableParameters}`);\n        }\n        this.trainableParameters = trainableParameters;\n    }\n\n    flattenParams(params){\n        const R = this.R, F = this.F;\n        const MapValues = (objOrArray)=>Array.isArray(objOrArray)?objOrArray:Object.values(objOrArray);\n        const Flatten = (pv)=>{\n            if(F.isTensor(pv)){\n                return pv;\n            }\n            else{\n                let values = MapValues(pv);\n                let flatten = values.reduce((flatten, v)=>{\n                    let res = Flatten(v);\n                    if(R.is(Array, res)){\n                        flatten = [...flatten, ...res];\n                    }\n                    else{\n                        flatten = [...flatten, res];\n                    }\n                    return flatten;\n                }, []);\n                return flatten;\n            }\n        };\n        let values = MapValues(params);\n        return values.reduce((flatten,v)=>[...flatten, ...Flatten(v)],[]);\n    }\n\n    \n    \n    setTrainerByConfig(netConfig){\n        const Trainer = netConfig.Trainer;\n        if(!Trainer){\n            throw Error(`expect Trainer got ${Trainer}`);\n        }\n        const {Optimizer, OptimizerParameters, TrainableParameters} = Trainer;\n        this.Optimizer = Optimizer;\n        this.OptimizerParameters = OptimizerParameters;\n        if(TrainableParameters){\n            this.TrainableParameters = TrainableParameters;\n        }\n    }\n};\n\nexport default TrainerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-optimizers/src/trainer.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "class",
    "name": "TrainerMixins",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-optimizers/src/trainer.mixins.js",
    "importStyle": "TrainerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 275,
    "kind": "get",
    "name": "Optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "set",
    "name": "Optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "optimizer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#optimizer",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "get",
    "name": "OptimizerParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#OptimizerParameters",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "set",
    "name": "OptimizerParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#OptimizerParameters",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "optimizerParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#optimizerParameters",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "get",
    "name": "Trainer",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#Trainer",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "get",
    "name": "TrainableParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#TrainableParameters",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "set",
    "name": "TrainableParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#TrainableParameters",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "trainableParameters",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#trainableParameters",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "flattenParams",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#flattenParams",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "setTrainerByConfig",
    "memberof": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-optimizers/src/trainer.mixins.js~TrainerMixins#setTrainerByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "content": "const ColorTransformingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    colorTransform(sampleBuffer, channelSize, tranformFn){\n        const R = this.R;\n        return R.map(tranformFn, R.splitEvery(channelSize, sampleBuffer));\n    }\n    blackWhiteTransform(sampleBuffer, channelSize){\n        const BlackWhiteFn = (pixel)=>{\n            let pixelValue = pixel[0]*255 + pixel[1]*255 +pixel[2];\n            if( pixelValue > 0 ){\n                return 0;\n            }\n            else{\n                return 1;\n            }\n        };\n        this.colorTransform(BlackWhiteFn, sampleBuffer, channelSize);\n    }\n};\n\nexport default ColorTransformingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "ColorTransformingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js",
    "importStyle": "ColorTransformingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "colorTransform",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins#colorTransform",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sampleBuffer",
        "types": [
          "*"
        ]
      },
      {
        "name": "channelSize",
        "types": [
          "*"
        ]
      },
      {
        "name": "tranformFn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "blackWhiteTransform",
    "memberof": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/colorTransforming.mixins.js~ColorTransformingMixins#blackWhiteTransform",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "sampleBuffer",
        "types": [
          "*"
        ]
      },
      {
        "name": "channelSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "content": "const ImageSplittingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    imageSplit(sampleBuffer, splitSize){\n        return this.R.splitEvery(splitSize, sampleBuffer);\n    }\n};\n\nexport default ImageSplittingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "class",
    "name": "ImageSplittingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js",
    "importStyle": "ImageSplittingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "imageSplit",
    "memberof": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Image/imageSplitting.mixins.js~ImageSplittingMixins#imageSplit",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sampleBuffer",
        "types": [
          "*"
        ]
      },
      {
        "name": "splitSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Image/index.js",
    "content": "export {default as ColorTransformingMixins } from './colorTransforming.mixins';\nexport {default as ImageSplittingMixins } from './imageSplitting.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Image/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/NLP/index.js",
    "content": "export {default as TokenizingMixins } from './tokenizing.mixins';\nexport {default as TokenTransformingMixins } from './tokenTransforming.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/NLP/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "content": "const TokenTransformingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    badWordsFilter(tokens, badWordList){\n        const R = this.R;\n        return R.filter((token)=>R.not(R.find(R.equals(token))(badWordList)), tokens);\n    }\n\n    wordFreqCount(tokens, freqCount={}){\n        const R = this.R;\n        const UpdateFreq = (freqCount, token)=>{\n            if(freqCount[token] === undefined){\n                freqCount[token] = 1;\n            }\n            else{\n                freqCount[token] += 1;\n            }\n            return freqCount;\n        };\n        return R.reduce(UpdateFreq, freqCount, tokens);\n    }\n};\nexport default TokenTransformingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "class",
    "name": "TokenTransformingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js",
    "importStyle": "TokenTransformingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "badWordsFilter",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#badWordsFilter",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "*"
        ]
      },
      {
        "name": "badWordList",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "wordFreqCount",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenTransforming.mixins.js~TokenTransformingMixins#wordFreqCount",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "*"
        ]
      },
      {
        "name": "freqCount",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js",
    "content": "const TokenizingMixins = (BaseFunctionClass) => class extends BaseFunctionClass{\n    cleanText(text, removePattern=null){\n        removePattern = removePattern || /[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\\n\\t]/g;\n        return text.replace(removePattern,\" \");\n    }\n    tokenize(text, toLower=true){\n        const R = this.R;\n        const Tokenizer = this.Tokenizer;\n        let cleanText = this.cleanText(text);\n        let rawTokens = Tokenizer(cleanText);\n        let tokens = R.filter((token)=>R.not(R.isEmpty(token)),rawTokens);\n        if(toLower){\n            return R.map(R.toLower, tokens);\n        }\n        else{\n            return tokens;\n        }\n    }\n};\n\nexport default TokenizingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "class",
    "name": "TokenizingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js~TokenizingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js",
    "importStyle": "TokenizingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseFunctionClass"
    ]
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "cleanText",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js~TokenizingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js~TokenizingMixins#cleanText",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "removePattern",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "tokenize",
    "memberof": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js~TokenizingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/NLP/tokenizing.mixins.js~TokenizingMixins#tokenize",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "toLower",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/index.js",
    "content": "export { default as ItemNormalizing } from './itemNormalizing.mixins';\nexport { default as NullItemReplace } from './nullItemReplacing.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "content": "const ItemNormalizingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    itemNormalize(sample){\n        throw Error('implement require');\n    }\n};\n\nexport default ItemNormalizingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "class",
    "name": "ItemNormalizingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js",
    "importStyle": "ItemNormalizingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "itemNormalize",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/itemNormalizing.mixins.js~ItemNormalizingMixins#itemNormalize",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sample",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "content": "const NullItemReplacingMixins = (PreprocessingClass) => class extends PreprocessingClass{\n    nullItemReplace(sample){\n        throw Error('implement required');\n    }\n};\n\nexport default NullItemReplacingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "class",
    "name": "NullItemReplacingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js",
    "importStyle": "NullItemReplacingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PreprocessingClass"
    ]
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "nullItemReplace",
    "memberof": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/Tabular/nullItemReplacing.mixins.js~NullItemReplacingMixins#nullItemReplace",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sample",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "content": "import { Function as BaseFunction } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { ColorTransformingMixins, ImageSplittingMixins } from './Image/index';\nclass ImagePreprocessing extends Platform.mixWith(BaseFunction, [\n        ColorTransformingMixins, ImageSplittingMixins\n    ]){\n    constructor(){\n        super();\n    }\n}\n\nexport default new ImagePreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "class",
    "name": "ImagePreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 316,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "imagePreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/imagePreprocessing.js~imagePreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/imagePreprocessing.js",
    "importStyle": "imagePreprocessing",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/imagePreprocessing.js~ImagePreprocessing"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/index.js",
    "content": "export {default as PreprocessingMixins} from './preprocessing.mixins';\nexport {default as imagePreprocessing } from './imagePreprocessing';\nexport {default as nlpPreprocessing } from './nlpPreprocessing';\nexport {default as tabularPreprocessing } from './tabularPreprocessing';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 319,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "content": "import { Function as BaseFunction } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { TokenizingMixins, TokenTransformingMixins } from './NLP/index';\nimport { default as TokenizerEN } from './tokenizer.en';\nclass NLPPreprocessing extends Platform.mixWith(BaseFunction, \n    [   TokenizingMixins, \n        TokenTransformingMixins ]){\n    constructor(){\n        super();\n        this.Tokenizer = TokenizerEN;\n    }\n    get Tokenizer(){\n        if(!this.tokenizer){\n            throw Error('tokenizer is not set');\n        }\n        return this.tokenizer;\n    }\n    set Tokenizer(tokenizer){\n        this.tokenizer = tokenizer;\n    }\n}\n\nexport default new NLPPreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 320,
    "kind": "class",
    "name": "NLPPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Pla"
  },
  {
    "__docId__": 321,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 323,
    "kind": "get",
    "name": "Tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#Tokenizer",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "set",
    "name": "Tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#Tokenizer",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "tokenizer",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing#tokenizer",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "nLPPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~nLPPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/nlpPreprocessing.js",
    "importStyle": "nLPPreprocessing",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/nlpPreprocessing.js~NLPPreprocessing"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "content": "import { Assert } from 'causal-net.utils';\nconst PreprocessingMixins = (BasePipelineClass) => class extends BasePipelineClass{\n    \n    get PreprocessingSampleFn(){\n        if(!this.preprocessingSampleFn){\n            throw Error('preprocessingSampleFn is not set');\n        }\n        return this.preprocessingSampleFn;\n    }\n    \n    get PreprocessingLabelFn(){\n        if(!this.preprocessingLabelFn){\n            throw Error('preprocessingLabelFn is not set');\n        }\n        return this.preprocessingLabelFn;\n    }\n    set PreprocessingSampleFn(preprocessingSampleFn){\n        this.preprocessingSampleFn = preprocessingSampleFn;\n        this.preprocessingSampleFn.bind(this);\n    }\n    set PreprocessingLabelFn(preprocessingLabelFn){\n        this.preprocessingLabelFn = preprocessingLabelFn;\n        this.preprocessingLabelFn.bind(this);\n    }\n    \n    setPreprocessingFunctions(preprocessingSampleFn, preprocessingLabelFn){\n        Assert.beInstanceOf(preprocessingSampleFn, Function);\n        Assert.beInstanceOf(preprocessingLabelFn, Function);\n        this.PreprocessingSampleFn = preprocessingSampleFn;\n        this.PreprocessingLabelFn = preprocessingLabelFn;\n    }\n};\n\nexport default PreprocessingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 328,
    "kind": "class",
    "name": "PreprocessingMixins",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/preprocessing.mixins.js",
    "importStyle": "PreprocessingMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 329,
    "kind": "get",
    "name": "PreprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "get",
    "name": "PreprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "set",
    "name": "PreprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "preprocessingSampleFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#preprocessingSampleFn",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "set",
    "name": "PreprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#PreprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "preprocessingLabelFn",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#preprocessingLabelFn",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "setPreprocessingFunctions",
    "memberof": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/preprocessing.mixins.js~PreprocessingMixins#setPreprocessingFunctions",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "preprocessingSampleFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "preprocessingLabelFn",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "content": "import { Function as BaseFunction } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { ItemNormalizing, NullItemReplace } from './Tabular/index';\nclass TabularPreprocessing extends Platform.mixWith(BaseFunction, \n    [ ItemNormalizing, NullItemReplace ]){\n    constructor(){\n        super();\n    }\n}\n\nexport default new TabularPreprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "class",
    "name": "TabularPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platfo"
  },
  {
    "__docId__": 340,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 341,
    "kind": "variable",
    "name": "tabularPreprocessing",
    "memberof": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~tabularPreprocessing",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tabularPreprocessing.js",
    "importStyle": "tabularPreprocessing",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-preprocessing/src/tabularPreprocessing.js~TabularPreprocessing"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "file",
    "name": "causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "content": "export default function TokenizerEN(text){\n    const Re = /[\\s.\"'/\\|;:()\\[\\]\\@\\#\\$\\&]/g;\n    return text.split(Re);\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "TokenizerEN",
    "memberof": "causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-preprocessing/src/tokenizer.en.js~TokenizerEN",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-preprocessing/src/tokenizer.en.js",
    "importStyle": "TokenizerEN",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "content": "/**\n * This ChunkLookupMixins class provide mixins for chunk lookup that first look from the cached chunk then\n * fetch and cache new chunk\n * @class ChunkLookupMixins\n * @extends {  BaseWordEmbeddingClass } \n */\nconst ChunkLookupMixins = ( BaseWordEmbeddingClass )=> class extends BaseWordEmbeddingClass{ \n    \n    \n    get ChunkLookUp(){\n        const Storage = this.Storage;\n        return (chunkId)=>{\n            return new Promise(async (resolve, reject)=>{\n                try{\n                    const ChunkPath = this.embeddingSavePath + chunkId;\n                    let chunkItem = await Storage.getItem(ChunkPath);\n                    let chunk = chunkItem[ChunkPath];\n                    resolve(chunk);\n                }\n                catch(err){\n                    resolve(null);\n                }\n            });\n        };\n    }\n   \n    async updateChunkLookUp(chunkId, chunk){\n        const Storage = this.Storage;\n        const UpdateChunkPath = this.embeddingSavePath + chunkId;\n        this.logger.debug({ UpdateChunkPath });\n        return await Storage.setItem(UpdateChunkPath, chunk);\n    }\n\n    async queryChunk(chunkId){\n        const ChunkUrl = `${this.baseLink}wordvec_chunk_${chunkId}.json`;\n        return await this.query(ChunkUrl);\n    }\n   \n};\nexport default ChunkLookupMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "ChunkLookupMixins",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js",
    "importStyle": "ChunkLookupMixins",
    "description": "This ChunkLookupMixins class provide mixins for chunk lookup that first look from the cached chunk then\nfetch and cache new chunk",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ChunkLookupMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseWordEmbeddingClass "
    ]
  },
  {
    "__docId__": 346,
    "kind": "get",
    "name": "ChunkLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#ChunkLookUp",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "updateChunkLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#updateChunkLookUp",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "chunkId",
        "types": [
          "*"
        ]
      },
      {
        "name": "chunk",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "queryChunk",
    "memberof": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/chunkLookup.mixins.js~ChunkLookupMixins#queryChunk",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "chunkId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/index.js",
    "content": "export { default as ChunkLookupMixins } from './chunkLookup.mixins';\nexport { default as TokenLookUpMixins } from './tokenLookup.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "content": "const TokenLookUpMixins = (BaseWordEmbeddingClass)=> class extends BaseWordEmbeddingClass{ \n    \n    get TokenLookUp(){\n        const MemCache = this.MemCache;\n        return (token)=>{\n            return new Promise(async (resolve, reject)=>{\n                try{\n                    let vec = await MemCache.getItem(this.embeddingSavePath + token);\n                    resolve(vec);\n                }\n                catch(err){\n                    resolve(null);\n                }\n            });\n        };\n    }\n\n    async updateTokenLookUp(token, vec){\n        const MemCache = this.MemCache;\n        MemCache.setItem(this.embeddingSavePath + token, vec);\n    }\n};\nexport default TokenLookUpMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "TokenLookUpMixins",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js",
    "importStyle": "TokenLookUpMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseWordEmbeddingClass"
    ]
  },
  {
    "__docId__": 352,
    "kind": "get",
    "name": "TokenLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins#TokenLookUp",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "updateTokenLookUp",
    "memberof": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/Lookup/tokenLookup.mixins.js~TokenLookUpMixins#updateTokenLookUp",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "vec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "content": "import { Tensor } from 'causal-net.core';\nimport { Platform, Fetch, JSONUtils } from 'causal-net.utils';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { MemCacheMixins, memDownCache } from 'causal-net.memcache';\nimport { default as WordEmbeddingMixins } from './wordEmbedding.mixins';\nimport { default as ChunkLookUpMixins } from './Lookup/chunkLookup.mixins';\nimport { default as TokenLookUpMixins } from './Lookup/tokenLookup.mixins';\nimport { default as Function } from './function';\n\nclass CausalNetEmbedding extends Platform.mixWith(Tensor, \n        [   StorageMixins, \n            MemCacheMixins,\n            TokenLookUpMixins,\n            ChunkLookUpMixins,\n            WordEmbeddingMixins ]){\n    constructor(){\n        super();\n        this.Fetch = Fetch;\n        //store configure\n        this.Storage = indexDBStorage;\n        //store chunks\n        this.MemCache = memDownCache;\n        this.F = new Function();\n        this.embeddingSavePath = '/embedding/';\n        this.embeddingDescriptionPath = this.embeddingSavePath + 'description.json';\n    }\n    \n    get VecSize(){\n        if(!this.vecsize){\n            throw Error('vecsize is not set');\n        }\n        return this.vecsize;\n    }\n    \n    async connect(link, refresh=false){\n        this.baseLink = link;\n        return await this.getDescription(refresh);\n    }\n\n    async getDescription(forceFecth=false){\n        if(!this.description){\n            try{\n                let descriptionItem = await this.Storage.getItem(this.embeddingDescriptionPath);\n                this.description = JSON.parse(descriptionItem[this.embeddingDescriptionPath]);\n            }\n            catch(err){\n                this.logger.debug({'load description from storage': false});\n                this.description = await this.queryDescription();\n            }\n        }\n        if(forceFecth){\n            this.description = await this.queryDescription();\n        }\n        this.TokenChunkIdMapper = (token)=>{\n            return this.F.getIn([token], this.description.chunkLookUp, null);\n        };\n        this.vecsize = this.description.vecsize;//only set from here\n        return this.description;\n    }\n\n    async query(link){\n        if(link.startsWith('http')){\n            return await JSONUtils.fetchJson(link);\n        }\n        else{\n            return await JSONUtils.readJSON(link);\n        }\n    }\n    \n    async queryDescription(){\n        const DescriptionLink = this.baseLink + 'wordvec.description.json';\n        this.logger.debug({ DescriptionLink });\n        var description = this.query(DescriptionLink);\n        await this.Storage.setItem(this.embeddingDescriptionPath, JSON.stringify(description));\n        this.description = description;\n        return this.description;\n    }\n}\n\nexport default new CausalNetEmbedding();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "class",
    "name": "CausalNetEmbedding",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "P"
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "Fetch",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#Fetch",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "MemCache",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#MemCache",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "F",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#F",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "embeddingSavePath",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#embeddingSavePath",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "member",
    "name": "embeddingDescriptionPath",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#embeddingDescriptionPath",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "get",
    "name": "VecSize",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#VecSize",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#connect",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "link",
        "types": [
          "*"
        ]
      },
      {
        "name": "refresh",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "member",
    "name": "baseLink",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#baseLink",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "getDescription",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#getDescription",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "forceFecth",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "member",
    "name": "description",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#description",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 370,
    "kind": "member",
    "name": "TokenChunkIdMapper",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#TokenChunkIdMapper",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "member",
    "name": "vecsize",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#vecsize",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "query",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#query",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "link",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "queryDescription",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding#queryDescription",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "variable",
    "name": "causalNetEmbedding",
    "memberof": "causality/packages/causality-representation/src/causalNetEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/causalNetEmbedding.js~causalNetEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/causalNetEmbedding.js",
    "importStyle": "causalNetEmbedding",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-representation/src/causalNetEmbedding.js~CausalNetEmbedding"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/function.js",
    "content": "import { Function as BaseFunction } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { default as WordEmbeddingFunctionMixins } from './wordEmbeddingFunction.mixins';\n/**\n * This Function class provides methods for common used ultilities function\n * @export\n * @class Function\n * @extends BaseFunction\n */\nexport default class Function extends Platform.mixWith(BaseFunction, \n        [WordEmbeddingFunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-representation/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/function.js",
    "importStyle": "Function",
    "description": "This Function class provides methods for common used ultilities function",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Function"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 378,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 379,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/index.js",
    "content": "export { default as RepresentationMixins } from './representation.mixins';\nexport { default as causalNetEmbedding } from './causalNetEmbedding';\nexport { default as universalEmbedding } from './universalEmbedding';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/representation.mixins.js",
    "content": "import { Assert } from 'causal-net.utils';\nconst RepresentationMixins = (BaseTensorClass)=> class extends BaseTensorClass{ \n    get Representation(){\n        if(!this.representation){\n            throw Error('representation is not set');\n        }\n        return this.representation;\n    }\n    set Representation(representation){\n        if(!representation){\n            throw Error(`expect representation instance, got ${embedding}`);\n        }\n        this.representation = representation;\n    }\n\n    async connect(){\n        let configureLink = this.representationConfigureLink;\n        if(super.connect){\n            super.connect();\n        }\n        this.logger.log(`representation connect to ${configureLink}`);\n        await this.Representation.connect(configureLink);\n    }\n    \n    setRepresentationByConfig(netConfig){\n        let configureLink = netConfig.Representation;\n        Assert.beInstanceOf(configureLink, String);\n        this.representationConfigureLink = configureLink;\n    }\n};\nexport default RepresentationMixins;    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/representation.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "class",
    "name": "RepresentationMixins",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/representation.mixins.js",
    "importStyle": "RepresentationMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseTensorClass"
    ]
  },
  {
    "__docId__": 382,
    "kind": "get",
    "name": "Representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#Representation",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "set",
    "name": "Representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#Representation",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "representation",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#representation",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#connect",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "setRepresentationByConfig",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#setRepresentationByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "representationConfigureLink",
    "memberof": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins",
    "static": false,
    "longname": "causality/packages/causality-representation/src/representation.mixins.js~RepresentationMixins#representationConfigureLink",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/universalEmbedding.js",
    "content": "import * as use from '@tensorflow-models/universal-sentence-encoder';\nimport { Platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nclass UniversialEmbedding extends Platform.mixWith(Tensor, []){\n    \n    constructor(){\n        super();\n        /**\n         * @private { TensorModel } \n         */\n        this.use = use;\n        this.model = null;\n    }\n    \n    async connect(){\n        \n        this.use.bind(this);\n        this.model = await this.use.load();\n        return this;\n    }\n\n    async sentenceEncode(sentences){\n        if(!this.model){\n            throw Error(`model is not connect`);\n        }\n        let embeddings = await this.model.embed(sentences);\n        return embeddings;\n    }\n}\nexport default new UniversialEmbedding();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/universalEmbedding.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "class",
    "name": "UniversialEmbedding",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/universalEmbedding.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "pseudoExport": true,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(Tensor, [])"
  },
  {
    "__docId__": 390,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 391,
    "kind": "member",
    "name": "use",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#use",
    "access": "private",
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "model",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#model",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#connect",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "sentenceEncode",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding#sentenceEncode",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "sentences",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "variable",
    "name": "universialEmbedding",
    "memberof": "causality/packages/causality-representation/src/universalEmbedding.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/universalEmbedding.js~universialEmbedding",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/universalEmbedding.js",
    "importStyle": "universialEmbedding",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-representation/src/universalEmbedding.js~UniversialEmbedding"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "content": "const WordEmbeddingMixins = (BaseEmbeddingClass)=> class extends BaseEmbeddingClass{ \n    /**\n     * return default replacement for unknown vec. Currently it is set to zeros\n     * @returns [ Array ] zero vecs\n     */\n    unknowVec(){\n        return this.F.zeroVec(this.VecSize);\n    }\n    \n    /**\n     * return the vectors of tokenized sentences\n     * This function require sentence to be tokenized via preprocessing\n     * @param { Array } tokens - array of string tokens of sentence\n     * @returns { Tensor } encoded sentences\n     */\n    async sentenceEncode(sentences){\n        const T = this.T;\n        let encodedSentences = [];\n        for(let tokens of sentences){\n            let vecs = await this.transform(tokens);\n            let encode = await T.tensor(vecs).mean(0);\n            encodedSentences.push(encode);\n        }\n        return T.stack(encodedSentences);\n    }\n    \n    async transform(tokens){\n        const TokenLookUp = this.TokenLookUp, ChunkLookUp = this.ChunkLookUp;\n        \n        let vecs = [], missCacheTokens=[];\n        for(let token of tokens){\n            let vec = await TokenLookUp(token);\n            this.logger.debug({[token]: vec});\n            if(vec === null){\n                missCacheTokens = [...missCacheTokens, token];\n            }\n            vecs = [...vecs, token];\n        }\n        if(missCacheTokens.length === 0){\n            return vecs;\n        }\n        \n        let {tokenChunkIds, chunkIds} = \n            this.F.mapTokenToChunkIds(missCacheTokens, this.TokenChunkIdMapper);\n        this.logger.debug({tokenChunkIds, chunkIds});\n        let masterchunk = {};\n        for(let chunkId of chunkIds){\n            let chunk = (chunkId === null)?{}:await ChunkLookUp(chunkId);\n            if(chunk === null){\n                this.logger.debug({ chunkId });\n                chunk = await this.queryChunk(chunkId);\n                this.logger.debug({ chunk });\n                await this.updateChunkLookUp(chunkId, chunk);\n            }\n            masterchunk = {...masterchunk, ...chunk};\n        }\n\n        let finalVecs = vecs.reduce((finalVecs, vec)=>{\n                            if(typeof(vec) === \"string\"){\n                                let _vec = masterchunk[vec];\n                                if(_vec === undefined){\n                                    _vec = this.unknowVec();\n                                }\n                                finalVecs.push(_vec);\n                            }\n                            else{\n                                finalVecs.push(vec);\n                            }\n                            return finalVecs;\n                        }, []);\n        return finalVecs;\n    }   \n};\nexport default WordEmbeddingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "WordEmbeddingMixins",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/wordEmbedding.mixins.js",
    "importStyle": "WordEmbeddingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseEmbeddingClass"
    ]
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "unknowVec",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#unknowVec",
    "access": "public",
    "description": "return default replacement for unknown vec. Currently it is set to zeros",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "[ Array ] zero vecs"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "[ Array ] zero vecs"
    },
    "params": []
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "sentenceEncode",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#sentenceEncode",
    "access": "public",
    "description": "return the vectors of tokenized sentences\nThis function require sentence to be tokenized via preprocessing",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Tensor } encoded sentences"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "array of string tokens of sentence"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Tensor "
      ],
      "spread": false,
      "description": "encoded sentences"
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "transform",
    "memberof": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbedding.mixins.js~WordEmbeddingMixins#transform",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "file",
    "name": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js",
    "content": "const WordEmbeddingFunctionMixins = (BaseFunctionClass) => class extends BaseFunctionClass{\n    mapTokenToChunkIds(tokens, mapper){\n        const R = this.R;\n        const TokenChunkIdMapper = mapper;\n        let tokenChunkMap = tokens.map( t => {\n            let chunkId = TokenChunkIdMapper(t);\n            return [[t, chunkId], chunkId]; \n        });\n        let [tokenChunkIds, _chunkIds] = this.unzip(tokenChunkMap);\n        let chunkIds = R.uniq(_chunkIds);\n        console.log({chunkIds, tokenChunkIds});\n        return {tokenChunkIds, chunkIds};\n    }\n\n    zeroVec(vecSize){\n        return this.R.map(()=>0,this.R.range(0, vecSize));\n    };\n};\nexport default WordEmbeddingFunctionMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 403,
    "kind": "class",
    "name": "WordEmbeddingFunctionMixins",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js~WordEmbeddingFunctionMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js",
    "importStyle": "WordEmbeddingFunctionMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseFunctionClass"
    ]
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "mapTokenToChunkIds",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js~WordEmbeddingFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js~WordEmbeddingFunctionMixins#mapTokenToChunkIds",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "*"
        ]
      },
      {
        "name": "mapper",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"tokenChunkIds\": *, \"chunkIds\": *}"
      ]
    }
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "zeroVec",
    "memberof": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js~WordEmbeddingFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-representation/src/wordEmbeddingFunction.mixins.js~WordEmbeddingFunctionMixins#zeroVec",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "vecSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "content": "import { Function } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport random from 'random';\nimport { default as SubSamplingMixins } from './subSampling.mixins';\nimport { default as NegSamplingMixins } from './negSampling.mixins';\n\n/**\n * This CausalNetSampling class provides sampling methods\n * mixwith:\n * [ SubSamplingMixins, NegSamplingMixins ]\n * @class CausalNetSampling\n * @extends Function\n * @example\n * [EXAMPLE ../examples/causalNetSampling.babel.js]\n */\nclass CausalNetSampling extends Platform.mixWith(Function, \n    [ SubSamplingMixins, NegSamplingMixins ]){\n    constructor(){\n        super();\n        this.Random = random;    \n    }\n}\n\nexport default new CausalNetSampling();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/causalNetSampling.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 407,
    "kind": "class",
    "name": "CausalNetSampling",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/causalNetSampling.js",
    "importStyle": null,
    "description": "This CausalNetSampling class provides sampling methods\nmixwith:\n[ SubSamplingMixins, NegSamplingMixins ]",
    "examples": [
      "import { causalNetSampling } from 'causal-net.sampling';\nimport {termLogger as Logger} from 'causal-net.log';\nlet numSamples = 4;\nlet idSize = 10;//id list: [0,1,2,3,4,5,6,7,8,9]\nLogger.log(causalNetSampling.subSampling(numSamples, idSize));\n\nnumSamples = 4;\nlet positiveSampleId = [0, 1];\n//ids: [0, 1, 2, 3];\nlet probIds = [0.9, 0.9, 0.3, 0.7];\nlet samples = causalNetSampling.negSampling(numSamples, positiveSampleId, probIds);\ntermLogger.log({ samples });"
    ],
    "lineNumber": 27,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CausalNetSampling"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 408,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 409,
    "kind": "member",
    "name": "Random",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling",
    "static": false,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling#Random",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 410,
    "kind": "variable",
    "name": "causalNetSampling",
    "memberof": "causality/packages/causality-sampling/src/causalNetSampling.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/causalNetSampling.js~causalNetSampling",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/causalNetSampling.js",
    "importStyle": "causalNetSampling",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-sampling/src/causalNetSampling.js~CausalNetSampling"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/index.js",
    "content": "export { default as causalNetSampling } from './causalNetSampling';\nexport { default as SamplingMixins } from './sampling.mixins';\n\nexport { default as SubSamplingMixins } from './subSampling.mixins';\nexport { default as NegSamplingMixins } from './negSampling.mixins';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/negSampling.mixins.js",
    "content": "import random from \"random/dist/random\";\n\nconst NegativeSamplingMixins = (BaseSamplingClass)=> class extends BaseSamplingClass{\n    /**\n     * Perform negative sampling given the select prob of ids and list of positive samples\n     * @param { Number } negativeSize - size to sample\n     * @param { Array } positiveSamples - Array of possitive Ids\n     * @param { Array } candidateProbs - Array of probablity of candidate Ids\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    negSampling(negativeSize, positiveSamples, candidateProbs, replacable=true){\n        const R = this.R, Random = this.Random;\n        if(R.any((v)=> !R.type(Number,v) || v > 1 || v < 0, candidateProbs)){\n            throw Error(`${JSON.stringify(candidateProbs)} is not allow`);\n        }\n        let seletionProbs = R.reduce((selectionProbs, pidx)=>{\n                                selectionProbs[pidx] = Infinity;//positive candidate never be choosed\n                                return selectionProbs;\n                            }, R.clone(candidateProbs), positiveSamples);\n        let samples = [], takenIdxs = R.clone(seletionProbs);\n        const GenNewCandidateIdx = ()=>Random.int(0, seletionProbs.length-1);\n        const SelectIfHighProb = (prob)=>{\n            let rand = Random.float();\n            return rand>prob;\n        };\n        while(samples.length < negativeSize){\n            let idx = GenNewCandidateIdx();\n            let selected = SelectIfHighProb(seletionProbs[idx]);\n            if(!selected){\n                continue;\n            }\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, idx];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default NegativeSamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/negSampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 413,
    "kind": "class",
    "name": "NegativeSamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/negSampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/negSampling.mixins.js",
    "importStyle": "NegativeSamplingMixins",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSamplingClass"
    ]
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "negSampling",
    "memberof": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/negSampling.mixins.js~NegativeSamplingMixins#negSampling",
    "access": "public",
    "description": "Perform negative sampling given the select prob of ids and list of positive samples",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array of sampled Ids"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "negativeSize",
        "description": "size to sample"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "positiveSamples",
        "description": "Array of possitive Ids"
      },
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "candidateProbs",
        "description": "Array of probablity of candidate Ids"
      },
      {
        "nullable": null,
        "types": [
          " Boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "replacable",
        "description": "if true, no duplicated sampling Id returned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of sampled Ids"
    }
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/sampling.mixins.js",
    "content": "import { Function } from 'causal-net.core';\nimport { Assert } from 'causal-net.utils';\n/**\n * This SamplingMixins class provide mixins for PipelineClass or DatasetClass\n * @example\n * [EXAMPLE ../examples/sampling.mixins.babel.js]\n */\nconst SamplingMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    /**\n     * get current random instance\n     */\n    get Sampling(){\n        if(!this.sampling){\n            throw Error(`Sampling is not set`);\n        }\n        return this.sampling;\n    }\n    \n    /**\n     * set Sampling instance\n     * @readonly\n     */\n    set Sampling(sampling){\n        Assert.beInstanceOf(sampling, Function);\n        this.sampling = sampling;\n    }\n};\n\nexport default SamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/sampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "class",
    "name": "SamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/sampling.mixins.js",
    "importStyle": "SamplingMixins",
    "description": "This SamplingMixins class provide mixins for PipelineClass or DatasetClass",
    "examples": [
      "import { SamplingMixins, causalNetSampling } from 'causal-net.sampling';\nimport { Platform } from 'causal-net.utils';\nimport { Tensor, Function } from 'causal-net.core';\nconsole.log(causalNetSampling instanceof Function);\nclass SimplePipeline extends Platform.mixWith(Tensor, [SamplingMixins]){\n    constructor(){\n        super();\n        this.Sampling = causalNetSampling;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Sampling);"
    ],
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "BasePipelineClass"
    ]
  },
  {
    "__docId__": 417,
    "kind": "get",
    "name": "Sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#Sampling",
    "access": "public",
    "description": "get current random instance",
    "lineNumber": 23,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "set",
    "name": "Sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#Sampling",
    "access": "public",
    "description": "set Sampling instance",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "sampling",
    "memberof": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins",
    "static": false,
    "longname": "causality/packages/causality-sampling/src/sampling.mixins.js~SamplingMixins#sampling",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "causality/packages/causality-sampling/src/subSampling.mixins.js",
    "content": "const SubSamplingMixins = (BaseSamplingClass) => class extends BaseSamplingClass{\n    /**\n     * Perform uniform sample a sub set of Ids given the candidate list\n     * @param { Number } samplingSize\n     * @param { Array|Number } candidateList - list of candidates or size of candidate list\n     * @param { Boolean } [replacable=true] - if true, no duplicated sampling Id returned\n     * @returns { Array } array of sampled Ids\n     */\n    subSampling(samplingSize, candidateList, replacable=true){\n        const R = this.R, Random = this.Random;\n        let candidates = Array.isArray(candidateList)?R.clone(candidateList):R.range(0, candidateList);\n        if(candidates.length === 0){\n            throw Error('candidate length should be positive');\n        }\n        let samples = [], takenIdxs = R.clone(candidates);\n        const GenNewCandidateIdx = ()=>Random.int(0, candidates.length-1);\n        while(samples.length < samplingSize){\n            let idx = GenNewCandidateIdx();\n            if(!replacable && takenIdxs[idx]===null){\n                continue;\n            }\n            samples = [...samples, candidates[idx]];\n            if(!replacable){\n                takenIdxs[idx]=null;//non replaceable\n            }\n        }    \n        return samples;\n    }\n};\nexport default SubSamplingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/src/subSampling.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "class",
    "name": "SubSamplingMixins",
    "memberof": "causality/packages/causality-sampling/src/subSampling.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-sampling/src/subSampling.mixins.js",
    "importStyle": "SubSamplingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseSamplingClass"
    ]
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "subSampling",
    "memberof": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-sampling/src/subSampling.mixins.js~SubSamplingMixins#subSampling",
    "access": "public",
    "description": "Perform uniform sample a sub set of Ids given the candidate list",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Array } array of sampled Ids"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Number "
        ],
        "spread": false,
        "optional": false,
        "name": "samplingSize",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Array",
          "Number "
        ],
        "spread": false,
        "optional": false,
        "name": "candidateList",
        "description": "list of candidates or size of candidate list"
      },
      {
        "nullable": null,
        "types": [
          " Boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "replacable",
        "description": "if true, no duplicated sampling Id returned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Array "
      ],
      "spread": false,
      "description": "array of sampled Ids"
    }
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/CSVFile.mixins.js",
    "content": "import { CSVUtils } from 'causal-net.utils';\n/** \n * This CSVFileMixins class provide mixins for handle read/write/fetch csv content\n * @class CSVFileMixins\n * @experiment\n * @extends { StorageClass } \n */\nconst CSVFileMixins = (StorageClass)=> class extends StorageClass{\n    /**\n     * Read CSV content as item array given the file path\n     * @param { String } filePath - full file path \n     * @returns { Promise } Array content promise \n     */\n    async readCSVFile(filePath){\n        return await this.readFile(filePath);\n    }\n    /**\n     * @param  {} filePath\n     * @param  {} data\n     */\n    async writeCSVFile(filePath, parsedData){\n        return await this.writeFile(filePath, parsedData);\n    }\n\n    /**\n     * Fetch CSV file, transform to get raw pixel data and save to file at the filePath\n     * @param { Url } url - url for png file\n     * @param { String } filePath - file name to save content\n     * @returns { Promise } Array content promiser \n     */\n    async fetchCSVFile(url, filePath){\n        let data = await CSVUtils.fetchCSV(url);\n        return await this.writePNGFile(filePath, data);\n    }\n};\nexport default CSVFileMixins;\n    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/CSVFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "class",
    "name": "CSVFileMixins",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/CSVFile.mixins.js",
    "importStyle": "CSVFileMixins",
    "description": "This CSVFileMixins class provide mixins for handle read/write/fetch csv content",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CSVFileMixins"
      },
      {
        "tagName": "@experiment",
        "tagValue": ""
      }
    ],
    "interface": false,
    "extends": [
      " StorageClass "
    ]
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "readCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#readCSVFile",
    "access": "public",
    "description": "Read CSV content as item array given the file path",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promise "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "full file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promise"
    }
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "writeCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#writeCSVFile",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 427,
    "kind": "method",
    "name": "fetchCSVFile",
    "memberof": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/CSVFile.mixins.js~CSVFileMixins#fetchCSVFile",
    "access": "public",
    "description": "Fetch CSV file, transform to get raw pixel data and save to file at the filePath",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Url "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for png file"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "file name to save content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 428,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/PNGFile.mixins.js",
    "content": "import { PNGUtils } from 'causal-net.utils';\n/**\n * This LevelJSMixins class provide mixins for handle read/write/fetch png content\n * @class PNGFileMixins\n * @extends {  BaseStorage } \n */\nconst PNGFileMixins = (StorageClass)=> class extends StorageClass{\n    /**\n     * Read PNG pixel data given the file path\n     * @param { String } filePath - full file path \n     * @returns { Promise } Array content promiser \n     */\n    async readPNGFile(filePath){\n        return await this.readFile(filePath, true);\n    }\n    /**\n     * write raw pixel data as Array to file at filePath\n     * @param  { String } filePath\n     * @param  { Array|ArrayBuffer } imgBuffer\n     * @returns { Promise } Array content promiser \n     */\n    async writePNGFile(filePath, imgBuffer){\n        return await this.writeFile(filePath, imgBuffer);\n    }\n    /**\n     * Fetch PNG file, transform to get raw pixel data and save to file at the filePath\n     * @param { Url } url - url for png file\n     * @param { String } filePath - file name to save content\n     * @returns { Promise } Array content promiser \n     */\n    async fetchPNGFile(url, filePath){\n        let data = await PNGUtils.fetchPNG(url);\n        return await this.writePNGFile(filePath, data);\n    }\n};\nexport default PNGFileMixins;\n    ",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/PNGFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 429,
    "kind": "class",
    "name": "PNGFileMixins",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/PNGFile.mixins.js",
    "importStyle": "PNGFileMixins",
    "description": "This LevelJSMixins class provide mixins for handle read/write/fetch png content",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PNGFileMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "readPNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#readPNGFile",
    "access": "public",
    "description": "Read PNG pixel data given the file path",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "full file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 431,
    "kind": "method",
    "name": "writePNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#writePNGFile",
    "access": "public",
    "description": "write raw pixel data as Array to file at filePath",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Array",
          "ArrayBuffer "
        ],
        "spread": false,
        "optional": false,
        "name": "imgBuffer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "fetchPNGFile",
    "memberof": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/PNGFile.mixins.js~PNGFileMixins#fetchPNGFile",
    "access": "public",
    "description": "Fetch PNG file, transform to get raw pixel data and save to file at the filePath",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } Array content promiser "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Url "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for png file"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "file name to save content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "Array content promiser"
    }
  },
  {
    "__docId__": 433,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/baseStorage.js",
    "content": "import levelup from 'levelup';\n/**\n * This abstract BaseStorage class is use to define new storage class.\n * It provide wrapper for [levelup](https://www.npmjs.com/package/levelup).\n * @class\n */\nclass BaseStorage{\n    constructor(){\n        this.levelup = levelup;\n        this.storage = null;\n    }\n\n    /**\n     * The extended class must implement this method to handle each store case.\n     * @memberof BaseStorage\n     */\n    connect(){\n        throw Error('implement required');\n    }\n\n    /**\n     * Get the core Storage, throw error if no storage found.\n     * @readonly\n     * @memberof BaseStorage\n     */\n    get CoreStorage(){\n        if(this.storage === null){\n            throw Error('storage is not connected');\n        }\n        return this.storage;\n    }\n}\n\nexport default BaseStorage;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/baseStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 434,
    "kind": "class",
    "name": "BaseStorage",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/baseStorage.js",
    "importStyle": "BaseStorage",
    "description": "This abstract BaseStorage class is use to define new storage class.\nIt provide wrapper for [levelup](https://www.npmjs.com/package/levelup).",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 435,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "levelup",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "static": false,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage#levelup",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "storage",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "static": false,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage#storage",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage#connect",
    "access": "public",
    "description": "The extended class must implement this method to handle each store case.",
    "lineNumber": 17,
    "params": [],
    "return": null
  },
  {
    "__docId__": 439,
    "kind": "get",
    "name": "CoreStorage",
    "memberof": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/baseStorage.js~BaseStorage#CoreStorage",
    "access": "public",
    "description": "Get the core Storage, throw error if no storage found.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\n/**\n * This Function class provide common used methods for processing storage content.\n * @class Function\n * @extends { BaseFunction }\n */\nclass Function extends BaseFunction{\n    constructor(){\n        super();\n    }\n}\nexport default Function;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 441,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/packages/causality-storage/src/function.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/function.js",
    "importStyle": "Function",
    "description": "This Function class provide common used methods for processing storage content.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Function"
      }
    ],
    "interface": false,
    "extends": [
      " BaseFunction "
    ]
  },
  {
    "__docId__": 442,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/index.js",
    "content": "export { default as indexDBStorage } from './indexDBStorage';\nexport { default as StorageMixins } from './storage.mixins';\n\nexport { default as BaseStorage } from './baseStorage';\nexport { default as PNGFileMixins } from './PNGFile.mixins';\nexport { default as CSVFileMixins } from './CSVFile.mixins';\nexport { default as TextFileMixins } from './textFile.mixins';\n\n\n\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.js",
    "content": "import { Platform } from 'causal-net.utils';\nimport { default as BaseStorage } from './baseStorage';\nimport { default as PNGFileMixins } from './PNGFile.mixins';\nimport { default as TextFileMixins } from './textFile.mixins';\nimport { default as CSVFileMixins } from './CSVFile.mixins';\nimport { default as LevelDownMixins } from './indexDBStorage.mixins.node';\nimport { default as LevelJSMixins } from './indexDBStorage.mixins.web';\n\n/**\n * This indexDBStorage class is the default consistent storage based on \n * [leveldown](https://www.npmjs.com/package/leveldown) storage \n * with support file extends: png, csv, text by those corresponding mixins.\n * mixWith:\n *  - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n *  - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]\n * @class IndexDBStorage\n * @extends {  BaseStorage } \n * @example\n * [EXAMPLE ../examples/storage.babel.js]\n */\nclass IndexDBStorage extends Platform.mixWith( BaseStorage, \n                       { 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n                          'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins] } ){\n    /**\n     * Standardize the given name path\n     * @private\n     * @param { String } key\n     * @returns\n     * @memberof IndexDBStorage\n     */\n    reformateName(key){\n        key = key.replace(/\\/{2,}/g,'/');\n        if(key[0]==='/'){\n            return key;\n        }\n        else{\n            return '/' + key;\n        }\n    };\n    \n    /**\n     * Get item given the key name, reject if key not existed\n     * @param { String } key - key name\n     * @param { Boolean } [asBuffer=false] - if true, return value as raw buffer object\n     * @returns { Promise } item promise\n     * @memberof IndexDBStorage\n     */\n    async getItem(key, asBuffer=false){\n        return new Promise((resolve, reject)=>{\n            this.storage.get(key, {asBuffer}, (err, data)=>{\n                if(err){\n                    console.error({err});\n                    reject('error read');\n                }\n                else{\n                    resolve({[key]: data});\n                }\n            });\n        });\n    }\n    \n    /**\n     * Set new storage item with the given key, value as buffer\n     * @param { String } key - key name\n     * @param { Buffer } value - value\n     * @returns { Promise } key promise\n     * @memberof IndexDBStorage\n     */\n    async setItem(key, data){\n        \n        return new Promise((resolve, reject)=>{\n            key = this.reformateName(key);\n            this.storage.put(key, data, (err)=>{\n                if(err){\n                    console.error({err});\n                    reject('error write');\n                }\n                else{\n                    resolve(key);\n                }\n            });\n        });\n    }\n    /**\n     * Delete item given key\n     * @param { String } key\n     * @returns { Promise } key promise\n     * @memberof IndexDBStorage\n     */\n    async delItem(key){\n        return new Promise((resolve, reject)=>{\n            key = this.reformateName(key);\n            this.storage.del(key, (err)=>{\n                if(err){\n                    console.error({err});\n                    reject('error write');\n                }\n                else{\n                    resolve(key);\n                }\n            });\n        });\n    }\n\n    /**\n     * Batch operation with Array of ops\n     * @param { String } key\n     * @returns { Promise } key promise\n     * @memberof IndexDBStorage\n     * @example\n     *  let ops = [\n     *   { type: 'put', key: 'temp', value: '123445' },\n     *   { type: 'del', key: 'temp' }];\n     *  //batch does not support 'get' type\n     *  let batchResult = await indexDBStorage.batch(ops);\n     */\n    async batch(ops){\n        return new Promise((resolve, reject)=>{\n            this.storage.batch(ops, (err, data)=>{\n                if(err){\n                    console.error({err});\n                    reject('error ops');\n                }\n                else{\n                    resolve(ops);\n                }\n            });\n        });\n    }\n\n    /**\n     * Delete item by the given file path, reject with error if not existed\n     * @param { String } filePath\n     * @returns { Promise } filePath promise\n     * @memberof IndexDBStorage\n     */\n    async deleteItem(filePath){\n        return new Promise((resolve, reject)=>{\n            this.storage.del(filePath, (err)=>{\n                if(err){\n                    console.error({err});\n                    reject('error ops');\n                }\n                else{\n                    resolve(filePath);\n                }\n            });\n        });\n    }\n    /**\n     * File item with match the file path prefix pattern and delete all\n     * return list of deleted files\n     * @param { String } filePath - pattern of file path\n     * @returns { Promise } deleted files list promise\n     * @memberof IndexDBStorage\n     */\n    async deleteFileByPrefix(filePath){\n        const DelOp = (key)=>({type: 'del', key: key});\n        let fileList = await this.getFileList(filePath);\n        let delFileOps = fileList.map(f=>DelOp(f));\n        return await this.batch(delFileOps);\n    }\n\n    /**\n     * Create matching regex test given the name prefix pattern\n     * @param { String } namePattern - the pattern to be checked\n     * @returns { Function } pattern matching for input filename\n     * @memberof IndexDBStorage\n     */\n    createCheckFileNameFn(namePattern){\n        var regex = new RegExp(`^${namePattern}.*`,'g');\n        return (fileName)=>fileName.match(regex) || [];\n    }\n    /**\n     * Get files inside storage that match the file path pattern\n     * @param { String } [filePath='/'] - file path prefix pattern\n     * @returns { Promise } file list promise\n     * @memberof IndexDBStorage\n     */\n    async getFileList(filePath='/'){\n        const NameTester = this.createCheckFileNameFn(filePath);\n        return new Promise((resolve, reject)=>{\n            let fileList = [];\n            this.storage.createKeyStream()\n                .on('data', (key) =>{\n                    key = key.toString('utf8');\n                    if(NameTester(key).length===1){\n                        fileList.push(key);\n                    }\n                })\n                .on('close', () => resolve(fileList) )\n                .on('end',  () => resolve(fileList) )\n                .on('error', (err) =>{ \n                    reject(err);\n                });\n        });\n    }\n}\n\nexport default new IndexDBStorage();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "class",
    "name": "IndexDBStorage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.js",
    "importStyle": null,
    "description": "This indexDBStorage class is the default consistent storage based on \n[leveldown](https://www.npmjs.com/package/leveldown) storage \nwith support file extends: png, csv, text by those corresponding mixins.\nmixWith:\n - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]",
    "examples": [
      "import { indexDBStorage } from 'causal-net.storage';\n(async ()=>{\n    await indexDBStorage.writeFile('/temp','12345');\n    let content  = await indexDBStorage.readFile('temp');\n    console.log({content});\n    \n    //get file list\n    let listFiles = await indexDBStorage.getFileList('/');\n    console.log({listFiles});\n    \n    //fetch png image and save pixel data into file\n    const url = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    await indexDBStorage.fetchFile(url, 'icon');\n    const pixelArray = await indexDBStorage.readFile('icon');\n    console.log({ pixelArray });\n\n    let ops = [\n        { type: 'put', key: 'temp', value: '123445' },\n        { type: 'del', key: 'temp' }];\n    //batch does not support 'get' type\n    let batchResult = await indexDBStorage.batch(ops);\n    console.log({batchResult});\n})();"
    ],
    "lineNumber": 44,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "IndexDBStorage"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 446,
    "kind": "method",
    "name": "reformateName",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#reformateName",
    "access": "private",
    "description": "Standardize the given name path",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "method",
    "name": "getItem",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#getItem",
    "access": "public",
    "description": "Get item given the key name, reject if key not existed",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } item promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name"
      },
      {
        "nullable": null,
        "types": [
          " Boolean "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "asBuffer",
        "description": "if true, return value as raw buffer object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "item promise"
    }
  },
  {
    "__docId__": 448,
    "kind": "method",
    "name": "setItem",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#setItem",
    "access": "public",
    "description": "Set new storage item with the given key, value as buffer",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "key name"
      },
      {
        "nullable": null,
        "types": [
          " Buffer "
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "key promise"
    }
  },
  {
    "__docId__": 449,
    "kind": "method",
    "name": "delItem",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#delItem",
    "access": "public",
    "description": "Delete item given key",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "key promise"
    }
  },
  {
    "__docId__": 450,
    "kind": "method",
    "name": "batch",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#batch",
    "access": "public",
    "description": "Batch operation with Array of ops",
    "examples": [
      " let ops = [\n  { type: 'put', key: 'temp', value: '123445' },\n  { type: 'del', key: 'temp' }];\n //batch does not support 'get' type\n let batchResult = await indexDBStorage.batch(ops);"
    ],
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } key promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "key promise"
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "deleteItem",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#deleteItem",
    "access": "public",
    "description": "Delete item by the given file path, reject with error if not existed",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } filePath promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "filePath promise"
    }
  },
  {
    "__docId__": 452,
    "kind": "method",
    "name": "deleteFileByPrefix",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#deleteFileByPrefix",
    "access": "public",
    "description": "File item with match the file path prefix pattern and delete all\nreturn list of deleted files",
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } deleted files list promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "pattern of file path"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "deleted files list promise"
    }
  },
  {
    "__docId__": 453,
    "kind": "method",
    "name": "createCheckFileNameFn",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#createCheckFileNameFn",
    "access": "public",
    "description": "Create matching regex test given the name prefix pattern",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Function } pattern matching for input filename"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "namePattern",
        "description": "the pattern to be checked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Function "
      ],
      "spread": false,
      "description": "pattern matching for input filename"
    }
  },
  {
    "__docId__": 454,
    "kind": "method",
    "name": "getFileList",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage#getFileList",
    "access": "public",
    "description": "Get files inside storage that match the file path pattern",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } file list promise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'/'",
        "defaultRaw": "'/'",
        "name": "filePath",
        "description": "file path prefix pattern"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "file list promise"
    }
  },
  {
    "__docId__": 455,
    "kind": "variable",
    "name": "indexDBStorage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.js~indexDBStorage",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.js",
    "importStyle": "indexDBStorage",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-storage/src/indexDBStorage.js~IndexDBStorage"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "content": "/**\n * This LevelDownMixins class provide mixins for implement indexDB-based storage class \n * with [leveldown](https://www.npmjs.com/package/leveldown) storage on node environment\n * @class LevelDownMixins\n * @extends {  StorageClass } \n */\nconst LevelDownMixins = (StorageClass)=> class extends StorageClass{ \n    constructor(){\n        super();\n        this.connect('data');\n    }\n    /**\n     * This method must be called to connect with leveldown storage once instance create\n     * @param { String } storageName - storage name\n     */\n    connect(storageName){\n        var leveldown = require('leveldown');\n        this.storage = this.levelup(leveldown(storageName));\n    }\n};\nexport default LevelDownMixins;\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 457,
    "kind": "class",
    "name": "LevelDownMixins",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.mixins.node.js",
    "importStyle": "LevelDownMixins",
    "description": "This LevelDownMixins class provide mixins for implement indexDB-based storage class \nwith [leveldown](https://www.npmjs.com/package/leveldown) storage on node environment",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LevelDownMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  StorageClass "
    ]
  },
  {
    "__docId__": 458,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#connect",
    "access": "public",
    "description": "This method must be called to connect with leveldown storage once instance create",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "storageName",
        "description": "storage name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "storage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.node.js~LevelDownMixins#storage",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "content": "/**\n * This LevelJSMixins class provide mixins for implement indexDB-based storage class \n * with [level-js](https://www.npmjs.com/package/level-js) storage on web environment\n * @class LevelDownMixins\n * @extends {  StorageClass } \n */\nconst LevelJSMixins = (StorageClass)=> class extends StorageClass{ \n    constructor(){\n        super();\n        this.connect('data');\n    }\n    /**\n     * This method must be called to connect with level-js storage once instance create\n     * @param { String } storageName - storage name\n     */\n    connect(storageName){\n        var leveljs = require('level-js');\n        this.storage = this.levelup(leveljs(storageName));\n    }\n};\nexport default LevelJSMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 462,
    "kind": "class",
    "name": "LevelJSMixins",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/indexDBStorage.mixins.web.js",
    "importStyle": "LevelJSMixins",
    "description": "This LevelJSMixins class provide mixins for implement indexDB-based storage class \nwith [level-js](https://www.npmjs.com/package/level-js) storage on web environment",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "LevelDownMixins"
      }
    ],
    "interface": false,
    "extends": [
      "  StorageClass "
    ]
  },
  {
    "__docId__": 463,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 464,
    "kind": "method",
    "name": "connect",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#connect",
    "access": "public",
    "description": "This method must be called to connect with level-js storage once instance create",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "storageName",
        "description": "storage name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "storage",
    "memberof": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/indexDBStorage.mixins.web.js~LevelJSMixins#storage",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/storage.mixins.js",
    "content": "import { default as BaseStorage } from './baseStorage';\nimport { Assert } from 'causal-net.utils';\n/**\n * This indexDBStorage class is the default consistent storage based on \n * [leveldown](https://www.npmjs.com/package/leveldown) storage \n * with support file extends: png, csv, text by those corresponding mixins.\n * mixWith:\n *  - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n *  - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]\n * @class IndexDBStorage\n * @extends {  BaseStorage } \n * @example\n * [EXAMPLE ../examples/storage.mixins.babel.js]\n */\nconst StorageMixins = (BasePipelineClass)=> class extends BasePipelineClass{\n    /**\n     * return file list of current storage\n     * @returns\n     */\n    async storageSummary(){\n        let storage = this.Storage;\n        return await this.storage.getFileList();\n    }\n    \n    /**\n     * set storage instance to pipeline\n     * @param { Object } - storage instance\n     */\n    set Storage(storage){\n        Assert.beInstanceOf(storage, BaseStorage);\n        this.storage = storage;\n    }\n    \n    /**\n     * get current storage\n     * @readonly\n     */\n    get Storage(){\n        if(!this.storage){\n            throw Error('storage is not set');\n        }\n        return this.storage;\n    }\n};\nexport default StorageMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/storage.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 467,
    "kind": "class",
    "name": "StorageMixins",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/storage.mixins.js",
    "importStyle": "StorageMixins",
    "description": "This indexDBStorage class is the default consistent storage based on \n[leveldown](https://www.npmjs.com/package/leveldown) storage \nwith support file extends: png, csv, text by those corresponding mixins.\nmixWith:\n - 'node': [LevelDownMixins, TextFileMixins, PNGFileMixins, CSVFileMixins],\n - 'web': [LevelJSMixins, TextFileMixins, PNGFileMixins, CSVFileMixins]",
    "examples": [
      "import { StorageMixins, indexDBStorage, BaseStorage } from 'causal-net.storage';\nimport { Platform } from 'causal-net.utils';\nimport { Tensor } from 'causal-net.core';\nconsole.log(indexDBStorage instanceof BaseStorage);\nclass SimplePipeline extends Platform.mixWith(Tensor, [StorageMixins]){\n    constructor(){\n        super();\n        this.Storage = indexDBStorage;\n    }\n}\nlet pipeline = new SimplePipeline();\nconsole.log(pipeline.Storage);"
    ],
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "IndexDBStorage"
      }
    ],
    "interface": false,
    "extends": [
      "  BaseStorage "
    ]
  },
  {
    "__docId__": 468,
    "kind": "method",
    "name": "storageSummary",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#storageSummary",
    "access": "public",
    "description": "return file list of current storage",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "set",
    "name": "Storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#Storage",
    "access": "public",
    "description": "set storage instance to pipeline",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "storage instance"
      }
    ]
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#storage",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "get",
    "name": "Storage",
    "memberof": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-storage/src/storage.mixins.js~StorageMixins#Storage",
    "access": "public",
    "description": "get current storage",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "causality/packages/causality-storage/src/textFile.mixins.js",
    "content": "import { Fetch } from 'causal-net.utils';\nconst TextFileMixins = (StorageClass)=> class extends StorageClass{\n    \n    /**\n     * @async\n     * @param  {} filePath\n     */\n    async readFile(filePath){\n        let item = await this.getItem(filePath);\n        return item[filePath];\n    }\n    /**\n     * @param  {} filePath\n     * @param  {} data\n     */\n    async writeFile(filePath, data){\n        return await this.setItem(filePath, data);\n    }\n\n    async deleteFile(filePath){\n        return await this.delItem(filePath);\n    }\n\n    async fetchFile(url, filePath){\n        let response = await Fetch.fetchData(url);\n        return await this.writeFile(filePath, response);\n    }\n\n    async streamFile(url, filePath, transformer=null){\n        throw Error('implement required');\n    }\n};\nexport default TextFileMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/src/textFile.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "class",
    "name": "TextFileMixins",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js",
    "static": true,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-storage/src/textFile.mixins.js",
    "importStyle": "TextFileMixins",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "interface": false,
    "extends": [
      "StorageClass"
    ]
  },
  {
    "__docId__": 474,
    "kind": "method",
    "name": "readFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#readFile",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "method",
    "name": "writeFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#writeFile",
    "access": "public",
    "description": "",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "method",
    "name": "deleteFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#deleteFile",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "method",
    "name": "fetchFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#fetchFile",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "method",
    "name": "streamFile",
    "memberof": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-storage/src/textFile.mixins.js~TextFileMixins#streamFile",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      },
      {
        "name": "transformer",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": null
  },
  {
    "__docId__": 479,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/assert.js",
    "content": "import assert from 'assert';\nimport * as generateSchema from 'generate-schema';\nimport * as Validator from 'ajv';\n/**\n * This Assert class provides asserting methods based on builtin \n * [generate-schema](https://www.npmjs.com/package/generate-schema), \n * and schema checking [ajv](https://www.npmjs.com/package/ajv) \n *\n * @class Assert\n * @example\n * [EXAMPLE ../examples/assert.babel.js]\n */\nclass Assert{\n    /**\n     *Creates an instance of Assert.\n     * @memberof Assert\n     */\n    constructor(){\n        /** \n         * @private \n         * @type { Object } assert\n        */\n        this.assert = assert;\n    }\n    /**\n     * Try to check if the sample pattern matchs with input value pattern. \n     * Since the auto-learnt sample pattern could be incompleted, \n     * this function usage should follow the examples.\n     * @param { Any } value - input value\n     * @param { Any } sample - sample value pattern\n     * @param { String } [name='sample'] - value name\n     * @memberof Assert\n     */\n    seemMatchSample(value, sample, name='sample'){\n        let schema = generateSchema.json(name, sample);\n        delete schema.$schema;\n        let validator = new Validator(); \n        let valid = validator.addSchema(schema, name).validate(name, value);\n        if(!valid){ \n            throw Error(`value ${JSON.stringify(value)} not match schema \\n${JSON.stringify(schema)}`);\n        }\n    }\n    /**\n     * Assert object to be instance of class\n     * @param { Object } instance\n     * @param { Class } targetClass\n     * @memberof Assert\n     */\n    beInstanceOf(instance, targetClass){\n        if(!(instance instanceof targetClass)){\n            throw Error(`${JSON.stringify(instance)} must be instance of ${targetClass.name}`);\n        }\n    }\n} \n\nexport default new Assert();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/assert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 480,
    "kind": "class",
    "name": "Assert",
    "memberof": "causality/packages/causality-utils/src/assert.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/assert.js",
    "importStyle": null,
    "description": "This Assert class provides asserting methods based on builtin \n[generate-schema](https://www.npmjs.com/package/generate-schema), \nand schema checking [ajv](https://www.npmjs.com/package/ajv) ",
    "examples": [
      "import { Assert } from 'causal-net.utils';\nAssert.seemMatchSample([2,2,3], [1,2,3], 'validate sample');\nAssert.seemMatchSample('sample text', 'pattern text', 'validate sample');\nAssert.seemMatchSample( { 'text' : 'pattern text 1', 'number' : 1123 }, \n                        { 'text' : 'pattern text', 'number' : 1123 } , 'validate sample');\ntry{\n    Assert.seemMatchSample(['2',2,3], [1,2,3], 'validate sample');\n}\ncatch(err){\n    //error due to mismatch schema\n    console.log(err.message);\n};\nclass A{};\nlet a = new A();\nAssert.beInstanceOf(a, A);\ntry{\n    Assert.beInstanceOf('1', A);\n}\ncatch(err){\n    console.log(err.message);\n}"
    ],
    "lineNumber": 34,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Assert"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 481,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#constructor",
    "access": "public",
    "description": "Creates an instance of Assert.",
    "lineNumber": 39
  },
  {
    "__docId__": 482,
    "kind": "member",
    "name": "assert",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#assert",
    "access": "private",
    "description": "",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        " Object "
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "seemMatchSample",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#seemMatchSample",
    "access": "public",
    "description": "Try to check if the sample pattern matchs with input value pattern. \nSince the auto-learnt sample pattern could be incompleted, \nthis function usage should follow the examples.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "input value"
      },
      {
        "nullable": null,
        "types": [
          " Any "
        ],
        "spread": false,
        "optional": false,
        "name": "sample",
        "description": "sample value pattern"
      },
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'sample'",
        "defaultRaw": "'sample'",
        "name": "name",
        "description": "value name"
      }
    ],
    "return": null
  },
  {
    "__docId__": 484,
    "kind": "method",
    "name": "beInstanceOf",
    "memberof": "causality/packages/causality-utils/src/assert.js~Assert",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/assert.js~Assert#beInstanceOf",
    "access": "public",
    "description": "Assert object to be instance of class",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          " Object "
        ],
        "spread": false,
        "optional": false,
        "name": "instance",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "targetClass",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 485,
    "kind": "variable",
    "name": "assert",
    "memberof": "causality/packages/causality-utils/src/assert.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/assert.js~assert",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/assert.js",
    "importStyle": "assert",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/assert.js~Assert"
      ]
    }
  },
  {
    "__docId__": 486,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/csv.js",
    "content": "import { default as CSV } from 'csv-parser';\n/**\n * This class use [csv-parser](https://www.npmjs.com/package/csv-parser)\n * for csv parsing and transform csv data from fetch.\n * @todo: verify on web environment\n * @class CSVUtils\n */\nclass CSVUtils{\n    constructor(){\n        this.csv = CSV;\n        this.fs = require('fs');\n    }\n    /**\n     * return csv parser instance\n     * @readonly\n     * @memberof CSVUtils\n     */\n    get CoreCSV(){\n        return this.csv;\n    }\n    /**\n     * Fetch csv content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof CSVUtils\n     */\n    fetchCSV(url){\n        return new Promise(async (resolve, reject)=>{\n            let reader = await Fetch.streamData(url);\n            let data = [];\n            let csv = CSV();\n            csv.on('end', ()=>{\n                resolve(data);\n            });\n            csv.on('data',(row)=>{\n                data.push(row);\n            });\n            reader.pipe(csv);\n        });\n    }\n\n    writeCSV(data, columns, filePath){\n        throw Error('implement required');\n    }\n\n    readCSV(filePath){\n        const fs = this.fs, CSV = this.csv;\n        if(!fs.createReadStream){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            let data = [];\n            let csv = CSV();\n            console.log(csv);\n            csv.on('end', ()=>{\n                resolve(data);\n            });\n            csv.on('data',(row)=>{\n                data.push(row);\n            });\n            fs.createReadStream(filePath).pipe(csv);\n        });\n    }\n}\nexport default new CSVUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/csv.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 487,
    "kind": "class",
    "name": "CSVUtils",
    "memberof": "causality/packages/causality-utils/src/csv.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/csv.js",
    "importStyle": null,
    "description": "This class use [csv-parser](https://www.npmjs.com/package/csv-parser)\nfor csv parsing and transform csv data from fetch.\n@todo: verify on web environment",
    "lineNumber": 8,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CSVUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 488,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 489,
    "kind": "member",
    "name": "csv",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#csv",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "get",
    "name": "CoreCSV",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#CoreCSV",
    "access": "public",
    "description": "return csv parser instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "fetchCSV",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#fetchCSV",
    "access": "public",
    "description": "Fetch csv content from given url",
    "lineNumber": 28,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "writeCSV",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#writeCSV",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "columns",
        "types": [
          "*"
        ]
      },
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 494,
    "kind": "method",
    "name": "readCSV",
    "memberof": "causality/packages/causality-utils/src/csv.js~CSVUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/csv.js~CSVUtils#readCSV",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "variable",
    "name": "cSVUtils",
    "memberof": "causality/packages/causality-utils/src/csv.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/csv.js~cSVUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/csv.js",
    "importStyle": "cSVUtils",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/csv.js~CSVUtils"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetch.js",
    "content": "import fetch from 'cross-fetch';\nimport { default as Platform } from './platform';\nimport { default as NodeStreamMixins } from './fetchStreamMixins.node';\nimport { default as WebStreamMixins } from './fetchStreamMixins.web';\n\nclass BaseFetch{\n    constructor(){\n        this.fetch = fetch;\n    }\n}\n\n/**\n * This isomorphic Fetch class is mixed with:\n * - NodeStreamMixins  \n * - WebStreamMixins\n * @class Fetch\n * @extends BaseFetch\n */\nclass Fetch extends Platform.mixWith(BaseFetch, {'node': [NodeStreamMixins], 'web':[WebStreamMixins]}){\n    constructor(){\n        super();\n    }\n    /**\n     * fetch text content given the url\n     * @param { String } url\n     * @returns { Promise } promise of content\n     */\n    fetchData(url){\n        return new Promise((resolve, reject)=>{\n            fetch(url).then(response=>{\n                if (response.status >= 400) {\n                    console.error(response.status);\n                    reject(\"Bad response from server\");\n                }\n                resolve(response.text());\n            });\n        });\n    }\n    /**\n     * fetch json content given the url \n     * @param { String } url\n     * @returns { promise } promise of content\n     */\n    fetchJson(url){\n        return new Promise(async (resolve, reject)=>{\n            fetch(url).then(response=>{\n                if (response.status >= 400) {\n                    console.error(response.status);\n                    reject(\"Bad response from server\");\n                }\n                resolve(response.json());\n            });\n        });\n    }\n}\n\nexport default new Fetch();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 497,
    "kind": "class",
    "name": "BaseFetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~BaseFetch",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 498,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/fetch.js~BaseFetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~BaseFetch#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 499,
    "kind": "member",
    "name": "fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js~BaseFetch",
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~BaseFetch#fetch",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 500,
    "kind": "class",
    "name": "Fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": null,
    "description": "This isomorphic Fetch class is mixed with:\n- NodeStreamMixins  \n- WebStreamMixins",
    "lineNumber": 19,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Fetch"
      }
    ],
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 501,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "fetchData",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#fetchData",
    "access": "public",
    "description": "fetch text content given the url",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } promise of content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "promise of content"
    }
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "fetchJson",
    "memberof": "causality/packages/causality-utils/src/fetch.js~Fetch",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetch.js~Fetch#fetchJson",
    "access": "public",
    "description": "fetch json content given the url ",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ promise } promise of content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " promise "
      ],
      "spread": false,
      "description": "promise of content"
    }
  },
  {
    "__docId__": 504,
    "kind": "variable",
    "name": "fetch",
    "memberof": "causality/packages/causality-utils/src/fetch.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetch.js~fetch",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetch.js",
    "importStyle": "fetch",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/fetch.js~Fetch"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "content": "import fetch from 'cross-fetch';\n/**\n * mixins function for Fetch on node environment\n * @class\n * @param { Class } FetchClass\n * @returns { Class } Fetclass - class with extended methods\n */\nconst NodeStreamMixins = (FetchClass)=> class extends FetchClass{ \n    /**\n     * @param { String } url - url for content\n     * @returns { Readable } content\n     * @memberof Fetch\n     */\n    async streamData(url){\n        const response = await fetch(url);\n        if (response.status >= 400) {\n            throw Error(\"Bad response from server\");\n        }\n        return response.body;\n    }\n};\nexport default NodeStreamMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 506,
    "kind": "class",
    "name": "NodeStreamMixins",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetchStreamMixins.node.js",
    "importStyle": "NodeStreamMixins",
    "description": "mixins function for Fetch on node environment",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{ Class } Fetclass - class with extended methods"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "FetchClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": "Fetclass - class with extended methods"
    },
    "interface": false,
    "extends": [
      "FetchClass"
    ]
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "streamData",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.node.js~NodeStreamMixins#streamData",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": "content"
    }
  },
  {
    "__docId__": 508,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "content": "import fetchStream from 'fetch-readablestream';\n\n/**\n * provide streamData method for web environment\n * @class\n * @param { Class } FetchClass\n * @returns { Class } FetchClass - class with extended methods\n */\nconst WebStreamMixins = (FetchClass)=> class extends FetchClass{ \n    /**\n     * Stream content given the url\n     * @param { String } url - url for content\n     * @returns { Readable } content\n     */\n    async streamData(url){\n        let response = await fetchStream(url);\n        if(response.status >= 400){\n            console.error(response.status);\n            reject(\"Bad response from server\");\n        }\n        const streamReader = response.body.getReader();\n        let reader = Stream.makeReadable();\n        const recusiveRead = ()=>{\n            return new Promise((resolve, reject)=>{\n                streamReader.read().then(({ value, done })=>{\n                    if (done) {\n                        reader.push(null);\n                        resolve(0);\n                    }\n                    else{\n                        reader.push(value);\n                        resolve(1);\n                    }\n                });\n            });\n        };\n        const ReadNext = (recusiveRead)=>{\n            recusiveRead().then(hasNext=>{\n                if(hasNext){\n                    ReadNext(recusiveRead);\n                }\n            });\n        };\n        ReadNext(recusiveRead);\n        return reader;\n    }\n};\n\nexport default WebStreamMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 509,
    "kind": "class",
    "name": "WebStreamMixins",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/fetchStreamMixins.web.js",
    "importStyle": "WebStreamMixins",
    "description": "provide streamData method for web environment",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{ Class } FetchClass - class with extended methods"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "FetchClass",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": "FetchClass - class with extended methods"
    },
    "interface": false,
    "extends": [
      "FetchClass"
    ]
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "streamData",
    "memberof": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/fetchStreamMixins.web.js~WebStreamMixins#streamData",
    "access": "public",
    "description": "Stream content given the url",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } content"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": "content"
    }
  },
  {
    "__docId__": 511,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/index.js",
    "content": "export { default as Platform } from './platform';\nexport { default as Fetch } from './fetch';\nexport { default as PNGUtils } from './png';\nexport { default as CSVUtils } from './csv';\nexport { default as JSONUtils } from './json';\nexport { default as Stream } from './stream';\nexport { default as Assert } from './assert';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 512,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/json.js",
    "content": "import { default as json5 } from 'json5';\n/**\n * This class provide wrapper for [json5](https://www.npmjs.com/package/json5)\n * for json parse/stringlify/fetch/write/read\n * @todo: verify on web environment\n * @class JsonUtils\n */\nclass JsonUtils{\n    constructor(){\n        this.json = json5;\n        this.fs = require('fs');\n    }\n    /**\n     * return json5 instance\n     * @readonly\n     * @memberof JsonUtils\n     */\n    get CoreJSON(){\n        return this.json;\n    }\n    /**\n     * Fetch json content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JsonUtils\n     */\n    async fetchJSON(url){\n        return await Fetch.fetchJson(url);\n    }\n\n    /**\n     * write json content from given content\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JsonUtils\n     */\n    async writeJSON(data, filePath){\n        const fs = this.fs, json = this.json;\n        if(!fs.writeFile){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            fs.writeFile(filePath, json.stringify(data), (err)=>{\n                if(err){\n                    reject(err);\n                }\n                else{\n                    resolve(filePath);\n                }\n            });\n        });\n    }\n\n    /**\n     * Fetch json content from given url\n     * @todo enhance reject case\n     * @param { URL } url - url for csv content\n     * @returns { Promise } - data promise with data if success\n     * @memberof JsonUtils\n     */\n    readJSON(filePath){\n        const fs = this.fs, json = this.json;\n        if(!fs.readFile){\n            throw Error('method is not supported');\n        }\n        return new Promise(async (resolve, reject)=>{\n            fs.readFile(filePath, (err, data)=>{\n                if(err){\n                    reject(err);\n                }\n                else{\n                    resolve(json.parse(data));\n                }\n            });\n        });\n    }\n}\nexport default new JsonUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/json.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 513,
    "kind": "class",
    "name": "JsonUtils",
    "memberof": "causality/packages/causality-utils/src/json.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/json.js",
    "importStyle": null,
    "description": "This class provide wrapper for [json5](https://www.npmjs.com/package/json5)\nfor json parse/stringlify/fetch/write/read\n@todo: verify on web environment",
    "lineNumber": 8,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "JsonUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 514,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 515,
    "kind": "member",
    "name": "json",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#json",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "get",
    "name": "CoreJSON",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#CoreJSON",
    "access": "public",
    "description": "return json5 instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "fetchJSON",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#fetchJSON",
    "access": "public",
    "description": "Fetch json content from given url",
    "lineNumber": 28,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "writeJSON",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#writeJSON",
    "access": "public",
    "description": "write json content from given content",
    "lineNumber": 39,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "readJSON",
    "memberof": "causality/packages/causality-utils/src/json.js~JsonUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/json.js~JsonUtils#readJSON",
    "access": "public",
    "description": "Fetch json content from given url",
    "lineNumber": 63,
    "todo": [
      "enhance reject case"
    ],
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } - data promise with data if success"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for csv content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise with data if success"
    }
  },
  {
    "__docId__": 521,
    "kind": "variable",
    "name": "jsonUtils",
    "memberof": "causality/packages/causality-utils/src/json.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/json.js~jsonUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/json.js",
    "importStyle": "jsonUtils",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/json.js~JsonUtils"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/platform.js",
    "content": "import platform from 'platform';\nimport process from 'process';\n\nconst PlatformMapping = (name)=>{\n    if(name === 'Node.js'){\n        return 'node';\n    }\n    else{\n        return 'web';\n    }\n};\n/**\n * This Platform class uses [platform](https://www.npmjs.com/package/platform) for checking current platform \n * it now understand either 'node' or 'web'.\n * @todo: extend more platform in future\n * @class Platform\n * @example\n * [EXAMPLE ../examples/platform.babel.js]\n */\nclass Platform{\n    /**\n     *Creates an instance of Platform.\n     * @memberof Platform\n     */\n    constructor(){\n        this.platform = platform;\n        if(typeof process !== 'undefined' && process.pid) {\n            this.pid = process.pid;\n        }\n        else{\n            this.pid = null;\n        }\n    }\n    /**\n     * return current process pid on node or `null` on web\n     * @readonly\n     * @memberof Platform\n     */\n    get PID(){\n        return this.pid;\n    }\n\n    currentPlatform(){\n        return platform.parse();\n    }\n    /**\n     * Enhanced mixins for based class and list of mixins\n     * @param { Class } BaseClass - base class\n     * @param { List } mixins - list of mixins function\n     * @returns { Class } \n     * @memberof Platform\n     */\n    mixWith(BaseClass, mixins){\n        var mixinsList = [];\n        if(Array.isArray(mixins)){\n            mixinsList = mixins;\n        }\n        else{\n            const PfName = PlatformMapping(platform.parse()['name']);\n            mixinsList = mixins[PfName];\n        }\n        if(mixinsList === undefined){\n            throw Error(`${PfName} not found in mixins`);\n        }\n        return mixinsList.reduce((c, mixin) => {\n            if(typeof c === \"function\"){\n                return mixin(c);\n            }\n            else{\n                throw Error(`${JSON.stringify(c)} is not support mixins`);\n            }\n        }, BaseClass);\n    }\n};\n\nexport default new Platform();\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/platform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 523,
    "kind": "function",
    "name": "PlatformMapping",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~PlatformMapping",
    "access": "public",
    "export": false,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 524,
    "kind": "class",
    "name": "Platform",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": null,
    "description": "This Platform class uses [platform](https://www.npmjs.com/package/platform) for checking current platform \nit now understand either 'node' or 'web'.\n@todo: extend more platform in future",
    "examples": [
      "import {Platform} from 'causal-net.utils';\nconsole.log(Platform.currentPlatform());\nclass A{\n    constructor(){\n    }\n    sayA(){\n        console.log('say A');\n    }\n}\nconst AMixinsNode = (Base)=>class extends Base{\n    sayA(){\n        console.log('mixins on node');\n        super.sayA();\n    }\n    sayAExtend(){\n        console.log('say A with mixins on node');\n    }\n}\nconst AMixinsWeb = (Base)=>class extends Base{\n    sayAExtend(){\n        console.log('say A with mixins on web');\n    }\n}\nclass AExtends extends Platform.mixWith(A, \n    {'node': [AMixinsNode], 'web': [AMixinsWeb]}){\n        constructor(){\n            super();\n        }\n    }\nconst a = new AExtends();\na.sayA();\na.sayAExtend();"
    ],
    "lineNumber": 51,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Platform"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 525,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#constructor",
    "access": "public",
    "description": "Creates an instance of Platform.",
    "lineNumber": 56
  },
  {
    "__docId__": 526,
    "kind": "member",
    "name": "platform",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#platform",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "member",
    "name": "pid",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#pid",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "get",
    "name": "PID",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#PID",
    "access": "public",
    "description": "return current process pid on node or `null` on web",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "currentPlatform",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#currentPlatform",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 531,
    "kind": "method",
    "name": "mixWith",
    "memberof": "causality/packages/causality-utils/src/platform.js~Platform",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/platform.js~Platform#mixWith",
    "access": "public",
    "description": "Enhanced mixins for based class and list of mixins",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Class } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Class "
        ],
        "spread": false,
        "optional": false,
        "name": "BaseClass",
        "description": "base class"
      },
      {
        "nullable": null,
        "types": [
          " List "
        ],
        "spread": false,
        "optional": false,
        "name": "mixins",
        "description": "list of mixins function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Class "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 532,
    "kind": "variable",
    "name": "platform",
    "memberof": "causality/packages/causality-utils/src/platform.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/platform.js~platform",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/platform.js",
    "importStyle": "platform",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/platform.js~Platform"
      ]
    }
  },
  {
    "__docId__": 533,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/png.js",
    "content": "import { default as  Fetch } from './fetch';\nimport { PNG } from 'pngjs3';\n/**\n * This class use [pngjs3](https://www.npmjs.com/package/pngjs3)\n * for png parsing and transform png data from fetch.\n * @class PNGUtils\n */\nclass PNGUtils{\n    constructor(){\n        this.png = PNG;\n        this.fs = require('fs');\n    }\n    /**\n     * get pngjs3 instance\n     * @readonly\n     * @memberof PNGUtils\n     */\n    get CorePNG(){\n        return this.png;\n    }\n    /**\n     * Fetch and tranform png file to raw array from url\n     * @param { URL } url - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    fetchPNG(url){\n        return new Promise(async (resolve, reject)=>{\n            let reader = await Fetch.streamData(url);\n            let png = new PNG();\n            png.on('parsed', function(){\n                resolve(this.data);\n            });\n            png.on('error',(err)=>{\n                console.error(err);\n                reject(err);\n            });\n            reader.pipe(png);\n        });\n    }\n    /**\n     * write and tranform png file to raw array from filepath\n     * @param { URL } url - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    writePNG(data, size, filePath){\n        const fs = this.fs;\n        if(!fs.createWriteStream){\n            throw Error('method is not supported');\n        }\n        return new Promise((resolve, reject)=>{\n            const [width, height, depth] = size;\n            let png = new PNG({ filterType: depth, width: width, height: height });\n            png.data = data;\n            png.pack().pipe(fs.createWriteStream(filePath))\n                    .on('close', ()=>{ resolve(filePath); })\n                    .on('error', ()=>{ reject(`error or read png data from file ${filePath}`); });\n        });\n    }\n    /**\n     * read and tranform png file to raw array from filepath\n     * @param { String } filePath - url for PNG file\n     * @returns { Promise } data promise - return Array if success or reject with error message\n     * @memberof PNGUtils\n     */\n    readPNG(filePath){\n        const fs = this.fs;\n        if(!fs.createReadStream){\n            throw Error('method is not supported');\n        }\n        return new Promise((resolve, reject)=>{\n            fs.createReadStream(filePath)\n                .pipe(new PNG())\n                .on('parsed', function() {\n                    resolve(this.data);\n                })\n                .on('error', ()=>{\n                    reject(`error or read png data from file ${filePath}`);\n                });\n        });\n    }\n}\nexport default new PNGUtils();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/png.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 534,
    "kind": "class",
    "name": "PNGUtils",
    "memberof": "causality/packages/causality-utils/src/png.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/png.js",
    "importStyle": null,
    "description": "This class use [pngjs3](https://www.npmjs.com/package/pngjs3)\nfor png parsing and transform png data from fetch.",
    "lineNumber": 8,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PNGUtils"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 535,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 536,
    "kind": "member",
    "name": "png",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#png",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 537,
    "kind": "member",
    "name": "fs",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#fs",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "get",
    "name": "CorePNG",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#CorePNG",
    "access": "public",
    "description": "get pngjs3 instance",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "method",
    "name": "fetchPNG",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#fetchPNG",
    "access": "public",
    "description": "Fetch and tranform png file to raw array from url",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 540,
    "kind": "method",
    "name": "writePNG",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#writePNG",
    "access": "public",
    "description": "write and tranform png file to raw array from filepath",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " URL "
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 541,
    "kind": "method",
    "name": "readPNG",
    "memberof": "causality/packages/causality-utils/src/png.js~PNGUtils",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/png.js~PNGUtils#readPNG",
    "access": "public",
    "description": "read and tranform png file to raw array from filepath",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } data promise - return Array if success or reject with error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " String "
        ],
        "spread": false,
        "optional": false,
        "name": "filePath",
        "description": "url for PNG file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "data promise - return Array if success or reject with error message"
    }
  },
  {
    "__docId__": 542,
    "kind": "variable",
    "name": "pNGUtils",
    "memberof": "causality/packages/causality-utils/src/png.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/png.js~pNGUtils",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/png.js",
    "importStyle": "pNGUtils",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/png.js~PNGUtils"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "file",
    "name": "causality/packages/causality-utils/src/stream.js",
    "content": "import stream from 'readable-stream';\n/**\n * This class provide wrapper functions for readable-stream \n * @see https://www.npmjs.com/package/readable-stream\n * @class Stream\n * @example\n * [EXAMPLE ../examples/stream.babel.js]\n */\nclass Stream{\n    constructor(){\n    \n        /**\n         * @private { readable-stream }\n         */\n        this.stream = stream;\n    }\n    \n    /**\n     * create reable object from readFn.\n     * @param { Function } readFn - called function for new data\n     * @returns { Readable } \n     */\n    makeReadable(readFn=null){\n        let reader = new stream.Readable({objectMode: true});\n        const DefaultReader = ()=>{};\n        reader._read = readFn || DefaultReader;\n        return reader;\n    }\n    \n    /**\n     * create writeable object from writeFn.\n     * @param { Function } writeFn - called function for new data\n     * @returns { Writable }\n     */\n    makeWritable(writeFn){\n        let writer = new stream.Writable({objectMode: true});\n        writer._write = writeFn;\n        return writer;\n    }\n    \n    /**\n     * create duplex object from writeFn and optional readFn.\n     * @param { Function } writeFn - called function for new data\n     * @param { Function } [readFn=null] \n     * @returns { Duplex } \n     */\n    makeDuplex(writeFn, readFn=null){\n        let duplex = new stream.Duplex({objectMode: true});\n        duplex._write = writeFn;\n        const DefaultReader = ()=>{};\n        duplex._read = readFn || DefaultReader;\n        return duplex;\n    }\n\n    /**\n     * create transform object from transformFn\n     * @param { Function } transformFn - called function for new data\n     * @returns { Transform }\n     */\n    makeTransform(transformFn){\n        let transformer = new stream.Transform({objectMode: true});\n        transformer._transform = tranformFn;\n        return transformer;\n    }\n    \n    /**\n     * create pipeline from array of [readable, ...tranforms, writable].\n     * This stream.makePipeline([readable, transform, writable]) \n     * equivalent to readable.pipe(transform).pipe(writable).\n     * @param { Array } streams - array of [readable, ...tranforms, writable]\n     * @param { Function } [onDataFn=null] - handle function for data event at readable \n     * @returns { Promise } promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\".\n     */\n    makePipeline(streams, onDataFn=null){\n        return new Promise((resolve, reject)=>{\n            let writer = streams.slice(-1)[0];\n            let reader = streams[0];\n            writer.on('finish',()=>{\n                resolve('Success');\n            });\n            writer.on('error',(err)=>{\n                reject(`Pipeline failed. ${err}`);\n            });\n            reader.on('data',(data)=>{\n                if(onDataFn){ onDataFn(data); }\n            });\n            return streams.reduce((p, s)=>p.pipe(s));\n        });\n    }\n};\n\nexport default new Stream();",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/src/stream.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 544,
    "kind": "class",
    "name": "Stream",
    "memberof": "causality/packages/causality-utils/src/stream.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/stream.js",
    "importStyle": null,
    "description": "This class provide wrapper functions for readable-stream ",
    "examples": [
      "import {Stream} from 'causal-net.utils';\n\nlet reader = Stream.makeReadable();\n    \nconst TranformFn = (chunkData, chunkEncoding, afterTransformFn) =>{\n    chunkData.x = (chunkData.x+1.5);\n    let event = null;\n    afterTransformFn(event, chunkData);\n};\nlet transformer = Stream.makeTransform(TranformFn);\n    \nconst WriteFn = (chunkData, chunkEncoding, callback) =>{\n    console.log({[delay]:chunkData});\n    callback();\n};\nlet writer = Stream.makeWritable(WriteFn);\n    \nreader.pipe(transformer).pipe(writer);\n//write random int for every 100 ms    \nsetInterval(() => {\n    reader.push({ x: Math.random() });\n}, 100);"
    ],
    "see": [
      "https://www.npmjs.com/package/readable-stream"
    ],
    "lineNumber": 31,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Stream"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 545,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 546,
    "kind": "member",
    "name": "stream",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#stream",
    "access": "private",
    "description": "",
    "lineNumber": 37,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "makeReadable",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeReadable",
    "access": "public",
    "description": "create reable object from readFn.",
    "lineNumber": 45,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Readable } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "readFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Readable "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 548,
    "kind": "method",
    "name": "makeWritable",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeWritable",
    "access": "public",
    "description": "create writeable object from writeFn.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Writable }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "writeFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Writable "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "makeDuplex",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeDuplex",
    "access": "public",
    "description": "create duplex object from writeFn and optional readFn.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Duplex } "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "writeFn",
        "description": "called function for new data"
      },
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "readFn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Duplex "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 550,
    "kind": "method",
    "name": "makeTransform",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makeTransform",
    "access": "public",
    "description": "create transform object from transformFn",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Transform }"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": false,
        "name": "transformFn",
        "description": "called function for new data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Transform "
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "makePipeline",
    "memberof": "causality/packages/causality-utils/src/stream.js~Stream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/packages/causality-utils/src/stream.js~Stream#makePipeline",
    "access": "public",
    "description": "create pipeline from array of [readable, ...tranforms, writable].\nThis stream.makePipeline([readable, transform, writable]) \nequivalent to readable.pipe(transform).pipe(writable).",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Promise } promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\"."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          " Array "
        ],
        "spread": false,
        "optional": false,
        "name": "streams",
        "description": "array of [readable, ...tranforms, writable]"
      },
      {
        "nullable": null,
        "types": [
          " Function "
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onDataFn",
        "description": "handle function for data event at readable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Promise "
      ],
      "spread": false,
      "description": "promise - resolve \"Success\" after finish or \"Pipeline failed. ${err}\"."
    }
  },
  {
    "__docId__": 552,
    "kind": "variable",
    "name": "stream",
    "memberof": "causality/packages/causality-utils/src/stream.js",
    "static": true,
    "longname": "causality/packages/causality-utils/src/stream.js~stream",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/packages/causality-utils/src/stream.js",
    "importStyle": "stream",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "causality/packages/causality-utils/src/stream.js~Stream"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "file",
    "name": "causality/src/causalNet.core.js",
    "content": "import * as Core from \"causal-net.core\";\nexport default Core;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.core.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 554,
    "kind": "file",
    "name": "causality/src/causalNet.datasets.js",
    "content": "import * as Datasets from 'causal-net.datasets';\nexport default Datasets;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.datasets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 555,
    "kind": "file",
    "name": "causality/src/causalNet.layer.js",
    "content": "import * as Layer from \"causal-net.layer\";\nexport default Layer;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.layer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 556,
    "kind": "file",
    "name": "causality/src/causalNet.log.js",
    "content": "import * as Log from \"causal-net.log\";\nexport default Log;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.log.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 557,
    "kind": "file",
    "name": "causality/src/causalNet.memcache.js",
    "content": "import * as MemCache from 'causal-net.memcache';\nexport default MemCache;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.memcache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 558,
    "kind": "file",
    "name": "causality/src/causalNet.models.js",
    "content": "import * as Models from 'causal-net.models';\nexport default Models;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.models.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 559,
    "kind": "file",
    "name": "causality/src/causalNet.optimizers.js",
    "content": "import * as Optimizers from 'causal-net.optimizers';\nexport default Optimizers;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.optimizers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "causality/src/causalNet.preprocessing.js",
    "content": "import * as Preprocessing from 'causal-net.preprocessing';\nexport default Preprocessing;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.preprocessing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "file",
    "name": "causality/src/causalNet.representation.js",
    "content": "import * as Representation from 'causal-net.representation';\nexport default Representation;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 562,
    "kind": "file",
    "name": "causality/src/causalNet.storage.js",
    "content": "import * as Storage from 'causal-net.storage';\nexport default Storage;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.storage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 563,
    "kind": "file",
    "name": "causality/src/causalNet.utils.js",
    "content": "import * as Utils from 'causal-net.utils';\nexport default Utils;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causalNet.utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "causality/src/causality.js",
    "content": "import { Tensor } from 'causal-net.core';\nimport { Platform } from 'causal-net.utils';\nimport { LoggerMixins, termLogger } from 'causal-net.log';\nimport { StorageMixins, indexDBStorage } from 'causal-net.storage';\nimport { LayerMixins, causalNetLayer } from 'causal-net.layer';\nimport { SupervisedModelsMixins, causalNetModels } from 'causal-net.models';\nimport { TrainerMixins } from 'causal-net.optimizers';\n\nimport {  PipelineBaseMixins,\n          PipelineRunnerMixins,\n          PipelinePredictingMixins,\n          PipelineTrainingMixins,\n          PipelineEvaluatingMixins,\n          PipelineEnsemblePredictingMixins,\n          PipelineEnsembleTrainingMixins,\n          PipelineEnsembleEvaluatingMixins,\n          PipelineParametersMixins,\n          PipelineHyperParametersMixins,\n          Function } from './pipeline/index';\n\nexport default class CausalNet extends Platform.mixWith(Tensor, [\n        StorageMixins,\n        LoggerMixins,\n        PipelineBaseMixins,\n        PipelineHyperParametersMixins,\n        PipelineParametersMixins,\n        LayerMixins,\n        SupervisedModelsMixins,\n        TrainerMixins,\n        PipelineRunnerMixins,\n        PipelinePredictingMixins,\n        PipelineTrainingMixins,\n        PipelineEvaluatingMixins,\n        PipelineEnsemblePredictingMixins,\n        PipelineEnsembleTrainingMixins,\n        PipelineEnsembleEvaluatingMixins\n    ]){\n    constructor(netConfig, parameters={}){\n        super();\n        this.F = new Function();\n        this.R = this.F.CoreFunction;\n        this.setBasePipelineByConfig(netConfig);\n        this.setHyperParametersByConfig(netConfig);\n        this.setModelByConfig(netConfig);\n        this.Parameters = parameters;\n        this.setTrainerByConfig(netConfig);\n        this.Storage = indexDBStorage;\n        this.saveModelDir = '/saveModel/';\n        this.Logger = termLogger;\n        this.Layer = causalNetLayer;\n        this.Models = causalNetModels;\n    }  \n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/causality.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "class",
    "name": "CausalNet",
    "memberof": "causality/src/causality.js",
    "static": true,
    "longname": "causality/src/causality.js~CausalNet",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/causality.js",
    "importStyle": "CausalNet",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "expressionExtends": ""
  },
  {
    "__docId__": 566,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/causality.js~CausalNet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 567,
    "kind": "member",
    "name": "F",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#F",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 568,
    "kind": "member",
    "name": "R",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#R",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 569,
    "kind": "member",
    "name": "Parameters",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 570,
    "kind": "member",
    "name": "Storage",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Storage",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 571,
    "kind": "member",
    "name": "saveModelDir",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#saveModelDir",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 572,
    "kind": "member",
    "name": "Logger",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Logger",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "member",
    "name": "Layer",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Layer",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "member",
    "name": "Models",
    "memberof": "causality/src/causality.js~CausalNet",
    "static": false,
    "longname": "causality/src/causality.js~CausalNet#Models",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 575,
    "kind": "file",
    "name": "causality/src/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nimport {Platform} from 'causal-net.utils';\nimport {default as PipelineFunctionMixins} from './pipelineFunction.mixins';\n\nexport default class Function extends Platform.mixWith(BaseFunction,[PipelineFunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/src/function.js",
    "static": true,
    "longname": "causality/src/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[PipelineFunctionMixins])"
  },
  {
    "__docId__": 577,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 578,
    "kind": "file",
    "name": "causality/src/index.js",
    "content": "export { default as Utils } from './causalNet.utils';\nexport { default as Core } from './causalNet.core';\nexport { default as Log } from './causalNet.log';\nexport { default as Storage } from './causalNet.storage';\nexport { default as Memcache } from './causalNet.memcache';\nexport { default as Preprocessing } from './causalNet.preprocessing';\nexport { default as Representation } from './causalNet.representation';\nexport { default as Datasets } from './causalNet.datasets';\nexport { default as Layer } from './causalNet.layer';\nexport { default as Models } from './causalNet.models';\nexport { default as Optimizers } from './causalNet.optimizers';\nexport { default as CausalNet } from './causality';",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 579,
    "kind": "file",
    "name": "causality/src/pipeline/function.js",
    "content": "import {Function as BaseFunction} from 'causal-net.core';\nimport {Platform} from 'causal-net.utils';\nimport {default as PipelineFunctionMixins} from './pipelineFunction.mixins';\n\nexport default class Function extends Platform.mixWith(BaseFunction,[PipelineFunctionMixins]){\n    constructor(){\n        super();\n    }\n}",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/function.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 580,
    "kind": "class",
    "name": "Function",
    "memberof": "causality/src/pipeline/function.js",
    "static": true,
    "longname": "causality/src/pipeline/function.js~Function",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/function.js",
    "importStyle": "Function",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "expressionExtends": "Platform.mixWith(BaseFunction,[PipelineFunctionMixins])"
  },
  {
    "__docId__": 581,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "causality/src/pipeline/function.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/function.js~Function#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 582,
    "kind": "file",
    "name": "causality/src/pipeline/index.js",
    "content": "export { default as PipelinePredictingMixins } from './pipelinePredicting.mixins';\nexport { default as PipelineTrainingMixins } from './pipelineTraining.mixins';\nexport { default as PipelineEvaluatingMixins } from './pipelineEvaluating.mixins';\nexport { default as PipelineEnsemblePredictingMixins } from './pipelineEnsemblePredicting.mixins';\nexport { default as PipelineEnsembleEvaluatingMixins } from './pipelineEnsembleEvaluating.mixins';\nexport { default as PipelineEnsembleTrainingMixins } from './pipelineEnsembleTraining.mixins';\nexport { default as PipelineParametersMixins } from './pipelineParameters.mixins';\nexport { default as PipelineHyperParametersMixins } from './pipelineHyperParameters.mixins';\nexport { default as PipelineBaseMixins } from './pipelineBase.mixins';\nexport { default as PipelineRunnerMixins } from './pipelineRunner.mixins';\nexport { default as Function } from './function';\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 583,
    "kind": "file",
    "name": "causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "content": "const PipelineEmbeddingMixins = (PipelineClass)=> class extends PipelineClass{\n    setEmbeddingByConfig(){\n    }\n\n    set Embedding(memory){\n        if(!memory){\n            throw Error(`expect memory, got ${memory}`);\n        }\n        this.memory = memory;\n    }\n\n    get Embedding(){\n        if(!this.memory){\n            throw Error(`memory is not set`);\n        }\n        return this.memory;\n    }\n};\nexport default PipelineEmbeddingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 584,
    "kind": "class",
    "name": "PipelineEmbeddingMixins",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipeLineEmbedding.mixins.js",
    "importStyle": "PipelineEmbeddingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 585,
    "kind": "method",
    "name": "setEmbeddingByConfig",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#setEmbeddingByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 586,
    "kind": "set",
    "name": "Embedding",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#Embedding",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 587,
    "kind": "member",
    "name": "memory",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#memory",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 588,
    "kind": "get",
    "name": "Embedding",
    "memberof": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipeLineEmbedding.mixins.js~PipelineEmbeddingMixins#Embedding",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 589,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineBase.mixins.js",
    "content": "const PipelineBaseMixins = (PipelineClass)=> class extends PipelineClass{\n    set BasePipeline(basePipeline){\n        this.basePipeline = basePipeline;\n    }\n    get BasePipeline(){\n        this.basePipeline;\n    }\n    setBasePipelineByConfig(netConfig){\n        if(!netConfig.Pipeline){\n            throw Error('Pipeline must be define inside netConfig');\n        }\n        this.basePipeline = netConfig.Pipeline;\n    }\n};\nexport default PipelineBaseMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineBase.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "class",
    "name": "PipelineBaseMixins",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineBase.mixins.js",
    "importStyle": "PipelineBaseMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 591,
    "kind": "set",
    "name": "BasePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#BasePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 592,
    "kind": "member",
    "name": "basePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#basePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 593,
    "kind": "get",
    "name": "BasePipeline",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#BasePipeline",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": null
  },
  {
    "__docId__": 594,
    "kind": "method",
    "name": "setBasePipelineByConfig",
    "memberof": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineBase.mixins.js~PipelineBaseMixins#setBasePipelineByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 596,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "content": "const PipelineEnsembleEvaluatingMixins = (PipelineClass)=> class extends PipelineClass{ \n    async ensembleAccuracyTest(TestSampleGeneratorFn, modelList){\n        const T = this.T;\n        const testSampleGenerator = TestSampleGeneratorFn();\n        let testSize = 0, pass = 0;\n        for await (let {idx, batchSize, data} of testSampleGenerator){\n            this.SampleSize = batchSize;\n            let [batchSamples, batchLabels] = data;\n            let sampleTensor = T.tensor(batchSamples).reshape([batchSize, -1]).asType('float32');\n            let labelTensor  = T.tensor(batchLabels).reshape([batchSize, -1]);\n            let oneHotPredict = await this.ensembleOneHotPredict(modelList, sampleTensor, batchSize);\n            let correctPredicts = oneHotPredict.mul(labelTensor);\n            pass += correctPredicts.sum().dataSync()[0];\n            testSize += batchSize;\n        }\n        let accuracy = pass / testSize;\n        return {accuracy, pass};             \n    }\n};\nexport default PipelineEnsembleEvaluatingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 597,
    "kind": "class",
    "name": "PipelineEnsembleEvaluatingMixins",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js",
    "importStyle": "PipelineEnsembleEvaluatingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 598,
    "kind": "method",
    "name": "ensembleAccuracyTest",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins#ensembleAccuracyTest",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "TestSampleGeneratorFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"accuracy\": *, \"pass\": *}"
      ]
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsembleEvaluating.mixins.js~PipelineEnsembleEvaluatingMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 600,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "content": "const PipelineEnsemblePredictMixins = (PipelineClass)=> class extends PipelineClass{ \n    async ensembleProbFit(modelList, sampleTensor){\n        const T = this.T;\n        let probs = [];\n        for(let model of modelList){\n            await this.loadParams(model);\n            let pipeOutput = this.runPipeline(sampleTensor);\n            let logProb = this.Fit(pipeOutput);\n            probs.push(T.exp(logProb));\n        }\n        let meanProb = T.concat(probs, 0);\n        if(probs.length > 1){\n            meanProb = meanProb.mean(0, true);\n        }\n        return meanProb;\n    }\n    async ensemblePredict(modelList, samples, numSamples=1){\n        const T = this.T;\n        console.log({samples});\n        let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n        let meanProb = this.ensembleProbFit(modelList, sampleTensor);\n        let predict = meanProb.argMax(1);\n        return predict;\n    }\n\n    async ensembleOneHotPredict(modelList, sampleTensor){\n        let meanProb = await this.ensembleProbFit(modelList, sampleTensor);\n        let predict = meanProb.argMax(1);\n        let oneHotPredict = this.T.oneHot(predict, this.NumClasses);\n        return oneHotPredict;\n    }\n};\nexport default PipelineEnsemblePredictMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 601,
    "kind": "class",
    "name": "PipelineEnsemblePredictMixins",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsemblePredicting.mixins.js",
    "importStyle": "PipelineEnsemblePredictMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 602,
    "kind": "method",
    "name": "ensembleProbFit",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensembleProbFit",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 603,
    "kind": "method",
    "name": "ensemblePredict",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensemblePredict",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 604,
    "kind": "method",
    "name": "ensembleOneHotPredict",
    "memberof": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEnsemblePredicting.mixins.js~PipelineEnsemblePredictMixins#ensembleOneHotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "modelList",
        "types": [
          "*"
        ]
      },
      {
        "name": "sampleTensor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 605,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "content": "const PipelineEnsembleTrainingMixins = (PipelineClass)=> class extends PipelineClass{ \n};\nexport default PipelineEnsembleTrainingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 606,
    "kind": "class",
    "name": "PipelineEnsembleTrainingMixins",
    "memberof": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEnsembleTraining.mixins.js~PipelineEnsembleTrainingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEnsembleTraining.mixins.js",
    "importStyle": "PipelineEnsembleTrainingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 607,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineEvaluating.mixins.js",
    "content": "const PipelineEvaluatingMixins= (BasePipeline)=> class extends BasePipeline{\n    async accuracyTest(TestSampleGeneratorFn){\n        const T = this.T, F = this.F, R = this.R;\n        const testSampleGenerator = TestSampleGeneratorFn();\n        let testSize = 0, pass = 0;\n        for await (let {idx, batchSize, data} of testSampleGenerator){\n            let [batchSamples, batchLabels] = data;\n            let sampleTensor = T.tensor(batchSamples).reshape([batchSize, -1]).asType('float32'); \n            let labelTensor = T.tensor(batchLabels).reshape([batchSize, -1]);\n            let pipelineOutTensor = this.runPipeline(sampleTensor);\n            let onehotPredict = this.OneHotPredict(pipelineOutTensor);   \n            let correctPredicts = onehotPredict.mul(labelTensor);\n            pass += correctPredicts.sum().dataSync()[0];\n            testSize += batchSize;\n        }\n        let accuracy = pass / testSize;\n        return {accuracy, pass};        \n    }\n};\n\nexport default PipelineEvaluatingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineEvaluating.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 608,
    "kind": "class",
    "name": "PipelineEvaluatingMixins",
    "memberof": "causality/src/pipeline/pipelineEvaluating.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineEvaluating.mixins.js",
    "importStyle": "PipelineEvaluatingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "BasePipeline"
    ]
  },
  {
    "__docId__": 609,
    "kind": "method",
    "name": "accuracyTest",
    "memberof": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineEvaluating.mixins.js~PipelineEvaluatingMixins#accuracyTest",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "TestSampleGeneratorFn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"accuracy\": *, \"pass\": *}"
      ]
    }
  },
  {
    "__docId__": 610,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineFunction.mixins.js",
    "content": "const PipelineFunctionMixins = (FunctionClass)=> class extends FunctionClass{ \n    range(len){\n        return this.R.range(0, len);\n    }\n\n    isParameter(val){\n        const R = this.R;\n        return R.is(Array)(val) && R.all(R.is(Number), val);\n    }\n\n    getPipeline(netConfig){\n        //TODO: make assertor\n        return this.R.prop('Pipeline', netConfig);\n    }\n    \n    getHyperParameter(netConfig){\n        //TODO: make assertor\n        return this.R.prop('HyperParameters', netConfig);\n    }\n    \n    getTraverse(){\n        return R.curry(function(keys, item){\n            R.pipe.apply(null, R.map(R.prop, keys))(item);\n        }); \n    }\n    \n    isTensor(object){\n        return object.size !== undefined && object.shape !== undefined && object.dtype !== undefined;\n    }\n};\n\nexport default PipelineFunctionMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineFunction.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 611,
    "kind": "class",
    "name": "PipelineFunctionMixins",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineFunction.mixins.js",
    "importStyle": "PipelineFunctionMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "FunctionClass"
    ]
  },
  {
    "__docId__": 612,
    "kind": "method",
    "name": "range",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#range",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "len",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 613,
    "kind": "method",
    "name": "isParameter",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#isParameter",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 614,
    "kind": "method",
    "name": "getPipeline",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getPipeline",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 615,
    "kind": "method",
    "name": "getHyperParameter",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getHyperParameter",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 616,
    "kind": "method",
    "name": "getTraverse",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#getTraverse",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 617,
    "kind": "method",
    "name": "isTensor",
    "memberof": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineFunction.mixins.js~PipelineFunctionMixins#isTensor",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 618,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "content": "const PipelineHyperParametersMixins = (PipelineClass)=> class extends PipelineClass{\n    setHyperParametersByConfig(netConfig){\n        this.hyperParameters = this.F.getHyperParameter(netConfig);\n        this.hyperParameterAcquisition();\n    }\n    hyperParameterAcquisition(){\n        console.log('hyperParameterAcquisition');\n        const R = this.R; \n        let hyperParameters = this.hyperParameters;\n        if(!hyperParameters){\n            throw Error(`${hyperParameters} not hyperParameters`);\n        }\n        function replaceIfMatch(value, hyperParameters){\n            if(R.is(String, value) && R.startsWith('$', value)){\n                const key = R.slice(1, Infinity, value);\n                let param = R.prop(key, hyperParameters);\n                if(!param){\n                    throw Error(`${key} not found in ${Object.keys(hyperParameters)}`);\n                }\n                return param;\n            }\n            return value;\n        }\n        const doReplaceIfMatch = R.curry(replaceIfMatch)(R.__, hyperParameters);\n        function replaceHyperParameter(pipelineItem){\n            if(R.is(Array, pipelineItem)){\n                return pipelineItem.map(item=>replaceHyperParameter(item));\n            }\n            else if(R.is(Object, pipelineItem)){\n                if(typeof(pipelineItem) === 'function'){//omg, js type detect!!!\n                    return pipelineItem;\n                }\n                else{\n                    let ret = {};\n                    for(let key of Object.keys(pipelineItem)){\n                        ret[key] = replaceHyperParameter(pipelineItem[key]);\n                    }\n                    return ret;\n                }\n            }\n            else{\n                return doReplaceIfMatch(pipelineItem);\n            }\n        }\n        this.pipeline = replaceHyperParameter(this.basePipeline);\n        console.log({basePipeline:this.basePipeline, pipeline: this.pipeline});\n    }\n\n    set HyperParameters(hyperParameters){\n        this.hyperParameters = hyperParameters;\n    }\n\n    get HyperParameters(){\n        return this.hyperParameters;\n    }\n\n    set SampleSize(numSamples){\n        if(this.HyperParameters.SampleSize !== numSamples){\n            this.HyperParameters.SampleSize = numSamples;\n            this.hyperParameterAcquisition();\n        }\n    }\n\n    get SampleSize(){\n        return this.HyperParameters.SampleSize;\n    }\n};\nexport default PipelineHyperParametersMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 619,
    "kind": "class",
    "name": "PipelineHyperParametersMixins",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineHyperParameters.mixins.js",
    "importStyle": "PipelineHyperParametersMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 620,
    "kind": "method",
    "name": "setHyperParametersByConfig",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#setHyperParametersByConfig",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "netConfig",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 621,
    "kind": "member",
    "name": "hyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#hyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 622,
    "kind": "method",
    "name": "hyperParameterAcquisition",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#hyperParameterAcquisition",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 623,
    "kind": "member",
    "name": "pipeline",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#pipeline",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 624,
    "kind": "set",
    "name": "HyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#HyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 626,
    "kind": "get",
    "name": "HyperParameters",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#HyperParameters",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 627,
    "kind": "set",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 628,
    "kind": "get",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineHyperParameters.mixins.js~PipelineHyperParametersMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 629,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineParameters.mixins.js",
    "content": "const PipelineParametersMixins = (PipelineClass)=> class extends PipelineClass{ \n    get Parameters(){\n        if(!this.parameters){\n            throw Error('parameter must be set');\n        }\n        return (async ()=>{\n            const Fn = async (param)=>(Array.from(await param.data()));\n            let params = await this.extractParamFromTensorDict(this.parameters, Fn);\n            return params;\n        })();\n    }\n    set Parameters(params){\n        if(!this.pipeline){\n            throw Error('pipeline is not defined and must be set from basePipeline');\n        }\n        this.parameters = this.setOrInitParams(this.pipeline, params);\n    }\n    async extractParamFromTensorDict(params, fn){\n        const F = this.F, R = this.R;\n        const Traveller = async (params, fn)=>{\n            if(F.isTensor(params)){\n                return await fn(params);\n            }\n            else{\n                let kVals = R.toPairs(params);\n                let res = {};\n                for(let [k, val] of kVals){\n                    res[k] = await Traveller(val, fn); \n                }\n                return res;\n            }\n        };\n        return Traveller(params, fn);\n    };\n    async parametersSummary(){\n        if(!this.parameters){\n            throw Error('parameter must be set');\n        }\n        const Fn = async (param)=>Array.from(await param.mean().data());\n        return await this.extractParamFromTensorDict(this.parameters, Fn);\n    }\n    setOrInitParams(pipeline, netParams){\n        const R = this.R, T = this.T, F = this.F;\n        let pipeParams = R.fromPairs(R.filter(([k,v])=>v !== undefined,\n                                R.map(R.__, pipeline)(p=>[p.Name, p.Parameters])));\n        const SetOrInit = (mainValue, subVal)=>{\n            let keys = R.keys(mainValue);\n            let keyMainValSubVal = R.map((k)=> [k, R.prop(k, mainValue), R.propOr(null, k, subVal)], keys);\n            const ValMapping = ([key, mainVal, subVal])=>{\n                if(F.isParameter(mainVal)){\n                    const paramShape = mainVal;\n                    if(R.isNil(subVal)){\n                        return [key, T.variable(T.randomNormal(paramShape))];\n                    }\n                    else{\n                        return [key, T.variable(T.tensor(subVal).reshape(paramShape))];\n                    }\n                }\n                else{\n                    return [key, SetOrInit(mainVal, subVal)];\n                }\n            };\n            return R.fromPairs(R.map(ValMapping, keyMainValSubVal));\n        };\n        return SetOrInit(pipeParams, netParams);\n    }\n\n    async getSavedParams(){\n        let fileList = await this.storage.getFileList(this.saveModelDir);\n        return fileList.map(fileName=>fileName.replace(this.saveModelDir,''));\n    }\n\n    async saveParams(fileName){\n        const params = await this.Parameters;\n        await this.storage.writeFile(this.saveModelDir + fileName, JSON.stringify(params));\n        return params;\n    }\n    async loadParams(fileName){\n        let strParams = await this.storage.readFile(this.saveModelDir+fileName);\n        let params = JSON.parse(strParams);\n        this.Parameters = params;\n        return await this.Parameters;\n    }\n};\n\nexport default PipelineParametersMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineParameters.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 630,
    "kind": "class",
    "name": "PipelineParametersMixins",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineParameters.mixins.js",
    "importStyle": "PipelineParametersMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 631,
    "kind": "get",
    "name": "Parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 632,
    "kind": "set",
    "name": "Parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#Parameters",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 633,
    "kind": "member",
    "name": "parameters",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 634,
    "kind": "method",
    "name": "extractParamFromTensorDict",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#extractParamFromTensorDict",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      },
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "parametersSummary",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#parametersSummary",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 636,
    "kind": "method",
    "name": "setOrInitParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#setOrInitParams",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "pipeline",
        "types": [
          "*"
        ]
      },
      {
        "name": "netParams",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 637,
    "kind": "method",
    "name": "getSavedParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#getSavedParams",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 638,
    "kind": "method",
    "name": "saveParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#saveParams",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 639,
    "kind": "method",
    "name": "loadParams",
    "memberof": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineParameters.mixins.js~PipelineParametersMixins#loadParams",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "causality/src/pipeline/pipelinePredicting.mixins.js",
    "content": "const PipelinePredictMixins = (PipelineClass)=> class extends PipelineClass{\n\n    predict(samples, numSamples=1){\n        const Predict = this.Predict;\n        const T = this.T;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n            let pipeOutput = this.runPipeline(sampleTensor);\n            return Predict(pipeOutput);\n        });\n    }\n\n    onehotPredict(samples, numSamples=1){\n        const OneHotPredict = this.OnehotPredict;\n        const T = this.T;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(samples).reshape([numSamples, -1]).asType('float32'); \n            let pipeOutput = this.runPipeline(sampleTensor);\n            return OneHotPredict(pipeOutput);\n        });\n    }\n};\nexport default PipelinePredictMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelinePredicting.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "class",
    "name": "PipelinePredictMixins",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelinePredicting.mixins.js",
    "importStyle": "PipelinePredictMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "predict",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins#predict",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 644,
    "kind": "method",
    "name": "onehotPredict",
    "memberof": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelinePredicting.mixins.js~PipelinePredictMixins#onehotPredict",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 645,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineRunner.mixins.js",
    "content": "const PipelineRunnerMixins = (PipelineClass)=> class extends PipelineClass{\n    runOpFlow(value, flow, parameters){\n        const R = this.R;\n        const OpsRunner = R.addIndex(R.reduce)(R.__,{result: value, trace: {}}, flow);\n        var {result, trace} = OpsRunner(({result, trace}, node, idx)=>{\n            if(node.Parameter){\n                let params = parameters[node.Parameter];\n                result = result[node.Op](params, ...node.Args);\n            }\n            else{\n                result = result[node.Op](...node.Args);    \n            };\n            trace[idx] = result.shape;\n            return {result, trace};\n        });\n        return {result, trace};\n    }\n\n    runOpLayer(value, net, parameters){\n        let result = net(value, parameters);\n        let trace = {};\n        return {result, trace};\n    }\n    runLayer(value, layerConfigure, layerParameters){\n        const {Name, Type, Flow, Net} = layerConfigure;\n        this.logger.debug({Name, Type, Flow, Net});\n        if(Type === 'Tensor'){\n            let {result, trace} = this.runOpFlow(value, Flow, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else if(Type === 'Layer'){\n            let {result, trace} = this.runOpLayer(value, Net, layerParameters);\n            return {[Name]: result, trace};\n        }   \n        else{\n            throw Error('type must be either Layer or Tensor');\n        }\n    }\n    \n    tracing(traces, name, trace){\n        if(traces){\n            traces.push({[name]: trace});\n        }\n    }\n    runPipeline(samples, traces=[]){\n        let pipeValue = {PipeInput: samples}, lastLayer = 'PipeInput';\n        for(let layer of this.pipeline){\n            let layerOutput = this.runLayer(pipeValue[lastLayer], layer, this.parameters[layer.Name]);\n            pipeValue[layer.Name] = layerOutput[layer.Name];\n            lastLayer = layer.Name;\n            this.tracing(traces, layer.Name, layerOutput.trace);\n        }\n        this.logger.debug({traces});\n        return pipeValue[lastLayer];\n    }\n};\n\nexport default PipelineRunnerMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineRunner.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 646,
    "kind": "class",
    "name": "PipelineRunnerMixins",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineRunner.mixins.js",
    "importStyle": "PipelineRunnerMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 647,
    "kind": "method",
    "name": "runOpFlow",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runOpFlow",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "flow",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 648,
    "kind": "method",
    "name": "runOpLayer",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runOpLayer",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "net",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"result\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "name": "runLayer",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runLayer",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerConfigure",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerParameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Name\": *, \"trace\": *}"
      ]
    }
  },
  {
    "__docId__": 650,
    "kind": "method",
    "name": "tracing",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#tracing",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "traces",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "trace",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 651,
    "kind": "method",
    "name": "runPipeline",
    "memberof": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineRunner.mixins.js~PipelineRunnerMixins#runPipeline",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "samples",
        "types": [
          "*"
        ]
      },
      {
        "name": "traces",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 652,
    "kind": "file",
    "name": "causality/src/pipeline/pipelineTraining.mixins.js",
    "content": "const PipelineTrainingMixins = (PipelineClass)=> class extends PipelineClass{\n    trainProgress(epochIdx, losses, numEpochs){\n        if(!this.startTimeStamp){\n            this.startTimeStamp = new Date();\n        }\n        if(this.logger.progress){\n            this.logger.progress({epochIdx, losses,  \n                         'start at': this.startTimeStamp.toISOString(), \n                         'elapse in second': (new Date() - this.startTimeStamp)/1000});\n        }\n        if(epochIdx === numEpochs - 1){//done\n            this.startTimeStamp = null;\n        }\n    }\n    \n    loss(data, numSamples){\n        const Loss = this.Loss;\n        this.SampleSize = numSamples;\n        const T = this.T;\n        let [batchSamples, batchLabels] = data;\n        return T.tidy(()=>{\n            let sampleTensor = T.tensor(batchSamples).reshape([numSamples, -1]).asType('float32'); \n            let labelTensor = T.tensor(batchLabels).reshape([numSamples, -1]);\n            let pipelineOutTensor = this.runPipeline(sampleTensor);\n            let loss = Loss(pipelineOutTensor, labelTensor);\n            return loss;\n        });\n    };\n    \n    async train(SampleGeneratorFn, numEpochs = 2){\n        const F = this.F, R = this.R;\n        const Trainer = this.Trainer;\n        let losses = [];\n        for(let epochIdx of F.range(numEpochs)){\n            const sampleGenerator = SampleGeneratorFn(epochIdx);\n            let iterLosses = [];\n            for await (let {idx, batchSize, data} of sampleGenerator){\n                Trainer.fit(()=>{\n                    let loss = this.loss(data, batchSize);\n                    iterLosses.push(loss.dataSync());\n                    return loss;\n                });\n            }\n            losses.push(R.mean(iterLosses));\n            iterLosses = [];\n            this.trainProgress(epochIdx, losses, numEpochs);\n        }\n        return new Promise((resolve, reject)=>{\n            resolve({losses});\n        });\n    };\n};\nexport default PipelineTrainingMixins;",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/src/pipeline/pipelineTraining.mixins.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 653,
    "kind": "class",
    "name": "PipelineTrainingMixins",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js",
    "static": true,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "access": "public",
    "export": true,
    "importPath": "causal-net/causality/src/pipeline/pipelineTraining.mixins.js",
    "importStyle": "PipelineTrainingMixins",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "PipelineClass"
    ]
  },
  {
    "__docId__": 654,
    "kind": "method",
    "name": "trainProgress",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#trainProgress",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "epochIdx",
        "types": [
          "*"
        ]
      },
      {
        "name": "losses",
        "types": [
          "*"
        ]
      },
      {
        "name": "numEpochs",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 655,
    "kind": "member",
    "name": "startTimeStamp",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#startTimeStamp",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 657,
    "kind": "method",
    "name": "loss",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#loss",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "numSamples",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 658,
    "kind": "member",
    "name": "SampleSize",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#SampleSize",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 659,
    "kind": "method",
    "name": "train",
    "memberof": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "causality/src/pipeline/pipelineTraining.mixins.js~PipelineTrainingMixins#train",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "SampleGeneratorFn",
        "types": [
          "*"
        ]
      },
      {
        "name": "numEpochs",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 2,
        "defaultValue": "2"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "***This project is immature and under active development. Beside the core ideas, other specs, contents will be update rapidly***\n\n# Portable Deep learning model with Causality\n\nCausality is a free and open source javascript library that allows building isomorphic machine learning pipeline. Your trained model can be deployed on client's devices via web environment without re-piping your code. \n\nOn top of Tensorflowjs, our set of reusable components handle data preprocessing, infer data representation, visualizing, training and evaluation on both node and web environment with the same APIs. Thus reduce engineering efforts for making production AI services. By using the same language, developers can simplify development setup, mitigate the communication cost, better coding pattern and share more ideas. \n\nMoreover, with AI models are loaded as client' devices for performing interence, personal or sensitive data is not exposed to the service providers. We also invest in ensemble learning and the recent federated learning approach for distributed training while preserving data privacy without requiring any global data storage. \n\nResearchers can utilize built-in datasets and the prebuilt pipelines to prototype new model ideas and make research results easy to review, present and reproduce. We hope developers and researchers can find this project a meaningful work to contribute and collaborate to push forward a new class of affordable, transparent deep learning services. \n\nThe commercial version of this library, Moderator, is our effort for moderating social network contents heading to protecting community culture. The AI moderator, which is built up by community voted training data, transparently prevent bad contents from propagating, and re-ranking relevant contents prior to client views without revealing personal preference. The Causality, Moderator alongside with React Social Network are the ideas from our startup, Red Gold, for building a smarter social network with community culture respect and transparent AI moderator.\n\nFull doc link: (https://red-gold.github.io/causality-docs/)\n",
    "longname": "/home/huynhnguyen/github/causality/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "***This project is immature\nand under active development, beside the core ideas, other specs, contents will be update rapidly***\n\n# Portable Deep learning model with Causality\n\n![Photo on Unsplash](./manual/asset/coffee-main.jpg)\n\nCausality is a free and open source javascript library that allows building isomorphic machine learning pipeline. Your trained model can be deployed on client's devices via web environment without re-piping your code. \n\nOn top of Tensorflowjs, our set of reusable components handle data preprocessing, infer data representation, visualizing, training and evaluation on both node and web environment with the same APIs. Thus reduce engineering efforts for making production AI services. By using the same language, developers can simplify development setup, mitigate the communication cost, better coding pattern and share more ideas. \n\nMoreover, with AI models are loaded as client' devices for performing interence, personal or sensitive data is not exposed to the service providers. We also invest in ensemble learning and the recent federated learning approach for distributed training while preserving data privacy without requiring any global data storage. \n\nResearchers can utilize built-in datasets and the prebuilt pipelines to prototype new model ideas and make research results easy to review, present and reproduce. We hope developers and researchers can find this project a meaningful work to contribute and collaborate to push forward a new class of affordable, transparent deep learning services. \n\nThe commercial version of this library, Moderator, is our effort for moderating social network contents heading to protecting community culture. The AI moderator, which is built up by community voted training data, transparently prevent bad contents from propagating, and re-ranking relevant contents prior to client views without revealing personal preference. The Causality, Moderator alongside with React Social Network are the ideas from our startup, Red Gold, for building a smarter social network with community culture respect and transparent AI moderator.",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/index.md",
    "name": "./causal-doc/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/asset",
    "name": "./causal-doc/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/huynhnguyen/github/causality/causal-doc/overview/introduction.md",
    "name": "./causal-doc/overview/introduction.md",
    "content": "![Photo by Iker Urteaga on Unsplash](./asset/iker-urteaga-246955-unsplash.jpg)\n# Introduction to mixins\nCausality intensively uses [mixin](https://en.wikipedia.org/wiki/Mixin) for composing class. Mixins allow constructing elastic class that imports enough methods for target usages. We try to mitigate redudant methods and reduce bundle size. The main mixins for building pipeline class can be found at `/src/` folder which prebuilt CausalNet pipeline ready to use (check tutorials session). Advance mixins \nare seperated into different sub-packages under the `/packages/` folder. Each sub-package exports at most one mixin for building pipeline, for example, causality-optimizer provide trainerMixins for optimizing parameters. \n\n## Pipeline package\nCausality attempts to standardize the pipeline into those subsequent steps:\n- Sampling:\n- Preprocessing:\n- Representation:\n- Train:\n- Evaluate:\n\nHere are some machine learning concept:\n- Parameters:\n- Hyper parameters:\n- Layers:\n- Optimizers:\n\n## Sub-packages\nExcept for storage, and log class.\n### causality-core\nProvides two primitives classes Tensor and Function. Representation object. \n- Pipeline mixins: none\n- Instances: \n- Classes:\n- Class mixins: \n\n### causality-datasets\nAll data related classes are extends from either Tensor or Function class\n- Pipeline mixins: none\n- Instances: \n- Classes:\n- Class mixins: \n\n### causality-preprocessing\n- Pipeline mixins: none\n- Instances: \n- Classes:\n- Class mixins: \n\n### causality-sampling\n- Pipeline mixins: SamplingMixins\n- Instances: \n- Classes:\n- Class mixins: \n### causality-models\n- Pipeline mixins: TrainerMixins\n- Instances: causalityModel\n- Classes: \n- Class mixins: \n### causality-layer\n- Pipeline mixins: LayerMixins\n- Instances: LayerMixins\n- Classes: causalityLayer\n- Class mixins: \n### causality-memcache\n- Pipeline mixins: none\n- Instances: \n- Classes:\n- Class mixins: \n### causality-storage\n- Pipeline mixins: StorageMixins\n- Instances: indexDBStorage\n- Base classes: BaseStorage\n- Class mixins: \n### causality-utils\n- Pipeline mixins: none\n- Instances: \n- Classes:\n- Class mixins: \n\n\n\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 660,
    "kind": "testFile",
    "name": "causality/packages/causality-core/test/function.test.js",
    "content": "import {default as Function} from '../src/function';\n\ntest('function setIn should be okay', ()=>{\n    let F = new Function();\n    let setVal = F.setIn(['a','b','c'],'3',{a:1});\n    console.log(JSON.stringify(setVal));\n    expect(JSON.stringify(setVal)).toEqual(JSON.stringify({\"a\":{\"b\":{\"c\":\"3\"}}}));\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/test/function.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 661,
    "kind": "test",
    "name": "test0",
    "testId": 0,
    "memberof": "causality/packages/causality-core/test/function.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-core/test/function.test.js~test0",
    "access": null,
    "description": "function setIn should be okay",
    "lineNumber": 3
  },
  {
    "__docId__": 662,
    "kind": "testFile",
    "name": "causality/packages/causality-core/test/tensor.test.js",
    "content": "import {default as Tensor} from '../src/tensor';\n\ntest('tensor init should be okay', ()=>{\n    let T = new Tensor();\n    expect(T.CoreTensor).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-core/test/tensor.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 663,
    "kind": "test",
    "name": "test1",
    "testId": 1,
    "memberof": "causality/packages/causality-core/test/tensor.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-core/test/tensor.test.js~test1",
    "access": null,
    "description": "tensor init should be okay",
    "lineNumber": 3
  },
  {
    "__docId__": 664,
    "kind": "testFile",
    "name": "causality/packages/causality-datasets/test/dataset.test.js",
    "content": "import {default as MnistDataset} from '../src/MNIST.ImgDataset';\ntest('dataset no configure instance should be not okay', ()=>{\n    const Init = ()=>{ \n        try{ let MNIST = new MnistDataset(); }\n        catch(e){\n            throw Error(e);\n        } \n    };\n    expect(Init()).toThrowError();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-datasets/test/dataset.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 665,
    "kind": "test",
    "name": "test2",
    "testId": 2,
    "memberof": "causality/packages/causality-datasets/test/dataset.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-datasets/test/dataset.test.js~test2",
    "access": null,
    "description": "dataset no configure instance should be not okay",
    "lineNumber": 2
  },
  {
    "__docId__": 666,
    "kind": "testFile",
    "name": "causality/packages/causality-log/test/termlog.test.js",
    "content": "import {Logger} from '../src/index';\n\ntest('logger instance should be defined', ()=>{\n    expect(Logger).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-log/test/termlog.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 667,
    "kind": "test",
    "name": "test3",
    "testId": 3,
    "memberof": "causality/packages/causality-log/test/termlog.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-log/test/termlog.test.js~test3",
    "access": null,
    "description": "logger instance should be defined",
    "lineNumber": 3
  },
  {
    "__docId__": 668,
    "kind": "testFile",
    "name": "causality/packages/causality-memcache/test/memdown.test.js",
    "content": "import {memDownCache} from '../src/index';\n\ntest('memdown instance should be define', ()=>{\n    expect(memDownCache).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-memcache/test/memdown.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 669,
    "kind": "test",
    "name": "test4",
    "testId": 4,
    "memberof": "causality/packages/causality-memcache/test/memdown.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-memcache/test/memdown.test.js~test4",
    "access": null,
    "description": "memdown instance should be define",
    "lineNumber": 3
  },
  {
    "__docId__": 670,
    "kind": "testFile",
    "name": "causality/packages/causality-preprocessing/test/preprocessing.test.js",
    "content": "import {Preprocessing} from '../src/index';\nimport {Function as BaseFunction} from 'causal-net.core';\n\ntest('preprocessing instance should be define', ()=>{\n    console.log({BaseFunction});\n    let preprocessing = new Preprocessing();\n    expect(preprocessing).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-preprocessing/test/preprocessing.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 671,
    "kind": "test",
    "name": "test5",
    "testId": 5,
    "memberof": "causality/packages/causality-preprocessing/test/preprocessing.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-preprocessing/test/preprocessing.test.js~test5",
    "access": null,
    "description": "preprocessing instance should be define",
    "lineNumber": 4
  },
  {
    "__docId__": 672,
    "kind": "testFile",
    "name": "causality/packages/causality-sampling/test/sampling.test.js",
    "content": "import { default as causalNetSampling } from '../src/causalNetSampling';\n/** @test {CausalNetSampling} */\ntest('negSampling should be okay', async ()=>{\n    let samples = causalNetSampling.negSampling(4, [0, 1], [0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]);\n    expect(samples.length).toEqual(4);\n})\n/** @test {CausalNetSampling} */\ntest('subSampling should be okay', async ()=>{\n    let samples = causalNetSampling.subSampling(4, 10);\n    expect(samples.length).toEqual(4);\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-sampling/test/sampling.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 673,
    "kind": "test",
    "name": "test6",
    "testId": 6,
    "memberof": "causality/packages/causality-sampling/test/sampling.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-sampling/test/sampling.test.js~test6",
    "access": null,
    "description": "negSampling should be okay",
    "lineNumber": 3,
    "testTargets": [
      "CausalNetSampling"
    ]
  },
  {
    "__docId__": 674,
    "kind": "test",
    "name": "test7",
    "testId": 7,
    "memberof": "causality/packages/causality-sampling/test/sampling.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-sampling/test/sampling.test.js~test7",
    "access": null,
    "description": "subSampling should be okay",
    "lineNumber": 8,
    "testTargets": [
      "CausalNetSampling"
    ]
  },
  {
    "__docId__": 675,
    "kind": "testFile",
    "name": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "content": "import {indexDBStorage} from '../src/index';\n/** @test {IndexDBStorage} */\ntest('indexdb write file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    expect(writePath).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb read file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    let data = await indexDBStorage.readFile(writePath);    \n    expect(data).toBe('12345');\n})\n/** @test {IndexDBStorage} */\ntest('indexdb delete file should be okay', async ()=>{\n    let writePath = await indexDBStorage.writeFile('temp','12345');\n    let filePath = await indexDBStorage.deleteFile(writePath);    \n    return await indexDBStorage.readFile('temp').catch(e=>{\n        expect(e).toMatch(/read/);\n    })\n})\n/** @test {IndexDBStorage} */\ntest('indexdb batch write should be okay', async ()=>{\n    let ops = [//no op get\n            { type: 'put', key: 'temp', value: '123445' },\n            { type: 'del', key: 'temp' }];\n    let res = await indexDBStorage.batch(ops);\n    console.log({res});\n    expect(res).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb list file should be okay', async ()=>{\n    let fileList = await indexDBStorage.getFileList('/');\n    console.log({fileList});\n    expect(fileList).toBeDefined();\n})\n/** @test {IndexDBStorage} */\ntest('indexdb delete by prefix should be okay', async ()=>{\n    let writePath = await indexDBStorage.deleteFileByPrefix('/');\n    console.log({writePath});\n    expect(writePath).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-storage/test/indexdbStorage.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 676,
    "kind": "test",
    "name": "test8",
    "testId": 8,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test8",
    "access": null,
    "description": "indexdb write file should be okay",
    "lineNumber": 3,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 677,
    "kind": "test",
    "name": "test9",
    "testId": 9,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test9",
    "access": null,
    "description": "indexdb read file should be okay",
    "lineNumber": 8,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 678,
    "kind": "test",
    "name": "test10",
    "testId": 10,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test10",
    "access": null,
    "description": "indexdb delete file should be okay",
    "lineNumber": 14,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 679,
    "kind": "test",
    "name": "test11",
    "testId": 11,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test11",
    "access": null,
    "description": "indexdb batch write should be okay",
    "lineNumber": 22,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 680,
    "kind": "test",
    "name": "test12",
    "testId": 12,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test12",
    "access": null,
    "description": "indexdb list file should be okay",
    "lineNumber": 31,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 681,
    "kind": "test",
    "name": "test13",
    "testId": 13,
    "memberof": "causality/packages/causality-storage/test/indexdbStorage.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-storage/test/indexdbStorage.test.js~test13",
    "access": null,
    "description": "indexdb delete by prefix should be okay",
    "lineNumber": 37,
    "testTargets": [
      "IndexDBStorage"
    ]
  },
  {
    "__docId__": 682,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/assert.test.js",
    "content": "import {default as Assert} from '../src/assert';\n/** @test {Assert} */\ntest('assert should be define', async ()=>{\n    /** @test {Assert#instance} */\n    expect(Assert).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/assert.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 683,
    "kind": "test",
    "name": "test14",
    "testId": 14,
    "memberof": "causality/packages/causality-utils/test/assert.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/assert.test.js~test14",
    "access": null,
    "description": "assert should be define",
    "lineNumber": 3,
    "testTargets": [
      "Assert"
    ]
  },
  {
    "__docId__": 684,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/csv.test.js",
    "content": "import {default as CSVUtils } from '../src/csv';\n/** @test {CSVUtils} */\ntest('create PNG file must success', async ()=>{\n    let csv = CSVUtils.CoreCSV;\n    /** @test {CSVUtils#instance} */\n    expect(csv).toBeDefined();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/csv.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 685,
    "kind": "test",
    "name": "test15",
    "testId": 15,
    "memberof": "causality/packages/causality-utils/test/csv.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/csv.test.js~test15",
    "access": null,
    "description": "create PNG file must success",
    "lineNumber": 3,
    "testTargets": [
      "CSVUtils"
    ]
  },
  {
    "__docId__": 686,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/fetch.test.js",
    "content": "import {default as Fetch} from '../src/fetch';\n/** @test {Fetch} */\ntest('fetch file should be okay', async ()=>{\n    const link = 'https://avatars3.githubusercontent.com/u/43268620?s=200&v=4';\n    let data = await Fetch.fetchData(link);\n    /** @test {Fetch#instance} */\n    expect(data).toBeDefined();\n})\n",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/fetch.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 687,
    "kind": "test",
    "name": "test16",
    "testId": 16,
    "memberof": "causality/packages/causality-utils/test/fetch.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/fetch.test.js~test16",
    "access": null,
    "description": "fetch file should be okay",
    "lineNumber": 3,
    "testTargets": [
      "Fetch"
    ]
  },
  {
    "__docId__": 688,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/platform.test.js",
    "content": "import {default as Platform} from '../src/platform';\n/** @test {Platform} */\ntest('platform must return', ()=>{\n    let platform = Platform.currentPlatform();\n    /** @test {Platform#instance} */\n    expect(platform).toBeDefined();\n});\ntest('platform mix should works', ()=>{\n    class A{\n        constructor(){\n        }\n        sayA(){\n            return 'say A';\n        }\n    }\n    const AMixins = (Base)=>class extends Base{\n        sayAExtend(){\n            return 'say A with mixins';\n        }\n    }\n    class AExtends extends Platform.mixWith(A, [AMixins]){}\n    const a = new AExtends();\n    /** @test {Platform#mixWith} */\n    expect(a.sayAExtend()).toEqual('say A with mixins');\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/platform.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 689,
    "kind": "test",
    "name": "test17",
    "testId": 17,
    "memberof": "causality/packages/causality-utils/test/platform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/platform.test.js~test17",
    "access": null,
    "description": "platform must return",
    "lineNumber": 3,
    "testTargets": [
      "Platform"
    ]
  },
  {
    "__docId__": 690,
    "kind": "test",
    "name": "test18",
    "testId": 18,
    "memberof": "causality/packages/causality-utils/test/platform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/platform.test.js~test18",
    "access": null,
    "description": "platform mix should works",
    "lineNumber": 8
  },
  {
    "__docId__": 691,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/png.test.js",
    "content": "import {default as PNGUtils } from '../src/png';\n/** @test {PNGUtils} */\ntest('create PNG file must success', async ()=>{\n    let PNG = PNGUtils.CorePNG;\n    let png = new PNG({width:1, height:1});\n    png.data = Buffer.from([128,128,128,255]);\n    /** @test {PNGUtils#createFile} */\n    expect(png).toBeDefined();\n});",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/png.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 692,
    "kind": "test",
    "name": "test19",
    "testId": 19,
    "memberof": "causality/packages/causality-utils/test/png.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/png.test.js~test19",
    "access": null,
    "description": "create PNG file must success",
    "lineNumber": 3,
    "testTargets": [
      "PNGUtils"
    ]
  },
  {
    "__docId__": 693,
    "kind": "testFile",
    "name": "causality/packages/causality-utils/test/stream.test.js",
    "content": "import {default as Stream} from '../src/stream';\n/** @test {Stream} */\ntest('Stream readable must define', async ()=>{\n    let reader = Stream.makeReadable();\n    /** @test {Stream#instance} */\n    expect(reader).toBeDefined();\n})",
    "static": true,
    "longname": "/home/huynhnguyen/github/causality/packages/causality-utils/test/stream.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 694,
    "kind": "test",
    "name": "test20",
    "testId": 20,
    "memberof": "causality/packages/causality-utils/test/stream.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "causality/packages/causality-utils/test/stream.test.js~test20",
    "access": null,
    "description": "Stream readable must define",
    "lineNumber": 3,
    "testTargets": [
      "Stream"
    ]
  }
]